import{_ as o}from"./chunks/ArticleMetadata.H12JcJLK.js";import{_ as A,E as c,c as g,o as l,j as s,I as e,aj as t,w as k,b as r,e as d,a as y}from"./chunks/framework._AF764y6.js";const X=JSON.parse('{"title":"Nginx","description":"","frontmatter":{"title":"Nginx","date":"2023-10-26T21:27:04.000Z","permalink":"/nginx/","categories":["运维"],"tags":["nginx"],"author":"Manaphy"},"headers":[],"relativePath":"ops/其他/05.Nginx.md","filePath":"ops/其他/05.Nginx.md","lastUpdated":1744301414000}'),F={name:"ops/其他/05.Nginx.md"},D=s("h1",{id:"nginx简介",tabindex:"-1"},[y("Nginx简介 "),s("a",{class:"header-anchor",href:"#nginx简介","aria-label":"Permalink to “Nginx简介”"},"​")],-1),C=t('<h2 id="常用版本分为四大阵营" tabindex="-1">常用版本分为四大阵营 <a class="header-anchor" href="#常用版本分为四大阵营" aria-label="Permalink to “常用版本分为四大阵营”">​</a></h2><ul><li>Nginx开源版 <a href="http://nginx.org/" target="_blank" rel="noreferrer">http://nginx.org/</a></li><li>Nginx plus 商业版 <a href="https://www.nginx.com" target="_blank" rel="noreferrer">https://www.nginx.com</a></li><li>Openresty <a href="http://openresty.org" target="_blank" rel="noreferrer">http://openresty.org</a></li><li>Tengine <a href="http://tengine.taobao.org/" target="_blank" rel="noreferrer">http://tengine.taobao.org/</a></li></ul><h2 id="nginx-概述" tabindex="-1">Nginx 概述 <a class="header-anchor" href="#nginx-概述" aria-label="Permalink to “Nginx 概述”">​</a></h2><div class="tip custom-block"><p class="custom-block-title">介绍</p><p>Nginx (&quot;engine x&quot;) 是一个高性能的 HTTP 和反向代理服务器,特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx 网站用户有：百度、京东、新浪、网易、腾讯、淘宝等</p><p>Nginx 可以作为静态页面的 web 服务器，同时还支持 CGI 协议的动态语言，比如 perl、php 等。但是不支持 java。Java 程序只能通过与 tomcat 配合完成。Nginx 专为性能优化而开发， 性能是其最重要的考量,实现上非常注重效率 ，能经受高负载的考验,有报告表明能支持高达 50,000 个并发连接数。</p><p>Nginx 不仅可以做反向代理，实现负载均衡。还能用作正向代理来进行上网等功能。</p><p><strong>正向代理</strong>：如果把局域网外的 Internet 想象成一个巨大的资源库，则局域网中的客户端要访问 Internet，则需要通过代理服务器来访问，这种代理服务就称为正向代理。</p><p><strong>反向代理</strong>，其实客户端对代理是无感知的，因为客户端不需要任何配置就可以访问，我们只需要将请求发送到反向代理服务器，由反向代理服务器去选择目标服务器获取数据后，在返回给客户端，此时反向代理服务器和目标服务器对外就是一个服务器，暴露的是代理服务器地址，隐藏了真实服务器 IP 地址。</p><p>客户端发送多个请求到服务器，服务器处理请求，有一些可能要与数据库进行交互，服务器处理完毕后，再将结果返回给客户端。</p><p><strong>动静分离</strong>：为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。</p></div><h1 id="安装-nginx" tabindex="-1">安装 Nginx <a class="header-anchor" href="#安装-nginx" aria-label="Permalink to “安装 Nginx”">​</a></h1>',5),m=t(`<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      TZ</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./html:/usr/share/nginx/html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./conf/nginx.conf:/etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./logs:/var/log/nginx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./conf.d:/etc/nginx/conf.d</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./cert:/etc/nginx/cert</span></span></code></pre></div><h1 id="nginx的配置文件" tabindex="-1">Nginx的配置文件 <a class="header-anchor" href="#nginx的配置文件" aria-label="Permalink to “Nginx的配置文件”">​</a></h1>`,2),B=t(`<h2 id="_1-配置文件解析" tabindex="-1">1. 配置文件解析 <a class="header-anchor" href="#_1-配置文件解析" aria-label="Permalink to “1. 配置文件解析”">​</a></h2><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#运行用户</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#user  nobody;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#业务进程,通常设置成和cpu的数量相等</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">worker_processes </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#全局错误日志</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#error_log  logs/error.log;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#error_log  logs/error.log  notice;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#error_log  logs/error.log  info;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#PID文件，记录当前启动的nginx的进程ID</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#pid        logs/nginx.pid;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#工作模式及连接数上限</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">events</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  worker_connections </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#单个后台worker process进程的最大并发链接数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #设定mime类型,类型由mime.types文件定义</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  include </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      mime.types;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #如果mime类型没匹配上,默认使用二进制流的方式传输。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> application/octet-stream;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #设定日志格式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  log_format </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> - $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> [$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">time_local</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">] &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">body_bytes_sent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_referer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &#39;&quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_user_agent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #日志存放位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /var/log/nginx/access.log  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #sendfile 指令指定 nginx 是否调用 sendfile 函数（零拷贝方式）来输出文件，对于普通应用，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">       on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #tcp_nopush     on;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #连接超时时间</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #keepalive_timeout  0;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  keepalive_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 65</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #gzip压缩开关</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #gzip  on;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #HTTP服务器</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #监听80端口，80端口是知名端口号，用于HTTP协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #定义使用www.xx.com访问</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> localhost;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #charset koi8-r;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #access_log  logs/host.access.log  main;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      #指向目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">      root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  html;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      #首页</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">      index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #错误处理页面（可选择性配置）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #error_page  404              /404.html;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    error_page </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  500</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 502</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 503</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 504</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  /50x.html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /50x.html </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">      root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="_2-常用配置清单" tabindex="-1">2. 常用配置清单 <a class="header-anchor" href="#_2-常用配置清单" aria-label="Permalink to “2. 常用配置清单”">​</a></h2><p><strong>侦听端口</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 标准HTTP协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 标准HTTPS协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # For http2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl http2;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 使用IPv6在80上侦听</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[::]:80;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 仅在使用IPv6时侦听</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[::]:80 ipv6only=on;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>访问日志</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 日志文件的相对路径或完整路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/path/to/file.log;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 日志开关</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  access_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>域名</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 侦听 yourdomain.com</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 侦听多个域名 server_name yourdomain.com www.yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 侦听所有域名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">*.yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 侦听所有顶级域</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.*;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 侦听未指定的主机名（侦听IP地址本身）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>静态资产</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/path/to/website;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>重定向</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">www.yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> http://yourdomain.com$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">www.yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /redirect-url </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> http://otherdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>反向代理</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://0.0.0.0:3000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>负载均衡</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> node_js </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 0.0.0.0:3000;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 0.0.0.0:4000;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 123.131.121.122</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://node_js;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>SSL 协议</strong></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/path/to/cert.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/path/to/privatekey.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_stapling </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_stapling_verify </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_trusted_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/path/to/fullchain.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1h</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_session_cache </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">shared:SSL:50m;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Strict-Transport-Security max-age=15768000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># HTTP到HTTPS的永久重定向</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">yourdomain.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> https://$host$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h1 id="nginx配置-反向代理" tabindex="-1">Nginx配置-反向代理 <a class="header-anchor" href="#nginx配置-反向代理" aria-label="Permalink to “Nginx配置-反向代理”">​</a></h1>`,20),u=t(`<h2 id="_1-反向代理实例一" tabindex="-1">1. 反向代理实例一 <a class="header-anchor" href="#_1-反向代理实例一" aria-label="Permalink to “1. 反向代理实例一”">​</a></h2><p>在<code>/root/docker/nginx/conf.d</code>路径中创建 reverse_proxy1.conf 添加以下内容</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 192.168.2.128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://192.168.2.128:28080/war/hello;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>重启nginx</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nginx</span></span></code></pre></div><p>访问<a href="./192.168.2.128">192.168.2.128</a>就会跳转到192.168.2.128:28080/war/hello</p><h2 id="_2-反向代理实例二" tabindex="-1">2. 反向代理实例二 <a class="header-anchor" href="#_2-反向代理实例二" aria-label="Permalink to “2. 反向代理实例二”">​</a></h2><p>在<code>/root/docker/nginx/conf.d</code>路径中创建 reverse_proxy2.conf 添加以下内容</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 192.168.2.128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /war-1/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://192.168.2.128:28081;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /war/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://192.168.2.128:28080;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="location指令说明" tabindex="-1">location指令说明 <a class="header-anchor" href="#location指令说明" aria-label="Permalink to “location指令说明”">​</a></h3><blockquote><p>该指令用于匹配URL。</p></blockquote><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> [ = | ~ | ~* | ^~] uri </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 优先级1,精确匹配，根路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> =/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 优先级2,以某个字符串开头,以av开头的，优先匹配这里，区分大小写</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ^~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /av </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/data/av/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 优先级3，区分大小写的正则匹配，匹配/media*****路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /media </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  alias </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/data/static/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 优先级4 ，不区分大小写的正则匹配，所有的****.jpg|gif|png 都走这里</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .*\\.(jpg|gif|png|js|css)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /data/av/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 优先7，通用匹配</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">匹配符</th><th style="text-align:left;">匹配规则</th><th style="text-align:left;">优先级</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">精确匹配</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">^~</td><td style="text-align:left;">已某个字符串开头</td><td style="text-align:left;">2</td></tr><tr><td style="text-align:left;">~</td><td style="text-align:left;">区分大小写的正则匹配</td><td style="text-align:left;">3</td></tr><tr><td style="text-align:left;">~*</td><td style="text-align:left;">不区分大小写的正则匹配</td><td style="text-align:left;">4</td></tr><tr><td style="text-align:left;">!~</td><td style="text-align:left;">区分大小写不匹配的正则</td><td style="text-align:left;">5</td></tr><tr><td style="text-align:left;">!~*</td><td style="text-align:left;">不区分大小写不匹配的正则</td><td style="text-align:left;">6</td></tr><tr><td style="text-align:left;">/</td><td style="text-align:left;">通用匹配，任何请求都会匹配到</td><td style="text-align:left;">7</td></tr></tbody></table><h1 id="nginx配置-负载均衡" tabindex="-1">Nginx配置-负载均衡 <a class="header-anchor" href="#nginx配置-负载均衡" aria-label="Permalink to “Nginx配置-负载均衡”">​</a></h1>`,14),_=t(`<p>在<code>/root/docker/nginx/conf.d</code>路径中创建 reverse_proxy3.conf 添加以下内容</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> myserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ip_hash</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 192.168.2.128:28080 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  server 192.168.2.128:28081 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  listen       </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 192.168.2.128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://myserver;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_connect_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>Nginx 提供了几种分配方式(策略)：</p><ul><li>轮询(默认)</li></ul><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除。</p><ul><li>weight</li></ul><p>weight 代表权重,默认为 1,权重越高被分配的客户端越多</p><p>指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> myserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 192.168.2.128:28080 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  server 192.168.2.128:28081 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><ul><li>ip_hash</li></ul><p>每个请求按访问ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> myserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ip_hash</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 192.168.2.128:28080 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  server 192.168.2.128:28081 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><ul><li>fair（第三方）</li></ul><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> myserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 192.168.2.128:28080 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  server 192.168.2.128:28081 </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  fair;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h1 id="nginx配置-动静分离" tabindex="-1">Nginx配置-动静分离 <a class="header-anchor" href="#nginx配置-动静分离" aria-label="Permalink to “Nginx配置-动静分离”">​</a></h1>`,16),E=t(`<p>Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分开，可以理解成使用 Nginx 处理静态页面，Tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种:</p><p>一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案；</p><p>另外一种方法就是动态跟静态文件混合在一起发布，通过 nginx 来分开。通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以使浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 Expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可， 所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件， 不建议使用 Expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个 URL，发送一个请求，比对服务器该文件最后更新时间没有变化，则不会从服务器抓取，返回状态码304，如果有修改，则直接从服务器重新下载，返回状态码 200。</p><p>在<code>/root/docker/nginx/conf.d</code>路径中创建 reverse_proxy4.conf 添加以下内容</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">       80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  server_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  192.168.2.128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  location</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /www/</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  		root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/share/nginx/html/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#在本地www中建立www目录 在www目录中放入动态资源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">      index</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> index.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  location</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /image/</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 		root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/share/nginx/html/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#在本地www目录中建立image目录 在image目录中放入静态资源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    autoindex</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#访问http://192.168.2.128/image/ 会显示静态文件目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h1 id="nginx配置http、https、ws、wss" tabindex="-1">Nginx配置Http、Https、WS、WSS <a class="header-anchor" href="#nginx配置http、https、ws、wss" aria-label="Permalink to “Nginx配置Http、Https、WS、WSS”">​</a></h1>`,6),x=t(`<h2 id="nginx配置http" tabindex="-1">Nginx配置Http <a class="header-anchor" href="#nginx配置http" aria-label="Permalink to “Nginx配置Http”">​</a></h2><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> localhost;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #允许cros跨域访问 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    add_header </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Access-Control-Allow-Origin&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #proxy_redirect default;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #跟代理服务器连接的超时时间，必须留意这个time out时间不能超过75秒，当一台服务器当掉时，过 10秒转发到另外一台服务器。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_connect_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #将请求转成https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    rewrite</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ^(.*)$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> https://$host$1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">permanent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # 重定向 HTTP 请求到 HTTPS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> https://$host$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /message </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                 http://message;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Host $host:$server_port;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>此时，访问 <a href="http://localhost/message" target="_blank" rel="noreferrer">http://localhost/message</a>，就会被转发到 <a href="http://localhost:8080/message" target="_blank" rel="noreferrer">http://localhost/message</a> 上。</p><h2 id="nginx配置https" tabindex="-1">Nginx配置Https <a class="header-anchor" href="#nginx配置https" aria-label="Permalink to “Nginx配置Https”">​</a></h2><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">www.example.com;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   cert/www.example.com.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cert/www.example.com.key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20m</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #表示使用的加密套件的类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TLSv1.1 TLSv1.2 TLSv1.3;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_prefer_server_ciphers </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_verify_client </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #可选:允许cros跨域访问</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    add_header </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Access-Control-Allow-Origin&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #跟代理服务器连接的超时时间，必须留意这个time out时间不能超过75秒，当一台服务器当掉时，过10秒转发到另外一台服务器。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_connect_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /message </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                 http://message;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Host $host:$server_port;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>此时访问<a href="https://localhost/message" target="_blank" rel="noreferrer">https://localhost/message</a> 就会被转发到 <a href="http://localhost:8080/message" target="_blank" rel="noreferrer">http://localhost:8080/message</a>上。</p><h2 id="nginx配置ws" tabindex="-1">Nginx配置WS <a class="header-anchor" href="#nginx配置ws" aria-label="Permalink to “Nginx配置WS”">​</a></h2><p>WS的全称是WebSocket，Nginx配置WebSocket也比较简单，只需要在nginx.conf文件中进行相应的配置。这种方式很简单，但是很有效，能够横向扩展WebSocket服务端的服务能力。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># map -&gt; 映射</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $connection_upgrade { </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #如果 http_upgrade 不为空,则 connection_upgrade 为 upgrade</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  default</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> upgrade; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #如果 http_upgrade 为空,则 connection_upgrade 为 close</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> close; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 表示负载均衡</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> wsbackend</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{ </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 注意修改ip+端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ip1:port1; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ip2:port2; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  keepalive </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #表示 nginx 监听的端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20038</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #表示监听的路径(/表示所有路径，通用匹配，相当于default)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{ </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示反向代理发送的HTTP协议的版本是1.1，HTTP1.1支持长连接</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示反向代理的uri，这里可以使用负载均衡变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://wsbackend; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示不要替换路径，其实这里如果是/则有没有都没关系，因为default也是将路径替换到proxy_pass的后边</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_redirect </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示传递时请求头不变,host是nginx内置变量,表示的是当前的请求头,proxy_set_header表示设置请求头</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Host $host; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示传递时来源的ip还是现在的客户端的ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Real-IP $remote_addr; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表的两次请求之间的间隔超过 3600s 后才关闭这个连接，默认的60s，自动关闭的元凶</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_read_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3600s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示X-Forwarded-For头不发生改变</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-For $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示设置Upgrade不变</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Upgrade $http_upgrade; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #表示如果http_upgrade为upgrade，则请求为upgrade(websocket)，如果不是，就关闭连接</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Connection $connection_upgrade; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>此时，访问 ws://localhost:20038 就会被转发到 ip1:port1 和 ip2:port2 上。</p><h2 id="nginx配置wss" tabindex="-1">Nginx配置WSS <a class="header-anchor" href="#nginx配置wss" aria-label="Permalink to “Nginx配置WSS”">​</a></h2><p>WSS表示WebSocket + Https，通俗点说，就是安全的WebSocket</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $connection_upgrade { </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  default</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> upgrade; </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> close; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> wsbackend</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{ </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ip1:port1; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ip2:port2; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  keepalive </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20038</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">localhost;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   /usr/local/nginx-1.17.8/conf/keys/binghe.com.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/usr/local/nginx-1.17.8/conf/keys/binghe.com.key;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20m</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_prefer_server_ciphers </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_verify_client </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://wsbackend;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_redirect </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Host $host; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Real-IP $remote_addr; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_read_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3600s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-For $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Upgrade $http_upgrade; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Connection $connection_upgrade; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>此时，访问 wss://localhost:20038 就会被转发到 ip1:port1 和 ip2:port2 上。</p><h1 id="nginx原理与优化参数配置" tabindex="-1">Nginx原理与优化参数配置 <a class="header-anchor" href="#nginx原理与优化参数配置" aria-label="Permalink to “Nginx原理与优化参数配置”">​</a></h1>`,15),f=t(`<p><img src="https://www.pnglog.com/iZjMRR.png" alt="image.png"></p><p><strong>master-workers 的机制的好处</strong></p><p>首先，对于每个 worker 进程来说，独立的进程，不需要加锁，所以省掉了锁带来的开销， 同时在编程以及问题查找时，也会方便很多。其次，采用独立的进程，可以让互相之间不会影响，一个进程退出后，其它进程还在工作，服务不会中断，master 进程则很快启动新的worker 进程。当然，worker 进程的异常退出，肯定是程序有 bug 了，异常退出，会导致当前 worker 上的所有请求失败，不过不会影响到所有请求，所以降低了风险。</p><p><strong>需要设置多少个 worker</strong></p><p>Nginx 同redis 类似都采用了 io 多路复用机制，每个 worker 都是一个独立的进程，但每个进程里只有一个主线程，通过异步非阻塞的方式来处理请求， 即使是千上万个请求也不在话下。每个 worker 的线程可以把一个 cpu 的性能发挥到极致。所以 worker 数和服务器的 cpu 数相等是最为适宜的。设少了会浪费 cpu，设多了会造成 cpu 频繁切换上下文带来的损耗。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#设置 worker 数量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">worker_processes </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">4</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#work 绑定 cpu(4 work 绑定 4cpu)。worker_cpu_affinity 0001 0010 0100 1000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#work 绑定 cpu (4 work 绑定 8cpu 中的 4 个) 。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">worker_cpu_affinity </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0000001</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00000010</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00000100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 00001000</span></span></code></pre></div><p><strong>连接数 worker_connection</strong></p><p>这个值是表示每个worker 进程所能建立连接的最大值，所以，一个 nginx 能建立的最大连接数，应该是 worker_connections _ worker_processes。当然，这里说的是最大连接数，对于HTTP 请 求 本 地 资 源 来 说 ， 能 够 支 持 的 最 大 并 发 数 量 是 worker_connections _ worker_processes，如果是支持 http1.1 的浏览器每次访问要占两个连接，所以普通的静态访问最大并发数是： worker_connections _ worker_processes /2，而如果是 HTTP 作 为反向代理来说，最大并发数量应该是 worker_connections _</p><p>worker_processes/4。因为作为反向代理服务器，每个并发会建立与客户端的连接和与后端服务的连接，会占用两个连接。</p><p><img src="https://www.pnglog.com/1q5uau.png" alt="image.png"></p><h1 id="nginx日志分析" tabindex="-1">Nginx日志分析 <a class="header-anchor" href="#nginx日志分析" aria-label="Permalink to “Nginx日志分析”">​</a></h1>`,11),T=t(`<p>Nginx默认的日志格式配置可以在<code>/etc/nginx/nginx.conf</code>中找到</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">log_format </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> - $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> [$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">time_local</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">] &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">body_bytes_sent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_referer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;&quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_user_agent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div>`,2),v=s("li",null,"$remote_addr: 客户端的ip地址",-1),b=s("li",null,"$remote_user: 用于记录远程客户端的用户名称",-1),Q=s("li",null,"$time_local: 用于记录访问时间和时区",-1),w=s("li",null,"$request: 用于记录请求的url以及请求方法",-1),$=s("li",null,"$status: 响应状态码",-1),S=s("li",null,"$body_bytes_sent: 给客户端发送的文件主体内容字节数",-1),P=s("li",null,"$http_referer: 可以记录用户是从哪个链接访问过来的",-1),q=s("li",null,"$http_user_agent: 用户所使用的浏览器信息",-1),N=s("li",null,"$http_x_forwarded_for: 可以记录客户端IP，通过代理服务器来记录客户端的ip地址",-1),H={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},L={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"79.425ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 35105.8 950","aria-hidden":"true"},I=t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(451,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(917,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1377,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1949,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2415,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(2884,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(394,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(3583.3,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3928.3,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4806.3,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5550,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">指</text></g><g data-mml-node="mi" transform="translate(7105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(8105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(9105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">从</text></g><g data-mml-node="mi" transform="translate(10105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">接</text></g><g data-mml-node="mi" transform="translate(11105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">受</text></g><g data-mml-node="mi" transform="translate(12105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(13105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">户</text></g><g data-mml-node="mi" transform="translate(14105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">请</text></g><g data-mml-node="mi" transform="translate(15105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">求</text></g><g data-mml-node="mi" transform="translate(16105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(17105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g><g data-mml-node="mi" transform="translate(18105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(19105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(20105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">字</text></g><g data-mml-node="mi" transform="translate(21105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">节</text></g><g data-mml-node="mi" transform="translate(22105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">到</text></g><g data-mml-node="mi" transform="translate(23105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(24105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(25105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">完</text></g><g data-mml-node="mi" transform="translate(26105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">响</text></g><g data-mml-node="mi" transform="translate(27105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">应</text></g><g data-mml-node="mi" transform="translate(28105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(29105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(30105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(31105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(32105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(33105.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(34105.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g></g></g>',1),M=[I],z=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"e"),s("mi",null,"s"),s("msub",null,[s("mi",null,"t"),s("mi",null,"t")]),s("mi",null,"i"),s("mi",null,"m"),s("mi",null,"e"),s("mo",null,":"),s("mi",{mathvariant:"normal"},"指"),s("mi",{mathvariant:"normal"},"的"),s("mi",{mathvariant:"normal"},"是"),s("mi",{mathvariant:"normal"},"从"),s("mi",{mathvariant:"normal"},"接"),s("mi",{mathvariant:"normal"},"受"),s("mi",{mathvariant:"normal"},"用"),s("mi",{mathvariant:"normal"},"户"),s("mi",{mathvariant:"normal"},"请"),s("mi",{mathvariant:"normal"},"求"),s("mi",{mathvariant:"normal"},"的"),s("mi",{mathvariant:"normal"},"第"),s("mi",{mathvariant:"normal"},"一"),s("mi",{mathvariant:"normal"},"个"),s("mi",{mathvariant:"normal"},"字"),s("mi",{mathvariant:"normal"},"节"),s("mi",{mathvariant:"normal"},"到"),s("mi",{mathvariant:"normal"},"发"),s("mi",{mathvariant:"normal"},"送"),s("mi",{mathvariant:"normal"},"完"),s("mi",{mathvariant:"normal"},"响"),s("mi",{mathvariant:"normal"},"应"),s("mi",{mathvariant:"normal"},"数"),s("mi",{mathvariant:"normal"},"据"),s("mi",{mathvariant:"normal"},"的"),s("mi",{mathvariant:"normal"},"时"),s("mi",{mathvariant:"normal"},"间"),s("mi",null,"，"),s("mi",{mathvariant:"normal"},"即")])],-1),R=s("li",null,"$upstream_response_time: 用于接收来自上游服务器的响应的时间",-1),V=t(`<h2 id="配置日志格式" tabindex="-1">配置日志格式 <a class="header-anchor" href="#配置日志格式" aria-label="Permalink to “配置日志格式”">​</a></h2><p>将日志按天输出并格式化日期</p><p><code>08/Aug/2008:08:08:08 +0000</code> -&gt;<code>2008-08-08T08:08:08+08:00</code></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ....</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    log_format </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> - $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> [$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">time_iso8601</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">] &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">body_bytes_sent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_referer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &#39;&quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_user_agent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  	access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /var/log/nginx/$tttt.access.log  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($time_iso8601 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;(\\d{4}-\\d{2}-\\d{2})&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">      set </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$tttt $1;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="常用分析命令" tabindex="-1">常用分析命令 <a class="header-anchor" href="#常用分析命令" aria-label="Permalink to “常用分析命令”">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 根据访问IP统计UV</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> uniq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查询访问最频繁的IP(前10)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查看某一时间段的IP访问量(1-8点)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;$4 &gt;=&quot;[25/Mar/2020:01:00:00&quot; &amp;&amp; $4 &lt;=&quot;[25/Mar/2020:08:00:00&quot;&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查看访问100次以上的IP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{if($1 &gt;100) print $0}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查看指定ip访问过的url和访问次数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;39.105.67.140&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -k</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 根据访问URL统计PV</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查询访问最频繁的URL(前10)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查看访问最频的URL([排除/api/appid])(前10)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/api/appid&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查看页面访问次数超过100次的页面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39; &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 7</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{if ($1 &gt; 100) print $0}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> less</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查看最近1000条记录，访问量最高的页面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -1000</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">less</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 统计每小时的请求数,top10的时间点(精确到小时)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $4}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 14-15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 统计每分钟的请求数,top10的时间点(精确到分钟)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $4}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 14-18</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 统计每秒的请求数,top10的时间点(精确到秒)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $4}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 14-21</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查找指定时间段的日志</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;$4 &gt;=&quot;[25/Mar/2020:01:00:00&quot; &amp;&amp; $4 &lt;=&quot;[25/Mar/2020:08:00:00&quot;&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 列出传输时间超过 0.6 秒的url，显示前10条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;(substr($NF,2,5) &gt; 0.6){print $4,$7,substr($NF,2,5)}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> awk</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -F</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&quot;&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1,$2,$3}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -k3</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 列出/api/appid请求时间超过0.6秒的时间点</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;(substr($NF,2,5) &gt; 0.6 &amp;&amp; $7~/\\/api\\/appid/){print $4,$7,substr($NF,2,5)}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> awk</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -F</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&quot;&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1,$2,$3}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -k3</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 获取前10条最耗时的请求时间、url、耗时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $4,$7,substr($NF,2,5)}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> awk</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -F</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&quot;&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1,$2,$3}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -k3</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -10</span></span></code></pre></div><h1 id="其他功能" tabindex="-1">其他功能 <a class="header-anchor" href="#其他功能" aria-label="Permalink to “其他功能”">​</a></h1>`,7),U=t(`<h2 id="禁止爬虫" tabindex="-1">禁止爬虫 <a class="header-anchor" href="#禁止爬虫" aria-label="Permalink to “禁止爬虫”">​</a></h2><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #access_log  /var/log/nginx/host.access.log  main;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #禁止境内常见爬虫(根据需求自行控制是否禁止)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($http_user_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~* </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;qihoobot|Yahoo! Slurp China|Baiduspider|Baiduspider-image|spider|Sogou spider|Sogou web spider|Sogou inst spider|Sogou spider2|Sogou blog|Sogou News Spider|Sogou Orion spider|ChinasoSpider|Sosospider|YoudaoBot|yisouspider|EasouSpider|Tomato Bot|Scooter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #禁止境外常见爬虫(根据需求自行控制是否禁止)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($http_user_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~* </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Googlebot|Googlebot-Mobile|AdsBot-Google|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|MSNBot|Catall Spider|ArchitextSpider|AcoiRobot|Applebot|Bingbot|Discordbot|Twitterbot|facebookexternalhit|ia_archiver|LinkedInBot|Naverbot|Pinterestbot|seznambot|Slurp|teoma|TelegramBot|Yandex|Yeti|Infoseek|Lycos|Gulliver|Fast|Grabber&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #禁止指定 UA 及 UA 为空的访问</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($http_user_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;WinHttp|WebZIP|FetchURL|node-superagent|java/|Bytespider|FeedDemon|Jullo|JikeSpider|Indy Library|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|CoolpadWebkit|Java|Feedly|Apache-HttpAsyncClient|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|HttpClient|MJ12bot|heritrix|Ezooms|BOT/0.1|YandexBot|FlightDeckReports|Linguee Bot|iaskspider|^$&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #禁止非 GET|HEAD|POST 方式的抓取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($request_method </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!~ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">^(GET|HEAD|POST)$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #禁止 Scrapy 等工具的抓取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($http_user_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~* </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Scrapy|HttpClient)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="限流" tabindex="-1"><strong>限流</strong> <a class="header-anchor" href="#限流" aria-label="Permalink to “限流”">​</a></h2><p><strong>1. 正常限制访问频率（正常流量）</strong></p><p>限制一个用户发送的请求，我Nginx多久接收一个请求。</p><p>Nginx中使用<code>ngx_http_limit_req_module</code>模块来限制的访问频率，限制的原理实质是基于漏桶算法原理来实现的。在nginx.conf配置文件中可以使用<code>limit_req_zone</code>命令及<code>limit_req</code>命令限制单个IP的请求处理频率。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 定义限流维度，一个用户一分钟一个请求进来，多余的全部漏掉</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">limit_req_zone </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$binary_remote_addr zone=one:10m rate=1r/m;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 绑定限流维度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /seckill.html </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        limit_req </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">zone=zone;    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://lj_seckill;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>1r/s代表1秒一个请求，1r/m一分钟接收一个请求， 如果Nginx这时还有别人的请求没有处理完，Nginx就会拒绝处理该用户请求。</p><p><strong>2. 突发限制访问频率（突发流量）</strong></p><p>限制一个用户发送的请求，我Nginx多久接收一个。</p><p>上面的配置一定程度可以限制访问频率，但是也存在着一个问题：如果突发流量超出请求被拒绝处理，无法处理活动时候的突发流量，这时候应该如何进一步处理呢？</p><p>Nginx提供burst参数结合nodelay参数可以解决流量突发的问题，可以设置能处理的超过设置的请求数外能额外处理的请求数。我们可以将之前的例子添加burst参数以及nodelay参数：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 定义限流维度，一个用户一分钟一个请求进来，多余的全部漏掉</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">limit_req_zone </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$binary_remote_addr zone=one:10m rate=1r/m;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 绑定限流维度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /seckill.html </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        limit_req </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">zone=zone burst=5 nodelay;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://lj_seckill;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>为什么就多了一个 burst=5 nodelay; 呢，多了这个可以代表Nginx对于一个用户的请求会立即处理前五个，多余的就慢慢来落，没有其他用户的请求我就处理你的，有其他的请求的话我Nginx就漏掉不接受你的请求</p><p><strong>3. 限制并发连接数</strong></p><p>Nginx中的<code>ngx_http_limit_conn_module</code>模块提供了限制并发连接数的功能，可以使用<code>limit_conn_zone</code>指令以及<code>limit_conn</code>执行进行配置。接下来我们可以通过一个简单的例子来看下：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    limit_conn_zone </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$binary_remote_addr zone=myip:10m;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    limit_conn_zone </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$server_name zone=myServerName:10m;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        limit_conn </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">myip </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        limit_conn </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">myServerName </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        rewrite</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> / http://www.lijie.net </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">permanent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>上面配置了单个IP同时并发连接数最多只能10个连接，并且设置了整个虚拟服务器同时最大并发数最多只能100个链接。当然，只有当请求的header被服务器处理后，虚拟服务器的连接数才会计数。刚才有提到过Nginx是基于漏桶算法原理实现的，实际上限流一般都是基于漏桶算法和令牌桶算法实现的。</p><h2 id="漏桶流算法和令牌桶算法" tabindex="-1"><strong>漏桶流算法和令牌桶算法</strong> <a class="header-anchor" href="#漏桶流算法和令牌桶算法" aria-label="Permalink to “漏桶流算法和令牌桶算法”">​</a></h2><p><strong>漏桶算法</strong></p><p>漏桶算法思路很简单，我们把水比作是请求，漏桶比作是系统处理能力极限，水先进入到漏桶里，漏桶里的水按一定速率流出，当流出的速率小于流入的速率时，由于漏桶容量有限，后续进入的水直接溢出（拒绝请求），以此实现限流。</p><p><img src="https://cdn-us.imgs.moe/2024/03/09/1652523175005-e9a0ebf1-033c-4701-b73a-681cfcfe4366_4LufAqN6uD.png" alt=""></p><h2 id="nginx配置高可用性" tabindex="-1"><strong>Nginx配置高可用性</strong> <a class="header-anchor" href="#nginx配置高可用性" aria-label="Permalink to “Nginx配置高可用性”">​</a></h2><p>当上游服务器(真实访问服务器)，一旦出现故障或者是没有及时相应的话，应该直接轮训到下一台服务器，保证服务器的高可用</p><p>Nginx配置代码：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> www.lijie.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    ### 指定上游服务器负载均衡服务器</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://backServer;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    ###nginx与上游服务器(真实访问的服务器)超时时间 后端服务器连接的超时时间_发起握手等候响应超时时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_connect_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    ###nginx发送给上游服务器(真实访问的服务器)超时时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_send_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    ### nginx接受上游服务器(真实访问的服务器)超时时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_read_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="nginx配置限制访问" tabindex="-1"><strong>Nginx配置限制访问</strong> <a class="header-anchor" href="#nginx配置限制访问" aria-label="Permalink to “Nginx配置限制访问”">​</a></h2><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 限制 ip 访问</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 如果访问的ip地址为192.168.9.115,则返回403</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ($remote_addr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">= </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">192.168.9.115) {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 403</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 限制浏览器访问</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 不允许谷歌浏览器访问 如果是谷歌浏览器返回500</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($http_user_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Chrome) {   </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="urlrewrite" tabindex="-1"><strong>URLRewrite</strong> <a class="header-anchor" href="#urlrewrite" aria-label="Permalink to “URLRewrite”">​</a></h2><p>rewrite是实现URL重写的关键指令，根据regex (正则表达式)部分内容，重定向到replacement，结尾是flag标记。</p><p>rewrite语法格式及参数语法:</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">rewrite</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> &lt;regex&gt; &lt;replacement&gt; [flag];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#关键字  正则     替代内容       flag标记</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">关键字：其中关键字rewrite不能改变</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">正则：perl兼容正则表达式语句进行规则匹配</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">替代内容：将正则匹配的内容替换成replacement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flag标记：rewrite支持的flag标记</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flag标记说明： </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">last</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #本条规则匹配完成后，继续向下匹配新的location URI规则 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> #本条规则匹配完成即终止，不再匹配后面的任何规则 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">redirect</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #返回302临时重定向，浏览器地址会显示跳转后的URL地址 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">permanent</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #返回301永久重定向，浏览器地址栏会显示跳转后的URL地址</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$remote_addr        //获取客户端ip</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$binary_remote_addr //客户端ip（二进制)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$remote_port        //客户端port，如：50472</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$remote_user        //已经经过Auth Basic Module验证的用户名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$host           //请求主机头字段，否则为服务器名称，如:blog.sakmon.com</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request        //用户请求信息，如：GET </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&amp;b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> HTTP/1.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request_filename   //当前请求的文件的路径名，由root或alias和URI request组合而成，如：/2013/81.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$status         //请求的响应状态码,如:200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$body_bytes_sent        // 响应时送出的body字节数数量。即使连接中断，这个数据也是精确的,如：40</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$content_length        // 等于请求行的“Content_Length”的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$content_type          // 等于请求行的“Content_Type”的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$http_referer          // 引用地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$http_user_agent      // 客户端agent信息,如：Mozilla/5.0 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Windows</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) AppleWebKit/537.36 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">KHTML,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Gecko</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) Chrome/29.0.1547.76 Safari/537.36</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$args            //与$query_string相同 等于当中URL的参数(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)，如a=1&amp;b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$document_uri        //与$uri相同  这个变量指当前的请求URI，不包括任何参数(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">见$args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) 如:/2013/81.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$document_root       //针对当前请求的根路径设置值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$hostname        //如：centos53.localdomain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$http_cookie        //客户端cookie信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$cookie_COOKIE      //cookie COOKIE变量的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$is_args    //如果有$args参数，这个变量等于”</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">”，否则等于</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">，空值，如</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$limit_rate //这个变量可以限制连接速率，0表示不限速</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$query_string       // 与$args相同 等于当中URL的参数(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)，如a=1&amp;b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request_body      // 记录POST过来的数据信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request_body_file  //客户端请求主体信息的临时文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request_method       //客户端请求的动作，通常为GET或POST,如：GET</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request_uri          //包含请求参数的原始URI，不包含主机名，如：/2013/81.html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&amp;b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$scheme            //HTTP方法（如http，https）,如：http</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$uri            //这个变量指当前的请求URI，不包括任何参数(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">见$args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) 如:/2013/81.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$request_completion //如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Empty</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)，如：OK</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$server_protocol    //请求使用的协议，通常是HTTP/1.0或HTTP/1.1，如：HTTP/1.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$server_addr        //服务器IP地址，在完成一次系统调用后可以确定这个值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$server_name        //服务器名称，如：blog.sakmon.com</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$server_port        //请求到达服务器的端口号,如：80</span></span></code></pre></div><h2 id="防盗链" tabindex="-1"><strong>防盗链</strong> <a class="header-anchor" href="#防盗链" aria-label="Permalink to “防盗链”">​</a></h2><p><code>valid_referers none | blocked | server_names | strings ....;</code></p><ul><li>none， 检测 Referer 头域不存在的情况。</li><li>blocked，检测 Referer 头域的值被防火墙或者代理服务器删除或伪装的情况。这种情况该头域的值不以“http://” 或 “https://” 开头。</li><li>server_names ，设置一个或多个 URL ，检测 Referer 头域的值是否是这些 URL 中的某一个。</li></ul><p>在需要防盗链的location中配置</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">valid_referers </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">192.168.44.101</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($invalid_referer) { </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #return 403;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  rewrite</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ^/ /img/fangdaolian.png </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,38);function G(i,Z,O,W,j,Y){const p=o,h=c("ClientOnly");return l(),g("div",null,[D,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),C,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),m,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),B,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),u,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),_,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),E,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),x,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),f,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),T,s("ul",null,[v,b,Q,w,$,S,P,q,N,s("li",null,[s("mjx-container",H,[(l(),g("svg",L,M)),z]),y("request_time包括接收客户端请求数据的时间、后端程序响应的时间、发送响应数据给客户端的时间")]),R]),V,e(h,null,{default:k(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),r(p,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),U])}const ss=A(F,[["render",G]]);export{X as __pageData,ss as default};
