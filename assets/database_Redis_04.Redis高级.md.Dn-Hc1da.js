import{_ as F}from"./chunks/ArticleMetadata.BPSr9oED.js";import{_ as g,E as y,c as D,o as n,j as d,I as k,aj as r,w as t,b as p,e,a as A}from"./chunks/framework._AF764y6.js";const C="/assets/1620970916070-c0889b8b-97dc-4697-8665-aa5f759011ba_tOHPzG0UWt.CHjjHYz8.png",c="/assets/1620971087700-1b2a9e7b-bc87-4b38-8343-d9343601761e_e454o9HJ4R.e8T-xfYq.png",o="/assets/1620971126210-8e10a9dc-91be-4545-9df8-df1372359192_u4i6ErePYK.DvSknE-o.png",B="/assets/1620971571032-246321d8-bf57-44ff-9e4e-5a382d6096d8_JxzOpmecLB.CtLfHysq.png",u="/assets/1620971766633-78f4f579-4ecb-4ee0-b32a-428301362523_Ot8N9VxXLS.DZ4mc7Cx.png",E="/assets/1620972062081-280e23fd-4a1e-4ac7-86af-0ddf1a0e1eea_3y0V9KP6jv.BUjvT8uG.png",m="/assets/1621217431111-9da485c6-bc68-4369-b293-157ea1476980_ukFjOt2K4A.D0-Ar7LZ.png",b="/assets/1621214655204-813b2e34-07f4-4fb1-aed3-85ec53c9b2ac_RfXHL9BkVG.BFdag2zR.png",q="/assets/1621214655223-4e3201b3-bc24-481d-bb3f-1b1893fc3744_kIcVWnnp2x.BJqxJCqS.png",v="/assets/1621220135762-6552f2d9-93cd-4a7c-b6f2-0de33fbe34f7.B-1R-wnE.png",f="/assets/1621220324795-9e0420df-df30-4b39-92db-0e7d7e51de10.DU1h4skF.png",_="/assets/1621220492917-2abbdeeb-cd2a-45e1-a7cb-2a6082ca1a56.DlMrEXqG.png",x="/assets/1621220566607-7659bfd0-f279-4465-b82d-cee9c65254a6_kk17FH7WRb.DNxF5Jfb.png",R="/assets/1621220585220-d1f047eb-f21c-4346-ba32-84dff6859811_a2A0eQQk6A.Ba96BW_-.png",S="/assets/1621436124975-601c1f1e-6636-48ab-9f50-4578cc6e88c4_GpVxHiAxQB.CPnCxTVg.png",P="/assets/1621439162528-2b5a34a1-f4ec-469a-92cd-33acc5cdb18c_Ip0WIDXRDu.C3HH7eVK.png",T="/assets/1621440023448-4040e208-fe57-474e-85c8-0edfb4085309_278QluHUWX.DRzpWHZR.png",O="/assets/1621441557927-cf7d83b9-d9f1-474b-8d74-f65d02a484bf_16fXCTosvG.woLvBI5a.png",j="/assets/1626937922063-fef92b34-f806-4184-b651-fbf8b3792867_FI9pCkZDT2.xHAmtQuj.png",Z=JSON.parse('{"title":"Redis高级","description":"","frontmatter":{"title":"Redis高级","date":"2023-10-26T10:23:50.000Z","permalink":"/redis/320a99/","categories":["数据库","Redis"],"tags":["Redis"],"author":"Manaphy"},"headers":[],"relativePath":"database/Redis/04.Redis高级.md","filePath":"database/Redis/04.Redis高级.md","lastUpdated":1743259133000}'),U={name:"database/Redis/04.Redis高级.md"},I=d("h1",{id:"redis配置",tabindex:"-1"},[A("Redis配置 "),d("a",{class:"header-anchor",href:"#redis配置","aria-label":"Permalink to “Redis配置”"},"​")],-1),K=r(`<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 多实例的情况可以把公用的配置文件提取出来</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /path/to/local.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /path/to/other.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 不写的情况下,无限制接受任何ip地址的访问</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">bind</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">protected-mode</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> yes</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #开启保护模式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 配置端口号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">port</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 6379</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 客户端空闲N秒后关闭连接（0禁用）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">timeout</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 对访问客户端的一种心跳检测,每个n秒检测一次</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">tcp-keepalive</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 300</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 以守护进程的方式运行,默认是 no,需要自己设置为yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">daemonize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> yes</span></span></code></pre></div><h1 id="redis事物" tabindex="-1">Redis事物 <a class="header-anchor" href="#redis事物" aria-label="Permalink to “Redis事物”">​</a></h1>`,2),L=r('<h2 id="redis的事务定义" tabindex="-1"><strong>Redis的事务定义</strong> <a class="header-anchor" href="#redis的事务定义" aria-label="Permalink to “Redis的事务定义”">​</a></h2><p>Redis事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。</p><p>Redis事务的主要作用就是串联多个命令防止别的命令插队。</p><h2 id="multi、exec、discard" tabindex="-1">Multi、Exec、discard <a class="header-anchor" href="#multi、exec、discard" aria-label="Permalink to “Multi、Exec、discard”">​</a></h2><p>从输入Multi命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入Exec后，Redis会将之前的命令队列中的命令依次执行。</p><p>组队的过程中可以通过discard来放弃组队。</p><p><img src="'+C+`" alt="image.png"></p><h3 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to “案例”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MULTI</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #开启事物</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EXEC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #执行事物</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;v2&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) OK</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#------------放弃事物----------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">FLUSHDB</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MULTI</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #开启事物</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">DISCARD</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #取消事物</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #事务队列中命令都不会被执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h2 id="事务的错误处理" tabindex="-1">事务的错误处理 <a class="header-anchor" href="#事务的错误处理" aria-label="Permalink to “事务的错误处理”">​</a></h2><p>组队中某个命令出现了报告错误，执行时整个的所有队列都会被取消。</p><p><img src="`+c+'" alt="image.png"></p><p>如果执行阶段某个命令报出了错误，则只有报错的命令不会被执行，而其他的命令都会执行，不会回滚。</p><p><img src="'+o+`" alt="image.png"></p><h3 id="案例-1" tabindex="-1">案例 <a class="header-anchor" href="#案例-1" aria-label="Permalink to “案例”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#------------编译型异常----------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">FLUSHDB</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MULTI</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #开启事物</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GETSET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #错误的命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ERR</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wrong</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> number</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> arguments</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;getset&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> command</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EXEC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #执行事物报错</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">EXECABORT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Transaction</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> discarded</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> because</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> previous</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> errors.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #所有的命令都不会被执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#------------运行时异常----------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">FLUSHDB</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MULTI</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #开启事物</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">INCR</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #会执行报错的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EXEC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #执行事物 虽然第一条命令错误,但其余命令执行成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) ERR value is not an integer or out of range</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;v2&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;v2&quot;</span></span></code></pre></div><h2 id="为什么要有事务" tabindex="-1">为什么要有事务 <a class="header-anchor" href="#为什么要有事务" aria-label="Permalink to “为什么要有事务”">​</a></h2><p>会造成超卖</p><p><img src="`+B+'" alt="image.png"></p><h3 id="悲观锁" tabindex="-1">悲观锁 <a class="header-anchor" href="#悲观锁" aria-label="Permalink to “悲观锁”">​</a></h3><p><img src="'+u+'" alt="image.png"></p><p><strong>悲观锁(Pessimistic Lock)</strong>，顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会block直到它拿到锁。<strong>传统的关系型数据库里边就用到了很多这种锁机制</strong>，比如<strong>行锁</strong>，<strong>表锁</strong>等，<strong>读锁</strong>，<strong>写锁</strong>等，都是在做操作之前先上<strong>锁</strong>。</p><h3 id="乐观锁" tabindex="-1">乐观锁 <a class="header-anchor" href="#乐观锁" aria-label="Permalink to “乐观锁”">​</a></h3><p><img src="'+E+`" alt="image.png"></p><p><strong>乐观锁(Optimistic Lock)</strong>，顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。<strong>乐观锁适用于多读的应用类型，这样可以提高吞吐量</strong>。Redis就是利用这种check-and-set机制实现事务的。</p><h3 id="watch-监控" tabindex="-1">watch 监控 <a class="header-anchor" href="#watch-监控" aria-label="Permalink to “watch 监控”">​</a></h3><p>在执行 <code>multi</code> 之前，先执行watch key1 [key2]，可以监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</p><h3 id="unwatch-取消监控" tabindex="-1">unwatch 取消监控 <a class="header-anchor" href="#unwatch-取消监控" aria-label="Permalink to “unwatch 取消监控”">​</a></h3><p>取消 WATCH 命令对所有 key 的监视。</p><p>如果在执行 WATCH 命令之后，EXEC 命令或DISCARD 命令先被执行了的话，那么就不需要再执行UNWATCH 了。</p><p><strong>案例</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#正常执行成功案例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> money</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> out</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">WATCH</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> money</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #监视money</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MULTI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">DECRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> money</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">INCRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> out</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EXEC</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) 80</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) 20</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#执行失败案例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">WATCH</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> money</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MULTI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">DECRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> money</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">INCRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> out</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EXEC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #在执行之前另一个线程修改了money值,就会导致事物执行失败</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">UNWATCH</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #执行失败后,先解锁再次watch money 直到执行成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span></code></pre></div><h2 id="redis事务三特性" tabindex="-1">Redis事务三特性 <a class="header-anchor" href="#redis事务三特性" aria-label="Permalink to “Redis事务三特性”">​</a></h2><ul><li><strong>单独的隔离操作</strong><ul><li>事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。</li></ul></li><li>**没有隔离级别的概念 ** <ul><li>队列中的命令没有提交之前都不会实际被执行，因为事务提交前任何指令都不会被实际执行</li></ul></li><li><strong>不保证原子性</strong><ul><li>事务中如果有一条命令执行失败，其后的命令仍然会被执行，没有回滚</li></ul></li></ul><h2 id="redis-事务-秒杀案例" tabindex="-1">Redis_事务_秒杀案例 <a class="header-anchor" href="#redis-事务-秒杀案例" aria-label="Permalink to “Redis_事务_秒杀案例”">​</a></h2><p><strong>配置Jedis连接池</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> JedisPoolUtil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> volatile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> JedisPoolUtil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPool </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getJedisPoolInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (jedisPool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            synchronized</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (JedisPoolUtil.class) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                JedisPoolConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> poolConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> JedisPoolConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                poolConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setMaxTotal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                poolConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setMaxIdle</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                poolConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setMaxWaitMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                poolConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setBlockWhenExhausted</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                poolConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setTestOnBorrow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// ping PONG</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                jedisPool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(poolConfig, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;192.168.2.128&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">60000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> release</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(JedisPool </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">jedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Jedis </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">jedis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (jedis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            jedisPool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">returnResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(jedis);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>使用Redis记录库存数 <code>sk:pid:stock</code> 和秒杀成功者清单 <code>sk:pid:user</code></p><h3 id="原始秒杀" tabindex="-1">原始秒杀 <a class="header-anchor" href="#原始秒杀" aria-label="Permalink to “原始秒杀”">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> seckill</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String uid, String pid) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 1.连接redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPoolUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getJedisPoolInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Jedis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 2.拼接key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 2.1库存key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stockKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;sk:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;:stock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 2.2秒杀成功用户key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;sk:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;:user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 3.获取库存,如果库存为 null 秒杀还没有开始</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stockKey);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (stock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀还没有开始,请等待&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 4.判断用户是否重复秒杀操作</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sismember</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userKey, uid)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;已经秒杀成功了,不能重复秒杀&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 5.判断如果商品数量,库存数量小于1,秒杀结束</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Integer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stock) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀已经结束了&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 6.秒杀过程</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 6.1 库存-1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">decr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stockKey);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 6.2 把秒杀成功用户添加到清单里面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sadd</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userKey, uid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀成功了...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>测试</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Random</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">nextInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9999</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        seckill</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(uid), </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>结果会发生库存超卖问题 库存为负数</p><h3 id="乐观锁解决超卖" tabindex="-1">乐观锁解决超卖 <a class="header-anchor" href="#乐观锁解决超卖" aria-label="Permalink to “乐观锁解决超卖”">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> seckill2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String uid, String pid) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPoolUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getJedisPoolInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Jedis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stockKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;sk:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;:stock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;sk:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;:user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 监视库存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">watch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stockKey);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stockKey);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (stock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀还没有开始,请等待&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sismember</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userKey, uid)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;已经秒杀成功了,不能重复秒杀&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Integer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stock) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀已经结束了&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 使用事务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Transaction</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> multi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">multi</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 组队操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    multi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">decr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(stockKey);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    multi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sadd</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userKey, uid);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> multi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀失败了&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;秒杀成功了...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>测试同上</p><p>结果会造成库存遗留问题 库存没买完</p><h3 id="使用lua脚本解决库存遗留" tabindex="-1">使用LUA脚本<strong>解决库存遗留</strong> <a class="header-anchor" href="#使用lua脚本解决库存遗留" aria-label="Permalink to “使用LUA脚本解决库存遗留”">​</a></h3><p><strong>LUA脚本在Redis中的优势</strong></p><p>将复杂的或者多步的redis操作，写为一个脚本，一次提交给redis执行，减少反复连接redis的次数。提升性能。</p><p>LUA脚本是类似redis事务，有一定的原子性，不会被其他命令插队，可以完成一些redis事务性的操作。</p><p>但是注意redis的lua脚本功能，只有在Redis 2.6以上的版本才可以使用。</p><p>利用lua脚本淘汰用户，解决超卖问题。</p><p>redis 2.6版本以后，通过lua脚本解决争抢问题，实际上是redis 利用其单线程的特性，用任务队列的方式解决多任务并发问题。</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">KEYS[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">KEYS[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stockKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sk:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;:stock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> usersKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sk:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;:user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userExists</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sismember&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,usersKey,uid);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> tonumber</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userExists)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> then</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;get&quot; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,stockKey);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> tonumber</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(num)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> then</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;decr&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,stockKey);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sadd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,usersKey,uid);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>脚本的使用</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> seckill3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String uid, String pid) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // Lua 脚本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> secKillScript</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;local uid=KEYS[1]; </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;local pid=KEYS[2];</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;local stockKey=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sk:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">..pid..</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:stock</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;local usersKey=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sk:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">..pid..</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:user</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;local userExists=redis.call(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sismember</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,usersKey,uid);</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;if tonumber(userExists)==1 then </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;  return 2;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;end</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;local num= redis.call(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">get</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ,stockKey);</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;if tonumber(num)&lt;=0 then </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;  return 0; </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;else </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;  redis.call(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">decr</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,stockKey);</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;  redis.call(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sadd</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,usersKey,uid);</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;end</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;return 1;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPoolUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getJedisPoolInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Jedis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sha1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">scriptLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(secKillScript);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> evalsha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">evalsha</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(sha1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, uid, pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(evalsha);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (result) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.err.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;已抢空&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;抢购成功&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;2&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.err.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;该用户已抢过&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        default:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;抢购异常&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>测试同上，能解决以上问题</p><h1 id="redis持久化" tabindex="-1">Redis持久化 <a class="header-anchor" href="#redis持久化" aria-label="Permalink to “Redis持久化”">​</a></h1>`,59),w=r('<p>Redis 是内存数据库，如果不将内存中的数据库状态保存到磁盘，那么一旦服务器进程退出，服务器中的数据库状态也会消失。所以 Redis 提供了持久化功能！</p><h2 id="rdb-redis-database" tabindex="-1">RDB (Redis DataBase) <a class="header-anchor" href="#rdb-redis-database" aria-label="Permalink to “RDB (Redis DataBase)”">​</a></h2><blockquote><p>在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的Snapshot快照，它恢复时是将快照文件直接读到内存里。</p></blockquote><p>Redis会单独创建（fork）一个子进程来进行持久化，会先将数据写入到一个临时文件中，待持久化过程都结束了，再用这个临时文件替换上次持久化好的文件。整个过程中，主进程是不进行任何IO操作的。</p><p>这就确保了极高的性能。如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那RDB方式要比AOF方式更加的高效。**RDB的缺点是最后一次持久化后的数据可能丢失。**我们默认的就是RDB，一般情况下不需要修改这个配置！</p><h3 id="fork" tabindex="-1">Fork <a class="header-anchor" href="#fork" aria-label="Permalink to “Fork”">​</a></h3><ul><li>Fork的作用是复制一个与当前进程一样的进程。新进程的所有数据（变量、环境变量、程序计数器等） 数值都和原进程一致，但是是一个全新的进程，并作为原进程的子进程</li><li>在Linux程序中，fork()会产生一个和父进程完全相同的子进程，但子进程在此后多会exec系统调用，出于效率考虑，Linux中引入了“<strong>写时复制技术</strong>”</li><li><strong>一般情况父进程和子进程会共用同一段物理内存</strong>，只有进程空间的各段的内容要发生变化时，才会将父进程的内容复制一份给子进程。</li></ul><h3 id="rdb持久化流程" tabindex="-1">RDB持久化流程 <a class="header-anchor" href="#rdb持久化流程" aria-label="Permalink to “RDB持久化流程”">​</a></h3><p><img src="'+m+`" alt="image.png"></p><h3 id="触发机制" tabindex="-1">触发机制 <a class="header-anchor" href="#触发机制" aria-label="Permalink to “触发机制”">​</a></h3><ul><li>save的规则满足的情况下，会自动触发rdb规则</li><li>执行 ﬂushall 命令，会触发rdb规则，产生 dump.rdb 文件，但里面是空的，无意义</li><li>退出redis，会产生 rdb 文件</li></ul><h3 id="配置位置" tabindex="-1">配置位置 <a class="header-anchor" href="#配置位置" aria-label="Permalink to “配置位置”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">CONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dir</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;dir&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/data&quot;</span></span></code></pre></div><h3 id="如何触发rdb快照-保持策略" tabindex="-1">如何触发RDB快照：保持策略 <a class="header-anchor" href="#如何触发rdb快照-保持策略" aria-label="Permalink to “如何触发RDB快照：保持策略”">​</a></h3><p><strong>配置文件中默认的快照配置</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">save</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 900</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 900秒(15分钟)内至少有1个key被修改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">save</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 300</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 300秒(5分钟)内至少有10个key被修改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">save</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 60</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10000</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 60秒内至少有10000个key被修改</span></span></code></pre></div><p><strong>命令 SAVE vs BGSAVE</strong></p><ul><li>save ：save时只管保存，其它不管，全部阻塞。手动保存。不建议。</li><li><strong>bgsave：Redis会在后台异步进行快照操作， 快照同时还可以响应客户端请求。</strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">BGSAVE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Background</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> saving</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> started</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">LASTSAVE</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #获取最后一次成功执行快照的时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1621218852</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #单位:秒</span></span></code></pre></div><h3 id="优点" tabindex="-1">优点: <a class="header-anchor" href="#优点" aria-label="Permalink to “优点:”">​</a></h3><ul><li>适合大规模的数据恢复</li><li>对数据的完整性要不高</li><li>节省磁盘空间</li><li>恢复速度快</li></ul><h3 id="缺点" tabindex="-1">缺点: <a class="header-anchor" href="#缺点" aria-label="Permalink to “缺点:”">​</a></h3><ul><li>Fork的时候，内存中的数据被克隆了一份，大致2倍的膨胀性需要考虑</li><li>虽然Redis在fork时使用了写时拷贝技术,但是如果数据庞大时还是比较消耗性能。</li><li>在备份周期在一定间隔时间做一次备份，所以如果Redis意外down掉的话，就会丢失最后一次快照后的所有修改。</li></ul><h2 id="aof-append-only-file" tabindex="-1">AOF (Append Only File) <a class="header-anchor" href="#aof-append-only-file" aria-label="Permalink to “AOF (Append Only File)”">​</a></h2><blockquote><p>以<strong>日志</strong>的形式来记录每个写操作，将Redis执行过的所有指令记录下来（<strong>读操作不记录</strong>），<strong>只许追加文件但不可以改写文件</strong>，redis启动之初会读取该文件重新构建数据，换言之，redis重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作</p></blockquote><h3 id="aof持久化流程" tabindex="-1">AOF持久化流程 <a class="header-anchor" href="#aof持久化流程" aria-label="Permalink to “AOF持久化流程”">​</a></h3><ol><li>客户端的请求写命令会被append追加到AOF缓冲区内；</li><li>AOF缓冲区根据AOF持久化策略[always,everysec,no]将操作sync同步到磁盘的AOF文件中；</li><li>AOF文件大小超过重写策略或手动重写时，会对AOF文件rewrite重写，压缩AOF文件容量；</li><li>Redis服务重启时，会重新load加载AOF文件中的写操作达到数据恢复的目的；</li></ol><h3 id="优点-1" tabindex="-1">优点 <a class="header-anchor" href="#优点-1" aria-label="Permalink to “优点”">​</a></h3><ul><li>备份机制更稳健，丢失数据概率更低。</li><li>可读的日志文本，通过操作AOF稳健，可以处理误操作。</li></ul><h3 id="缺点-1" tabindex="-1">缺点 <a class="header-anchor" href="#缺点-1" aria-label="Permalink to “缺点”">​</a></h3><ul><li>比起RDB占用更多的磁盘空间。</li><li>恢复备份速度要慢。</li><li>每次读写都同步的话，有一定的性能压力。</li><li>存在个别Bug，造成不能恢复。</li></ul><h2 id="用哪个好" tabindex="-1">用哪个好 <a class="header-anchor" href="#用哪个好" aria-label="Permalink to “用哪个好”">​</a></h2><p>官方推荐两个都启用。</p><p>如果对数据不敏感，可以选单独用RDB。</p><p>不建议单独用 AOF，因为可能会出现Bug。</p><p>如果只是做纯内存缓存，可以都不用。</p><h2 id="官网建议" tabindex="-1">官网建议 <a class="header-anchor" href="#官网建议" aria-label="Permalink to “官网建议”">​</a></h2><ol><li>RDB 持久化方式能够在指定的时间间隔内对你的数据进行快照存储</li><li>AOF 持久化方式记录每次对服务器写的操作，当服务器重启的时候会重新执行这些命令来恢复原始的数据，AOF命令以Redis  协议追加保存每次写的操作到文件末尾，Redis还能对AOF文件进行后台重写，使得AOF文件的体积不至于过大。</li><li>只做缓存，如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化</li><li>同时开启两种持久化方式 <ul><li>在这种情况下，当redis重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF 文件保存的数据集要比RDB文件保存的数据集要完整。</li><li>RDB 的数据不实时，同时使用两者时服务器重启也只会找AOF文件，那要不要只使用AOF呢？作者建议不要，因为RDB更适合用于备份数据库（AOF在不断变化不好备份），快速重启，而且不会有AOF可能潜在的Bug，留着作为一个万一的手段。</li></ul></li><li>性能建议 <ul><li>因为RDB文件只用作后备用途，建议只在Slave上持久化RDB文件，而且只要15分钟备份一次就够了，只保留 save 900 1 这条规则。</li><li>如果Enable AOF ，好处是在最恶劣情况下也只会丢失不超过两秒数据，启动脚本较简单只load自己的AOF文件就可以了，代价一是带来了持续的IO，二是AOF rewrite 的最后将 rewrite 过程中产生的新数据写到新文件造成的阻塞几乎是不可避免的。只要硬盘许可，应该尽量减少AOF rewrite 的频率，AOF重写的基础大小默认值64M太小了，可以设到5G以上，默认超过原大小100%大小重写可以改到适当的数值。</li><li>如果不Enable AOF ，仅靠 Master-Slave Repllcation 实现高可用性也可以，能省掉一大笔IO，也减少了rewrite时带来的系统波动。代价是如果Master/Slave  同时倒掉，会丢失十几分钟的数据， 启动脚本也要比较两个 Master/Slave 中的 RDB文件，载入较新的那个，微博就是这种架构。</li></ul></li></ol><h1 id="redis主从复制" tabindex="-1">Redis主从复制 <a class="header-anchor" href="#redis主从复制" aria-label="Permalink to “Redis主从复制”">​</a></h1>`,39),N=r(`<blockquote><p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master/leader)，后者称为从节点(slave/follower)；数据的复制是单向的，只能由主节点到从节点。Master以写为主，Slave 以读为主。</p></blockquote><p>默认情况下，每台Redis服务器都是主节点</p><p>且一个主节点可以有多个从节点(或没有从节点)，但一个从节点只能有一个主节点。</p><p><strong>主从复制的作用主要包括：</strong></p><ul><li>数据冗余：主从复制实现了数据的热备份，是持久化之外的一种数据冗余方式。</li><li>故障恢复：当主节点出现问题时，可以由从节点提供服务，实现快速的故障恢复；实际上是一种服务  的冗余。</li><li>负载均衡：在主从复制的基础上，配合读写分离，可以由主节点提供写服务，由从节点提供读服务 (即写Redis数据时应用连接主节点，读Redis数据时应用连接从节点)，分担服务器负载；尤其是在写少读多的场景下，通过多个从节点分担读负载，可以大大提高Redis服务器的并发量。</li><li>高可用（集群）基石：除了上述作用以外，主从复制还是哨兵和集群能够实施的基础，因此说主从复  制是Redis高可用的基础。</li></ul><h2 id="搭建" tabindex="-1">搭建 <a class="header-anchor" href="#搭建" aria-label="Permalink to “搭建”">​</a></h2><p><strong>docker-compose.yml</strong></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  master</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-master</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-server --requirepass 123456  --masterauth 123456</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">6380:6379</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  slave1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-slave-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">6381:6379</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-server --slaveof redis-master 6379 --requirepass 123456 --masterauth 123456</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  slave2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-slave-2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">6382:6379</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-server --slaveof redis-master 6379 --requirepass 123456 --masterauth 123456</span></span></code></pre></div><p><strong>验证</strong> 主服务器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> redis-master</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> redis-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">auth</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 123456</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ping</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PONG</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chen</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">INFO</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> replication</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Replication</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">role:master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">connected_slaves:2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #可以看到有两个从节点</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">slave0:ip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=172.18.0.3,port=6379,state=online,offset=1343,lag=0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">slave1:ip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=172.18.0.2,port=6379,state=online,offset=1343,lag=0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">master_replid:54d035f0e0eb1d4539ec132d4545827a7a345f7b</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">master_replid2:0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">master_repl_offset:1343</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">second_repl_offset:-1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">repl_backlog_active:1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">repl_backlog_size:1048576</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">repl_backlog_first_byte_offset:1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">repl_backlog_histlen:1343</span></span></code></pre></div><p>从服务器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> redis-slave-1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> redis-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">auth</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 123456</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ping</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PONG</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v1</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #可以看到从服务器不能写入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">READONLY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> You</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> can&#39;t write against a read only replica.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">127.0.0.1:6379&gt; get key</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;chen&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">127.0.0.1:6379&gt; INFO replication</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"># Replication</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">role:slave</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_host:redis-master</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_port:6379</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_link_status:up</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_last_io_seconds_ago:4</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_sync_in_progress:0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">slave_repl_offset:1455</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">slave_priority:100</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">slave_read_only:1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">connected_slaves:0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_replid:54d035f0e0eb1d4539ec132d4545827a7a345f7b</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_replid2:0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master_repl_offset:1455</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">second_repl_offset:-1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">repl_backlog_active:1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">repl_backlog_size:1048576</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">repl_backlog_first_byte_offset:1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">repl_backlog_histlen:1455</span></span></code></pre></div><h1 id="redis哨兵模式" tabindex="-1">Redis哨兵模式 <a class="header-anchor" href="#redis哨兵模式" aria-label="Permalink to “Redis哨兵模式”">​</a></h1>`,13),J=r('<blockquote><p>主从切换技术的方法是：当主服务器宕机后，需要手动把一台从服务器切换为主服务器，这就需要人工干预，费事费力，还会造成一段时间内服务不可用。这不是一种推荐的方式，更多时候，我们优先考虑哨兵模式。Redis从2.8开始正式提供了Sentinel（哨兵） 架构来解决这个问题。</p><p>谋朝篡位的自动版，能够后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库。</p><p>哨兵模式是一种特殊的模式，首先Redis提供了哨兵的命令，哨兵是一个独立的进程，作为进程，它会独立运行。其原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个Redis实例。</p></blockquote><p><img src="'+b+'" alt=""></p><p>这里的哨兵有两个作用</p><ul><li>通过发送命令，让Redis服务器返回监控其运行状态，包括主服务器和从服务器。</li><li>当哨兵监测到master宕机，会自动将slave切换成master，然后通过发布订阅模式通知其他的从服务器，修改配置文件，让它们切换主机。</li></ul><p>然而一个哨兵进程对Redis服务器进行监控，可能会出现问题，为此，我们可以使用多个哨兵进行监控。各个哨兵之间还会进行监控，这样就形成了多哨兵模式。</p><p><img src="'+q+`" alt=""></p><p>假设主服务器宕机，哨兵1先检测到这个结果，系统并不会马上进行failover过程，仅仅是哨兵1主观的认为主服务器不可用，这个现象成为主观下线。当后面的哨兵也检测到主服务器不可用，并且数量达到一定值时，那么哨兵之间就会进行一次投票，投票的结果由一个哨兵发起，进行failover[故障转移]操作。切换成功后，就会通过发布订阅模式，让各个哨兵把自己监控的从服务器实现切换主机，这个过程称为客观下线。</p><h2 id="搭建-1" tabindex="-1">搭建 <a class="header-anchor" href="#搭建-1" aria-label="Permalink to “搭建”">​</a></h2><p><strong>docker-compose.yml</strong></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3.4&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  sentinel1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-sentinel-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-sentinel /usr/local/etc/redis/sentinel.conf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">26379:26379</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./sentinel1.conf:/usr/local/etc/redis/sentinel.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  sentinel2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-sentinel-2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-sentinel /usr/local/etc/redis/sentinel.conf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">26380:26379</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./sentinel2.conf:/usr/local/etc/redis/sentinel.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  sentinel3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-sentinel-3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">redis-sentinel /usr/local/etc/redis/sentinel.conf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">26381:26379</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./sentinel3.conf:/usr/local/etc/redis/sentinel.conf</span></span></code></pre></div><p>sentinel.conf</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">port</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 26379</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> monitor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 192.168.174.129</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #自己的服务器ip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> auth-pass</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 123456</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> down-after-milliseconds</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 30000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> parallel-syncs</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> failover-timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 180000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> deny-scripts-reconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> yes</span></span></code></pre></div><p>sentinel1.conf sentinel2.conf sentinel3.conf 的内容同sentinel.conf</p><p>总目录结构</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> redis/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-compose.yml</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #redis集群</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sentinel/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-compose.yml</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #sentinel集群</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sentinel1.conf</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #对应的三个配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sentinel2.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sentinel3.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sentinel.conf</span></span></code></pre></div><p><code>docker ps</code>效果</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               COMMAND</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                  CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">             STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              PORTS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                                NAMES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ca316e86aac0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        6379/tcp,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 0.0.0.0:26381</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">26379/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   redis-sentinel-3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">a230eac1ee21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        6379/tcp,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 0.0.0.0:26380</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">26379/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   redis-sentinel-2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">24c3df4c2658</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        6379/tcp,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 0.0.0.0:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">26379/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   redis-sentinel-1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">e37a8be2acc0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   59</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 59</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       0.0.0.0:6380</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">6379/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               redis-master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">494ee3c3744f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   59</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 59</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       0.0.0.0:6382</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">6379/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               redis-slave-2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">9f7efa9e3d7f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               &quot;docker-entrypoint.s…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   59</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 59</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       0.0.0.0:6381</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">6379/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               redis-slave-1</span></span></code></pre></div><p><strong>哨兵模式的全部配置</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Example sentinel.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 哨兵sentinel实例运行的端口 默认26379 port 26379</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 哨兵sentinel的工作目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 哨兵sentinel监控的redis主节点的 ip port</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># master-name	可以自己命名的主节点名字 只能由字母A-z、数字0-9 、这三个字符&quot;.-_&quot;组成。# quorum 配置多少个sentinel哨兵统一认为master主节点失联 那么这时客观上认为主节点失联了# sentinel monitor &lt;master-name&gt; &lt;ip&gt; &lt;redis-port&gt; &lt;quorum&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> monitor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 127.0.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 当在Redis实例中开启了requirepass foobared 授权密码 这样所有连接Redis实例的客户端都要提供密码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置哨兵sentinel 连接主从的密码 注意必须为主从设置一样的验证密码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sentinel auth-pass &lt;master-name&gt; &lt;password&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> auth-pass</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> MySUPER--secret-0123passw0rd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 指定多少毫秒之后 主节点没有应答哨兵sentinel 此时 哨兵主观上认为主节点下线 默认30秒</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sentinel down-after-milliseconds &lt;master-name&gt; &lt;milliseconds&gt; sentinel down-after-milliseconds mymaster 30000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行 同步， 这个数字越小，完成failover所需的时间就越长，</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">但是如果这个数字越大，就意味着越</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 多的slave因为replication而不可用。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">可以通过将这个值设为</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 来保证每次只有一个slave</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 处于不能处理命令请求的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sentinel parallel-syncs &lt;master-name&gt; &lt;numslaves&gt; sentinel parallel-syncs mymaster 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 故障转移的超时时间 failover-timeout 可以用在以下这些方面：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#1. 同一个sentinel对同一个master两次failover之间的间隔时间。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#2.  当一个slave从一个错误的master那里同步数据开始计算时间。直到slave被纠正为向正确的master那里同步数据时。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#3.当想要取消一个正在进行的failover所需要的时间。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#4.当进行failover时，配置所有slaves指向新的master所需的最大时间。不过，即使过了这个超时， slaves依然会被正确配置为指向master，但是就不按parallel-syncs所配置的规则来了</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 默认三分钟</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sentinel failover-timeout &lt;master-name&gt; &lt;milliseconds&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> failover-timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 180000</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># SCRIPTS EXECUTION</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#配置当某一事件发生时所需要执行的脚本，可以通过脚本来通知管理员，例如当系统运行不正常时发邮件通知  相关人员。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#对于脚本的运行结果有以下规则：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#若脚本执行后返回1，那么该脚本稍后将会被再次执行，重复次数目前默认为10  #若脚本执行后返回2，或者比2更高的一个返回值，脚本将不会重复执行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#如果脚本在执行过程中由于收到系统中断信号被终止了，则同返回值为1时的行为相同。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#一个脚本的最大执行时间为60s，如果超过这个时间，脚本将会被一个SIGKILL信号终止，之后重新执行。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#通知型脚本:当sentinel有任何警告级别的事件发生时（比如说redis实例的主观失效和客观失效等等），  将会去调用这个脚本，这时这个脚本应该通过邮件，SMS等方式去通知系统管理员关于系统不正常运行的信息。调用该脚本时，将传给脚本两个参数，一个是事件的类型，一个是事件的描述。如果sentinel.conf配  置文件中配置了这个脚本路径，那么必须保证这个脚本存在于这个路径，并且是可执行的，否则sentinel无  法正常启动成功。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#通知脚本</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># shell编程</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sentinel notification-script &lt;master-name&gt; &lt;script-path&gt; sentinel notification-script mymaster /var/redis/notify.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 客户端重新配置主节点参数脚本</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#  当一个master由于failover而发生改变时，这个脚本将会被调用，通知相关的客户端关于master地址已经发生改变的信息。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 以下参数将会在调用脚本时传给脚本:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># &lt;master-name&gt; &lt;role&gt; &lt;state&gt; &lt;from-ip&gt; &lt;from-port&gt; &lt;to-ip&gt; &lt;to-port&gt; # 目前&lt;state&gt;总是“failover”,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># &lt;role&gt;是“leader”或者“observer”中的一个。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 参数 from-ip, from-port, to-ip, to-port是用来和旧的master和新的master(即旧的slave)通信的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 这个脚本应该是通用的，能被多次调用，不是针对性的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sentinel client-reconfig-script &lt;master-name&gt; &lt;script-path&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> client-reconfig-script</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mymaster</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /var/redis/reconfig.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 一般都是由运维来配置！</span></span></code></pre></div><h1 id="redis应用问题解决" tabindex="-1">Redis应用问题解决 <a class="header-anchor" href="#redis应用问题解决" aria-label="Permalink to “Redis应用问题解决”">​</a></h1>`,20),M=r('<h2 id="缓存穿透" tabindex="-1">缓存穿透 <a class="header-anchor" href="#缓存穿透" aria-label="Permalink to “缓存穿透”">​</a></h2><p><strong>问题描述</strong></p><p>key对应的数据在数据源并不存在，每次针对此key的请求从缓存获取不到，请求都会压到数据源，从而可能压垮数据源。比如用一个不存在的用户id获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库。</p><p><img src="'+v+'" alt="image.png"></p><p><strong>解决方案</strong></p><p>一个一定不存在缓存及查询不到的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。</p><ol><li><strong>对空值缓存</strong>：如果一个查询返回的数据为空（不管是数据是否不存在），我们仍然把这个空结果（null）进行缓存，设置空结果的过期时间会很短，最长不超过五分钟</li><li><strong>设置可访问的名单（白名单）</strong>：使用bitmaps类型定义一个可以访问的名单，名单id作为bitmaps的偏移量，每次访问和bitmap里面的id进行比较，如果访问id不在bitmaps里面，进行拦截，不允许访问。</li><li><strong>采用布隆过滤器</strong>：(布隆过滤器（Bloom Filter）是1970年由布隆提出的。它实际上是一个很长的二进制向量(位图)和一系列随机映射函数（哈希函数）。布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。)将所有可能存在的数据哈希到一个足够大的bitmaps中，一个一定不存在的数据会被这个bitmaps拦截掉，从而避免了对底层存储系统的查询压力。</li><li><strong>进行实时监控</strong>：当发现Redis的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，可以设置黑名单限制服务</li></ol><h2 id="缓存击穿" tabindex="-1"><strong>缓存击穿</strong> <a class="header-anchor" href="#缓存击穿" aria-label="Permalink to “缓存击穿”">​</a></h2><p><strong>问题描述</strong></p><p>key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p><p><img src="'+f+'" alt="image.png"></p><p><strong>解决方案</strong></p><p>key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题。</p><p>解决问题：</p><ol><li><strong>预先设置热门数据</strong>：在redis高峰访问之前，把一些热门数据提前存入到redis里面，加大这些热门数据key的时长</li><li><strong>实时调整</strong>：现场监控哪些数据热门，实时调整key的过期时长</li><li><strong>使用锁</strong>： <ol><li>就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db。</li><li>先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX）去set一个mutex key</li><li>当操作返回成功时，再进行load db的操作，并回设缓存,最后删除mutex key；</li><li>当操作返回失败，证明有线程在load db，当前线程睡眠一段时间再重试整个get缓存的方法。</li></ol></li></ol><p><img src="'+_+'" alt="image.png"></p><h2 id="缓存雪崩" tabindex="-1">缓存雪崩 <a class="header-anchor" href="#缓存雪崩" aria-label="Permalink to “缓存雪崩”">​</a></h2><p><strong>问题描述</strong></p><p>key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p><p>缓存雪崩与缓存击穿的区别在于这里针对很多key缓存，前者则是某一个key</p><p><strong>正常访问</strong></p><p><img src="'+x+'" alt="image.png"></p><p><strong>缓存失效瞬间</strong></p><img src="'+R+'" alt="image.png"><p><strong>解决方案</strong></p><p>缓存失效时的雪崩效应对底层系统的冲击非常可怕！</p><p>解决方案：</p><ol><li><strong>构建多级缓存架构</strong>：nginx缓存 + redis缓存 + 其他缓存（ehcache等）</li><li><strong>使用锁或队列</strong>：用加锁或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。不适用高并发情况</li><li><strong>设置过期标志更新缓存</strong>：记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程在后台去更新实际key的缓存。</li><li><strong>将缓存失效时间分散开</strong>：比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。</li></ol><h2 id="分布式锁" tabindex="-1">分布式锁 <a class="header-anchor" href="#分布式锁" aria-label="Permalink to “分布式锁”">​</a></h2><p><strong>问题描述</strong></p><p>随着业务发展的需要，原单体单机部署的系统被演化成分布式集群系统后，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的并发控制锁策略失效，单纯的Java API并不能提供分布式锁的能力。为了解决这个问题就需要一种跨JVM的互斥机制来控制共享资源的访问，这就是分布式锁要解决的问题！</p><p>分布式锁主流的实现方案：</p><ol><li>基于数据库实现分布式锁</li><li>基于缓存（Redis等）</li><li>基于Zookeeper</li></ol><p>每一种分布式锁解决方案都有各自的优缺点：</p><ul><li>性能：redis最高</li><li>可靠性：zookeeper最高</li></ul><p>这里，我们就基于redis实现分布式锁。</p><h2 id="分布式锁演进案例" tabindex="-1">分布式锁演进案例 <a class="header-anchor" href="#分布式锁演进案例" aria-label="Permalink to “分布式锁演进案例”">​</a></h2><h3 id="使用redis实现分布式锁" tabindex="-1">使用redis实现分布式锁 <a class="header-anchor" href="#使用redis实现分布式锁" aria-label="Permalink to “使用redis实现分布式锁”">​</a></h3><p>redis:命令</p><p><code>set sku:1:info &quot;OK&quot; NX PX 10000</code></p><p><strong>EX second</strong> ：设置键的过期时间为 second 秒。 <code>SET key value EX second</code> 效果等同于 <code>SETEX key second value</code>。</p><p><strong>PX millisecond</strong> ：设置键的过期时间为 millisecond 毫秒。 <code>SET key value PX millisecond</code> 效果等同于 <code>PSETEX key millisecond value</code> 。</p><p><strong>NX</strong> ：只在键不存在时，才对键进行设置操作。 <code>SET key value NX</code> 效果等同于 <code>SETNX key value</code> 。</p><p><strong>XX</strong> ：只在键已经存在时，才对键进行设置操作。</p><img src="'+S+`" alt="image.png"><ol><li>多个客户端同时获取锁（setnx）</li><li>获取成功，执行业务逻辑{从db获取数据，放入缓存}，执行完成释放锁（del）</li><li>其他客户端等待重试</li></ol><p><strong>编写代码</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> distributedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPoolUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getJedisPoolInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Jedis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 获取锁</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Long</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setnx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 获取锁成功,查询num的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (lock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 判断num为空 return</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(num)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> parseInt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Integer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(num);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 把num值加1 (这里不使用 incr 命令是因为 incr 具有原子性)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">parseInt));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 释放锁</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 获取锁失败,每隔0.1秒再获取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            Thread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (InterruptedException </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">printStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; retry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        distributedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>测试</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> finalI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        distributedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(finalI);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Thread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>问题：setnx刚好获取到锁，业务逻辑出现异常，导致锁无法释放</p><p>解决：设置过期时间，自动释放锁。</p><h3 id="优化之设置锁的过期时间" tabindex="-1">优化之设置锁的过期时间 <a class="header-anchor" href="#优化之设置锁的过期时间" aria-label="Permalink to “优化之设置锁的过期时间”">​</a></h3><p>设置过期时间有两种方式：</p><ol><li>首先想到通过expire设置过期时间（缺乏原子性：如果在setnx和expire之间出现异常，锁也无法释放）</li><li>在set时指定过期时间（推荐）</li></ol><img src="`+P+`" alt="image.png"><p>设置过期时间</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 获取锁 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//String result = jedis.set(&quot;lock&quot;, &quot;111&quot;, &quot;NX&quot;, &quot;EX&quot;, 1000);</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> //Jedis 3.1.0之前使用该方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> SetParams</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">nx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 获取锁成功,查询num的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;OK&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(lock)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>问题：可能会释放其他服务器的锁。</p><p>场景：如果业务逻辑的执行时间是7s。执行流程如下</p><ol><li>index1业务逻辑没执行完，3秒后锁被自动释放。</li><li>index2获取到锁，执行业务逻辑，3秒后锁被自动释放。</li><li>index3获取到锁，执行业务逻辑</li><li>index1业务逻辑执行完成，开始调用del释放锁，这时释放的是index3的锁，导致index3的业务只执行1s就被别人释放。</li></ol><p>最终等于没锁的情况。</p><p>解决：setnx获取锁时，设置一个指定的唯一值（例如：uuid）；释放前获取这个值，判断是否自己的锁</p><h3 id="优化之uuid防误删" tabindex="-1">优化之UUID防误删 <a class="header-anchor" href="#优化之uuid防误删" aria-label="Permalink to “优化之UUID防误删”">​</a></h3><img src="`+T+`" alt="image.png"><p>修改获取锁和释放锁部分代码</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 获取锁</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uuid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UUID.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">randomUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, uuid, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> SetParams</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">nx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 释放锁</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (uuid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>问题：删除操作缺乏原子性。 场景：</p><ol><li>index1执行删除时，查询到的lock值确实和uuid相等</li><li>index1执行删除前，lock刚好过期时间已到，被redis自动释放</li><li>index2获取了lock，index2线程获取到了cpu的资源，开始执行方法</li><li>index1执行删除，此时会把index2的lock删除</li><li>index1 因为已经在方法中了，所以不需要重新上锁。index1有执行的权限。index1已经比较完成了，这个时候，开始执行 <code>jedis.del(&quot;lock&quot;);</code> 删除的index2的锁！</li></ol><h3 id="优化之lua脚本保证删除的原子性" tabindex="-1">优化之LUA脚本保证删除的原子性 <a class="header-anchor" href="#优化之lua脚本保证删除的原子性" aria-label="Permalink to “优化之LUA脚本保证删除的原子性”">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> distributedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    JedisPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> JedisPoolUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getJedisPoolInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Jedis</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedisPool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 获取锁</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uuid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UUID.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">randomUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 定义一个锁,不同的方法使用不同的锁</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lockKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;lock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(lockKey, uuid, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> SetParams</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">nx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(lock);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;OK&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(lock)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(num)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> parseInt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Integer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(num);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 把 num 值加1 (这里不使用 incr 命令是因为 incr 具有原子性)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">parseInt));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 释放锁 (使用 lua 脚本来锁)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 定义 lua 脚本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> script</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;if redis.call(&#39;get&#39;, KEYS[1]) == ARGV[1] then return redis.call(&#39;del&#39;, KEYS[1]) else return 0 end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        jedis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">eval</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(script, Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(lockKey), Collections.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">singletonList</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(uuid));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 获取锁失败,每隔0.1秒再获取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            Thread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (InterruptedException </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">printStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; retry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        distributedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>Lua 脚本详解： <img src="`+O+'" alt="image.png"></p><p>为了确保分布式锁可用，我们至少要确保锁的实现同时满足以下四个条件：</p><ul><li>互斥性。在任意时刻，只有一个客户端能持有锁。</li><li>不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</li><li>解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。</li><li>加锁和解锁必须具有原子性。</li></ul><h1 id="redis6-0新功能" tabindex="-1">Redis6.0新功能 <a class="header-anchor" href="#redis6-0新功能" aria-label="Permalink to “Redis6.0新功能”">​</a></h1>',75),V=r(`<h2 id="acl" tabindex="-1">ACL <a class="header-anchor" href="#acl" aria-label="Permalink to “ACL”">​</a></h2><p>::: note 简介</p><p>Redis ACL是Access Control List（访问控制列表）的缩写，该功能允许根据可以执行的命令和可以访问的键来限制某些连接。 在Redis 5版本之前，Redis 安全规则只有密码控制还有通过rename 来调整高危命令比如 <code>flushdb</code> ， <code>KEYS*</code> ， <code>shutdown</code> 等。Redis 6 则提供ACL的功能对用户进行更细粒度的权限控制</p><ul><li>接入权限:用户名和密码</li><li>可以执行的命令</li><li>可以操作的 KEY</li></ul><p>参考官网 <a href="https://redis.io/topics/acl" target="_blank" rel="noreferrer">https://redis.io/topics/acl</a></p><p>:::</p><h3 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to “命令”">​</a></h3><p>展现用户权限列表</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) user default on </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#b910dd00c9b724febb611948def709f20ba5b70bd6e62926c45899d9b3e1d8ff ~* &amp;* +@all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 解析</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># default 用户名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># on 是否启用(on/off)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># #b910dd00c... 密码(没密码为nopass)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># ~* 可操作的key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># +@all 可执行的命令</span></span></code></pre></div><p>查看添加权限指令类别</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;keyspace&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;read&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;write&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;set&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sortedset&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;list&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;hash&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;string&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;bitmap&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;hyperloglog&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;geo&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;stream&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;pubsub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;admin&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;fast&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;slow&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;blocking&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;dangerous&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;connection&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;transaction&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;scripting&quot;</span></span></code></pre></div><p>加参数类型名可以查看类型下具体命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;incrbyfloat&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;getdel&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;stralgo&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;strlen&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;getset&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;getrange&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;decrby&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;incrby&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;mget&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;msetnx&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;get&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;incr&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;set&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;psetex&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;setrange&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;substr&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;getex&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;setex&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;decr&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;append&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;mset&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;setnx&quot;</span></span></code></pre></div><p>查看当前用户</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> whoami</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;default&quot;</span></span></code></pre></div><p>使用<code>acl setuser</code>命令创建和编辑用户ACL</p><p><strong>ACL规则</strong></p><p>下面是有效ACL规则的列表。某些规则只是用于激活或删除标志，或对用户ACL执行给定更改的单个单词。其他规则是字符前缀，它们与命令或类别名称、键模式等连接在一起。</p><table tabindex="0"><thead><tr><th>ACL规则</th><th></th><th></th></tr></thead><tbody><tr><td>类型</td><td>参数</td><td>说明</td></tr><tr><td>启动和禁用用户</td><td>on</td><td>激活某用户账号</td></tr><tr><td></td><td>off</td><td>禁用某用户账号。注意，已验证的连接仍然可以工作。如果默认用户被标记为off，则新连接将在未进行身份验证的情况下启动，并要求用户使用AUTH选项发送AUTH或HELLO，以便以某种方式进行身份验证。</td></tr><tr><td>权限的添加删除</td><td>+&lt;command&gt;</td><td>将指令添加到用户可以调用的指令列表中</td></tr><tr><td></td><td>-&lt;command&gt;</td><td>从用户可执行指令列表移除指令</td></tr><tr><td></td><td>+@&lt;category&gt;</td><td>添加该类别中用户要调用的所有指令，有效类别为@admin、@set、@sortedset…等，通过调用ACL CAT命令查看完整列表。特殊类别@all表示所有命令，包括当前存在于服务器中的命令，以及将来将通过模块加载的命令。</td></tr><tr><td></td><td>-@&lt;actegory&gt;</td><td>从用户可调用指令中移除类别</td></tr><tr><td></td><td>allcommands</td><td>+@all的别名</td></tr><tr><td></td><td>nocommand</td><td>-@all的别名</td></tr><tr><td>可操作键的添加或删除</td><td>~&lt;pattern&gt;</td><td>添加可作为用户可操作的键的模式。例如~*允许所有的键</td></tr></tbody></table><p>通过命令创建新用户默认权限</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> setuser</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chen</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user chen off &amp;* -@all&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user default on #dd3157713500d2eab3ba35566d4eb241ce93a85416d305dcf1b752e11e478280 ~* &amp;* +@all&quot;</span></span></code></pre></div><p>设置有用户名、密码、ACL权限、并启用的用户</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user chen off &amp;* -@all&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user chengp on #a1159e9df3670d549d04524532629f5477ceb7deec9b45e47e8c009506ecb2c8 ~cached:* &amp;* -@all +get&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user default on #dd3157713500d2eab3ba35566d4eb241ce93a85416d305dcf1b752e11e478280 ~* &amp;* +@all&quot;</span></span></code></pre></div><p>切换用户，验证权限</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">auth</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chengp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pwd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">acl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> whoami</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NOPERM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> permissions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;acl&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> its</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> subcommand</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> foo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NOPERM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> permissions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> access</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> one</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keys</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> used</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> arguments</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cached:11</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cached:12</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NOPERM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> permissions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;set&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> its</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> subcommand</span></span></code></pre></div><h2 id="io多线程" tabindex="-1">IO多线程 <a class="header-anchor" href="#io多线程" aria-label="Permalink to “IO多线程”">​</a></h2><p>::: note 简介</p><p>IO多线程其实指<strong>客户端交互部分</strong>的<strong>网络IO</strong>交互处理模块多线程，而非<strong>执行命令多线程</strong>。Redis6执行命令依然是单线程。</p><p>:::</p><h3 id="原理架构" tabindex="-1">原理架构 <a class="header-anchor" href="#原理架构" aria-label="Permalink to “原理架构”">​</a></h3><p>Redis 6 加入多线程,但跟 Memcached 这种从 IO处理到数据访问多线程的实现模式有些差异。Redis 的多线程部分只是用来处理网络数据的读写和协议解析，执行命令仍然是单线程。之所以这么设计是不想因为多线程而变得复杂，需要去控制 key、lua、事务，LPUSH/LPOP 等等的并发问题。整体的设计大体如下:</p><p><img src="`+j+`" alt="image.png"></p><p>另外，多线程IO默认也是不开启的，需要再配置文件中配置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">io-threads-do-reads</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">io-threads</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4</span></span></code></pre></div>`,34);function X(s,H,$,G,Q,Y){const l=F,h=y("ClientOnly");return n(),D("div",null,[I,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),K,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),L,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),w,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),N,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),J,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),M,k(h,null,{default:t(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),p(l,{key:0,article:s.$frontmatter},null,8,["article"])):e("",!0)]}),_:1}),V])}const ss=g(U,[["render",X]]);export{Z as __pageData,ss as default};
