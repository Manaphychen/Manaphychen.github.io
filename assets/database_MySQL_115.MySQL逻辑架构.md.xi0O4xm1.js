import{_ as p}from"./chunks/ArticleMetadata.BPSr9oED.js";import{_ as t,E as e,c as r,o as h,j as n,I as F,aj as d,w as g,b as y,e as D,a as o}from"./chunks/framework._AF764y6.js";const c="/assets/879XxD.B6SEjnST.png",A="/assets/dlkcaf.zcZwzNtW.png",C="/assets/UJJtnb.V2T8hhZh.png",m="/assets/8Xs3Vz.DM8hWMCA.png",b="/assets/Ax7t86.B3GLYwSj.png",_="/assets/EHKfcj.BUGjRCgu.png",f="/assets/E7b5nD.jb4zegKT.png",u="/assets/Y07i4j.CRsDcdXl.png",S="/assets/bOIyzQ.OMgSQhZu.png",L="/assets/roDaDk.CFghsROK.png",Q="/assets/IOS1c9.hmt1HDdN.png",B="/assets/ppEqPd.j29mMvuf.png",E="/assets/C8zGFG.BwS3fjl5.png",R=JSON.parse('{"title":"MySQL逻辑架构","description":"","frontmatter":{"title":"MySQL逻辑架构","date":"2023-11-02T09:52:43.000Z","permalink":"/mysql/logical-structure/","categories":["数据库","MySQL"],"tags":["MySQL"],"author":"Manaphy"},"headers":[],"relativePath":"database/MySQL/115.MySQL逻辑架构.md","filePath":"database/MySQL/115.MySQL逻辑架构.md","lastUpdated":1743259619000}'),v={name:"database/MySQL/115.MySQL逻辑架构.md"},M=n("h1",{id:"mysql逻辑架构",tabindex:"-1"},[o("MySQL逻辑架构 "),n("a",{class:"header-anchor",href:"#mysql逻辑架构","aria-label":"Permalink to “MySQL逻辑架构”"},"​")],-1),P=d('<h2 id="_1-逻辑架构剖析" tabindex="-1">1. 逻辑架构剖析 <a class="header-anchor" href="#_1-逻辑架构剖析" aria-label="Permalink to “1. 逻辑架构剖析”">​</a></h2><h3 id="_1-1-服务器处理客户端请求" tabindex="-1">1.1 服务器处理客户端请求 <a class="header-anchor" href="#_1-1-服务器处理客户端请求" aria-label="Permalink to “1.1 服务器处理客户端请求”">​</a></h3><p>那服务器进程对客户端进程发送的请求做了什么处理，才能产生最后的处理结果呢？这里以查询请求为例展示</p><p><img src="'+c+'" alt="image.png"></p><p>下面具体展开看一下</p><img src="'+A+'" alt="image.png"><h3 id="_1-2-connectors" tabindex="-1">1.2 Connectors <a class="header-anchor" href="#_1-2-connectors" aria-label="Permalink to “1.2 Connectors”">​</a></h3><h3 id="_1-3-第1层-连接层" tabindex="-1">1.3 第1层: 连接层 <a class="header-anchor" href="#_1-3-第1层-连接层" aria-label="Permalink to “1.3 第1层: 连接层”">​</a></h3><p>系统（客户端）访问 MySQL 服务器前，做的第一件事就是建立 TCP 连接。</p><p>经过三次握手建立连接成功后， MySQL 服务器对 TCP 传输过来的账号密码做身份认证、权限获取。</p><ul><li><strong>用户名或密码不对，会收到一个Access denied for user错误，客户端程序结束执行</strong></li><li><strong>用户名密码认证通过，会从权限表查出账号拥有的权限与连接关联，之后的权限判断逻辑，都将依赖于此时读到的权限</strong></li></ul><p>TCP 连接收到请求后，必须要分配给一个线程专门与这个客户端的交互。所以还会有个线程池，去走后面的流程。每一个连接从线程池中获取线程，省去了创建和销毁线程的开销。</p><h3 id="_1-4-第2层-服务层" tabindex="-1">1.4 第2层: 服务层 <a class="header-anchor" href="#_1-4-第2层-服务层" aria-label="Permalink to “1.4 第2层: 服务层”">​</a></h3><ul><li><strong>SQL Interface: SQL接口</strong><ul><li>接收用户的SQL命令，并且返回用户需要查询的结果。比如SELECT ... FROM就是调用SQLInterface</li><li>MySQL支持DML（数据操作语言）、DDL（数据定义语言）、存储过程、视图、触发器、自定义函数等多种SQL语言接口</li></ul></li><li><strong>Parser: 解析器</strong><ul><li>在解析器中对 SQL 语句进行语法分析、语义分析。将SQL语句分解成数据结构，并将这个结构传递到后续步骤，以后SQL语句的传递和处理就是基于这个结构的。如果在分解构成中遇到错误，那么就说明这个SQL语句是不合理的。</li><li>在SQL命令传递到解析器的时候会被解析器验证和解析，并为其创建 语法树 ，并根据数据字典丰富查询语法树，会 验证该客户端是否具有执行该查询的权限 。创建好语法树后，MySQL还会对SQl查询进行语法上的优化，进行查询重写。</li></ul></li><li><strong>Optimizer: 查询优化器</strong><ul><li>SQL语句在语法解析之后、查询之前会使用查询优化器确定 SQL 语句的执行路径，生成一个执行计划 。</li><li>这个执行计划表明应该 使用哪些索引 进行查询（全表检索还是使用索引检索），表之间的连接顺序如何，最后会按照执行计划中的步骤调用存储引擎提供的方法来真正的执行查询，并将查询结果返回给用户。</li><li>它使用“ 选取-投影-连接 ”策略进行查询。例如：</li></ul></li></ul><p><code>SELECT id,name FROM student WHERE gender = &#39;女&#39;; </code></p><p>这个SELECT查询先根据WHERE语句进行 选取 ，而不是将表全部查询出来以后再进行gender过滤。</p><p>这个SELECT查询先根据id和name进行属性 投影 ，而不是将属性全部取出以后再进行过滤，将这两个查询条件 连接 起来生成最终查询结果。</p><ul><li><strong>Caches &amp; Buffers： 查询缓存组件</strong><ul><li>MySQL内部维持着一些Cache和Buffer，比如Query Cache用来缓存一条SELECT语句的执行结果，如果能够在其中找到对应的查询结果，那么就不必再进行查询解析、优化和执行的整个过程了，直接将结果反馈给客户端。</li><li>这个缓存机制是由一系列小缓存组成的。比如表缓存，记录缓存，key缓存，权限缓存等 。</li><li>这个查询缓存可以在 不同客户端之间共享 。</li><li>从MySQL 5.7.20开始，不推荐使用查询缓存，并在 MySQL 8.0中删除 。</li></ul></li></ul><h3 id="_1-5-第3层-引擎层" tabindex="-1">1.5 第3层: 引擎层 <a class="header-anchor" href="#_1-5-第3层-引擎层" aria-label="Permalink to “1.5 第3层: 引擎层”">​</a></h3><p>插件式存储引擎层（Storage Engines），<strong>真正的负责了MySQL中数据的存储和提取，对物理服务器级别维护的底层数据执行操作</strong>，服务器通过API与存储引擎进行通信。不同的存储引擎具有的功能不同，这样我们可以根据自己的实际需要进行选取。</p><p>MySQL 8.0.25默认支持的存储引擎如下</p><p><img src="'+C+'" alt="image.png"></p><h3 id="_1-6-存储层" tabindex="-1">1.6 存储层 <a class="header-anchor" href="#_1-6-存储层" aria-label="Permalink to “1.6 存储层”">​</a></h3><p>所有的数据，数据库、表的定义，表的每一行的内容，索引，都是存在文件系统上，以文件的方式存在的，并完成与存储引擎的交互。当然有些存储引擎比如InnoDB，也支持不使用文件系统直接管理裸设备，但现代文件系统的实现使得这样做没有必要了。在文件系统之下，可以使用本地磁盘，可以使用DAS、NAS、SAN等各种存储系统。</p><h3 id="_1-7-小结" tabindex="-1">1.7 小结 <a class="header-anchor" href="#_1-7-小结" aria-label="Permalink to “1.7 小结”">​</a></h3><p>MySQL架构图本节开篇所示。下面为了熟悉SQL执行流程方便，我们可以简化如下：</p><p><img src="'+m+'" alt="image.png"></p><p>简化为三层结构：</p><ol><li>连接层：客户端和服务器端建立连接，客户端发送 SQL 至服务器端；</li><li>SQL 层（服务层）：对 SQL 语句进行查询处理；与数据库文件的存储方式无关；</li><li>存储引擎层：与数据库文件打交道，负责数据的存储和读取。</li></ol><h2 id="_2-sql执行流程" tabindex="-1">2. SQL执行流程 <a class="header-anchor" href="#_2-sql执行流程" aria-label="Permalink to “2. SQL执行流程”">​</a></h2><h3 id="_2-1-mysql-中的-sql执行流程" tabindex="-1">2.1 MySQL 中的 SQL执行流程 <a class="header-anchor" href="#_2-1-mysql-中的-sql执行流程" aria-label="Permalink to “2.1 MySQL 中的 SQL执行流程”">​</a></h3><p><img src="'+b+'" alt="image.png"></p><p><strong>MySQL的查询流程：</strong></p><p><strong>1. 查询缓存</strong>：Server 如果在查询缓存中发现了这条 SQL 语句，就会直接将结果返回给客户端；如果没有，就进入到解析器阶段。需要说明的是，因为查询缓存往往效率不高，所以在 MySQL8.0 之后就抛弃了这个功能。</p><p><strong>大多数情况查询缓存就是个鸡肋，为什么呢？</strong></p><p>查询缓存是提前把查询结果缓存起来，这样下次不需要执行就可以直接拿到结果。需要说明的是，在MySQL 中的查询缓存，不是缓存查询计划，而是查询对应的结果。这就意味着查询匹配的 鲁棒性大大降低 ，只有 相同的查询操作才会命中查询缓存 。两个查询请求在任何字符上的不同（例如：空格、注释、大小写），都会导致缓存不会命中。因此 MySQL 的 查询缓存命中率不高 。</p><p>同时，如果查询请求中包含某些系统函数、用户自定义变量和函数、一些系统表，如 mysql 、information_schema、 performance_schema 数据库中的表，那这个请求就不会被缓存。以某些系统函数举例，可能同样的函数的两次调用会产生不一样的结果，比如函数 NOW ，每次调用都会产生最新的当前时间，如果在一个查询请求中调用了这个函数，那即使查询请求的文本信息都一样，那不同时间的两次查询也应该得到不同的结果，如果在第一次查询时就缓存了，那第二次查询的时候直接使用第一次查询的结果就是错误的！</p><p>此外，既然是缓存，那就有它 缓存失效的时候 。MySQL的缓存系统会监测涉及到的每张表，只要该表的结构或者数据被修改，如对该表使用了 INSERT 、 UPDATE 、 DELETE 、 TRUNCATE TABLE 、 ALTER TABLE 、 DROP TABLE 或 DROP DATABASE 语句，那使用该表的所有高速缓存查询都将变为无效并从高速缓存中删除！对于 更新压力大的数据库 来说，查询缓存的命中率会非常低。</p><p><strong>2. 解析器</strong>：在解析器中对 SQL 语句进行语法分析、语义分析。</p><p><img src="'+_+'" alt="image.png"></p><p>分析器先做“ 词法分析 ”。你输入的是由多个字符串和空格组成的一条 SQL 语句，MySQL 需要识别出里面的字符串分别是什么，代表什么。 MySQL 从你输入的&quot;select&quot;这个关键字识别出来，这是一个查询语句。它也要把字符串“T”识别成“表名 T”，把字符串“ID”识别成“列 ID”。</p><p>接着，要做“ 语法分析 ”。根据词法分析的结果，语法分析器（比如：Bison）会根据语法规则，判断你输入的这个 SQL 语句是否 满足 MySQL 语法 。</p><p><code>select department_id,job_id,avg(salary) from employee group by department_id;</code></p><p>如果SQL语句正确，则会生成一个这样的语法树：</p><p><img src="'+f+`" alt="image.png"></p><p><strong>3. 优化器</strong>：在优化器中会确定 SQL 语句的执行路径，比如是根据 全表检索 ，还是根据 索引检索 等。</p><p>举例：如下语句是执行两个表的 join：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ID) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">where</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> test1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;zhangwei&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> test2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql高级课程&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><blockquote><p>方案1：可以先从表 test1 里面取出 name=&#39;zhangwei&#39;的记录的 ID 值，再根据 ID 值关联到表 test2，再判断 test2 里面 name的值是否等于 &#39;mysql高级课程&#39;。 方案2：可以先从表 test2 里面取出 name=&#39;mysql高级课程&#39; 的记录的 ID 值，再根据 ID 值关联到 test1，再判断 test1 里面 name的值是否等于 zhangwei。 这两种执行方法的逻辑结果是一样的，但是执行的效率会有不同，而优化器的作用就是决定选择使用哪一个方案。 优化器阶段完成后，这个语句的执行方案就确定下来了，然后进入执行器阶段。</p></blockquote><p>在查询优化器中，可以分为 逻辑查询 优化阶段和 物理查询 优化阶段。</p><p><strong>4. 执行器</strong>：</p><p>截止到现在，还没有真正去读写真实的表，仅仅只是产出了一个执行计划。于是就进入了 执行器阶段 。</p><p><img src="`+u+'" alt="image.png"></p><p>在执行之前需要判断该用户是否 具备权限 。如果没有，就会返回权限错误。如果具备权限，就执行 SQL查询并返回结果。在 MySQL8.0 以下的版本，如果设置了查询缓存，这时会将查询结果进行缓存。</p><p><code>select * from test where id=1;</code></p><blockquote><p>调用 InnoDB 引擎接口取这个表的第一行，判断 ID 值是不是1，如果不是则跳过，如果是则将这行存在结果集中； 调用引擎接口取“下一行”，重复相同的判断逻辑，直到取到这个表的最后一行。 执行器将上述遍历过程中所有满足条件的行组成的记录集作为结果集返回给客户端。</p></blockquote><p>至此，这个语句就执行完成了。对于有索引的表，执行的逻辑也差不多。</p><p>SQL 语句在 MySQL 中的流程是： SQL语句→查询缓存→解析器→优化器→执行器 。</p><p><img src="'+S+`" alt="image.png"></p><h3 id="_2-2-mysql8中sql执行原理" tabindex="-1">2.2 MySQL8中SQL执行原理 <a class="header-anchor" href="#_2-2-mysql8中sql执行原理" aria-label="Permalink to “2.2 MySQL8中SQL执行原理”">​</a></h3><h4 id="_1-确认profiling-是否开启" tabindex="-1">1. 确认profiling 是否开启 <a class="header-anchor" href="#_1-确认profiling-是否开启" aria-label="Permalink to “1. 确认profiling 是否开启”">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@profiling;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| @@profiling |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|           </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> show variables </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">like</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;profiling&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+-------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| Variable_name | </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+-------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| profiling     | </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+-------+</span></span></code></pre></div><p>profiling=0 代表关闭，我们需要把 profiling 打开，即设置为 1：</p><p><code>set profiling=1;</code></p><h4 id="_2-多次执行相同sql查询" tabindex="-1">2. 多次执行相同SQL查询 <a class="header-anchor" href="#_2-多次执行相同sql查询" aria-label="Permalink to “2. 多次执行相同SQL查询”">​</a></h4><p><code>select * from employee;</code></p><h4 id="_3-查看profiles" tabindex="-1">3. 查看profiles <a class="header-anchor" href="#_3-查看profiles" aria-label="Permalink to “3. 查看profiles”">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> profiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 显示最近的几次查询</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+----------+------------+------------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Query_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+----------+------------+------------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00252600</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()      </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00680075</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> databases</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">         |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00118700</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00142700</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00047925</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> * from employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00045450</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> * from employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        7</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.00047425</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> * from employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+----------+------------+------------------------+</span></span></code></pre></div><h4 id="_4-查看profile" tabindex="-1">4. 查看profile <a class="header-anchor" href="#_4-查看profile" aria-label="Permalink to “4. 查看profile”">​</a></h4><p>显示执行计划，查看程序的执行步骤</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> profile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 等同于 show profile for query 7;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+--------------------------------+----------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                         |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+--------------------------------+----------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> starting</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000116</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Executing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hook</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transaction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000012</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> starting</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000015</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> checking</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> permissions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000013</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 权限检查</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Opening</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                 |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000051</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 打开表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000011</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 初始化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> System</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000018</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 锁系统</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> optimizing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000012</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 优化查询</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> statistics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000026</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> preparing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000025</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 准备</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> executing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000102</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 执行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                            |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> query</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000008</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handler</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> commit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000013</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> closing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                 |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000012</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> freeing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> items</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000017</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> cleaning</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000016</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+--------------------------------+----------+</span></span></code></pre></div><p>此外，还可以查询更丰富的内容</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> profile</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cpu,block</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> io</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> query</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+--------------------------------+----------+----------+------------+--------------+---------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                         |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CPU_user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CPU_system</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Block_ops_in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Block_ops_out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+--------------------------------+----------+----------+------------+--------------+---------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> starting</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000102</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000087</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Executing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hook</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transaction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000008</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> starting</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000014</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000014</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> checking</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> permissions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Opening</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                 |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000050</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000050</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000012</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000013</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> System</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000016</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000015</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> optimizing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> statistics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000021</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000003</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> preparing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000021</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000004</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> executing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000108</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000093</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000015</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                            |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000008</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000001</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> query</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000008</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000006</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000002</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handler</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> commit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000014</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000012</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000001</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> closing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                 |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000012</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000010</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000002</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> freeing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> items</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000015</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000014</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000002</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> cleaning</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000016</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 0.000013</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   0.000003</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+--------------------------------+----------+----------+------------+--------------+---------------+</span></span></code></pre></div><h3 id="_2-3-sql语法顺序" tabindex="-1">2.3 SQL语法顺序 <a class="header-anchor" href="#_2-3-sql语法顺序" aria-label="Permalink to “2.3 SQL语法顺序”">​</a></h3><p>随着Mysql版本的更新换代，其优化器也在不断的升级，优化器会分析不同执行顺序产生的性能消耗不同而动态调整执行顺序。</p><p>需求：查询每个部门年龄高于20岁的人数且高于20岁人数不能少于2人，显示人数最多的第一名部门信息下面是经常出现的查询顺序：</p><p><img src="`+L+'" alt="image.png"></p><h2 id="_3-数据库缓冲池-buffer-pool" tabindex="-1">3. 数据库缓冲池(buffer pool) <a class="header-anchor" href="#_3-数据库缓冲池-buffer-pool" aria-label="Permalink to “3. 数据库缓冲池(buffer pool)”">​</a></h2><p><code>InnoDB</code> 存储引擎是以页为单位来管理存储空间的，我们进行的增删改查操作其实本质上都是在访问页面（包括读页面、写页面、创建新页面等操作）。而磁盘 I/O 需要消耗的时间很多，而在内存中进行操作，效率则会高很多，为了能让数据表或者索引中的数据随时被我们所用，DBMS 会申请<code>占用内存来作为数据缓冲池</code>，在真正访问页面之前，需要把在磁盘上的页缓存到内存中的<code>Buffer Pool</code>之后才可以访问。</p><p>这样做的好处是可以让磁盘活动最小化，从而<code>减少与磁盘直接进行 I/O 的时间</code>。要知道，这种策略对提升 SQL 语句的查询性能来说至关重要。如果索引的数据在缓冲池里，那么访问的成本就会降低很多。</p><h3 id="_3-1-缓冲池-vs-查询缓存" tabindex="-1">3.1 缓冲池 vs 查询缓存 <a class="header-anchor" href="#_3-1-缓冲池-vs-查询缓存" aria-label="Permalink to “3.1 缓冲池 vs 查询缓存”">​</a></h3><p><code>冲池和查询缓存是一个东西吗？不是。</code></p><h4 id="_1-缓冲池-buffer-pool" tabindex="-1">1. 缓冲池 (Buffer Pool) <a class="header-anchor" href="#_1-缓冲池-buffer-pool" aria-label="Permalink to “1. 缓冲池 (Buffer Pool)”">​</a></h4><p>首先我们需要了解在 InnoDB 存储引擎中，缓冲池都包括了哪些。</p><p>在 InnoDB 存储引擎中有一部分数据会放到内存中，缓冲池则占了这部分内存的大部分，它用来存储各种数据的缓存，如下图所示：</p><p><img src="'+Q+'" alt="image.png"></p><p>从图中，你能看到 InnoDB 缓冲池包括了数据页、索引页、插入缓冲、锁信息、自适应 Hash 和数据字典信息等。</p><p><strong>缓存池的重要性：</strong></p><p><strong>缓存原则：</strong></p><p>“<code> 位置 * 频次</code>”这个原则，可以帮我们对 I/O 访问效率进行优化。</p><p>首先，位置决定效率，提供缓冲池就是为了在内存中可以直接访问数据。</p><p>其次，频次决定优先级顺序。因为缓冲池的大小是有限的，比如磁盘有 200G，但是内存只有 16G，缓冲池大小只有 1G，就无法将所有数据都加载到缓冲池里，这时就涉及到优先级顺序，会<code>优先对使用频次高的热数据进行加载</code>。</p><p><strong>缓冲池的预读特性：</strong></p><h4 id="_2-查询缓存" tabindex="-1">2. 查询缓存 <a class="header-anchor" href="#_2-查询缓存" aria-label="Permalink to “2. 查询缓存”">​</a></h4><p>那么什么是查询缓存呢？</p><p>查询缓存是提前把<code>查询结果缓存</code>起来，这样下次不需要执行就可以直接拿到结果。需要说明的是，在MySQL 中的查询缓存，不是缓存查询计划，而是查询对应的结果。因为命中条件苛刻，而且只要数据表发生变化，查询缓存就会失效，因此命中率低。</p><h3 id="_3-2-缓冲池如何读取数据" tabindex="-1">3.2 缓冲池如何读取数据 <a class="header-anchor" href="#_3-2-缓冲池如何读取数据" aria-label="Permalink to “3.2 缓冲池如何读取数据”">​</a></h3><p>缓冲池管理器会尽量将经常使用的数据保存起来，在数据库进行页面读操作的时候，首先会判断该页面是否在缓冲池中，如果存在就直接读取，如果不存在，就会通过内存或磁盘将页面存放到缓冲池中再进行读取。</p><p>缓存在数据库中的结构和作用如下图所示：</p><p><img src="'+B+`" alt="image.png"></p><p><strong>如果我们执行 SQL 语句的时候更新了缓存池中的数据，那么这些数据会马上同步到磁盘上吗？</strong></p><h3 id="_3-3-查看-设置缓冲池的大小" tabindex="-1">3.3 查看/设置缓冲池的大小 <a class="header-anchor" href="#_3-3-查看-设置缓冲池的大小" aria-label="Permalink to “3.3 查看/设置缓冲池的大小”">​</a></h3><p>如果你使用的是 InnoDB 存储引擎，可以通过查看 <code>innodb_buffer_pool_size </code>变量来查看缓冲池的大小。命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> variables</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;innodb_buffer_pool_size&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+-------------------------+-----------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Variable_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">     |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+-------------------------+-----------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> innodb_buffer_pool_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 134217728</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">+-------------------------+-----------+</span></span></code></pre></div><p>你能看到此时 InnoDB 的缓冲池大小只有 134217728/1024/1024=128MB。我们可以修改缓冲池大小，比如改为256MB，方法如下：</p><p><code>set global innodb_buffer_pool_size = 268435456;</code></p><p>或者：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[server]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">innodb_buffer_pool_size</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 268435456</span></span></code></pre></div><h3 id="_3-4-多个buffer-pool实例" tabindex="-1">3.4 多个Buffer Pool实例 <a class="header-anchor" href="#_3-4-多个buffer-pool实例" aria-label="Permalink to “3.4  多个Buffer Pool实例”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[server]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">innodb_buffer_pool_instances</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span></span></code></pre></div><p>这样就表明我们要创建2个Buffer Pool 实例。</p><p><code>show variables like &#39;innodb_buffer_pool_instances&#39;;</code></p><p>那每个Buffer Pool 实例实际占多少内存空间呢？其实使用这个公式算出来的：</p><p><code>innodb_buffer_pool_size/innodb_buffer_pool_instances</code></p><p>也就是总共的大小除以实例的个数，结果就是每个<code>Buffer Pool</code> 实例占用的大小。</p><h3 id="_3-5-引申问题" tabindex="-1">3.5 引申问题 <a class="header-anchor" href="#_3-5-引申问题" aria-label="Permalink to “3.5 引申问题”">​</a></h3><p>Buffer Pool是MySQL内存结构中十分核心的一个组成，你可以先把它想象成一个黑盒子。</p><p><strong>黑盒下的更新数据流程</strong></p><p><img src="`+E+'" alt="image.png"></p><p>我更新到一半突然发生错误了，想要回滚到更新之前的版本，该怎么办？连数据持久化的保证、事务回滚都做不到还谈什么崩溃恢复？</p><p>答案：<strong>Redo Log &amp; Undo Log</strong></p>',121);function q(s,x,T,I,w,O){const k=p,l=e("ClientOnly");return h(),r("div",null,[M,F(l,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(h(),y(k,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),P])}const j=t(v,[["render",q]]);export{R as __pageData,j as default};
