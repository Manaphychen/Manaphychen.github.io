import{_ as s,c as i,o as a,aj as n}from"./chunks/framework._AF764y6.js";const h="/assets/OTPTlc.Bb8wVqLj.png",p="/assets/veSLng.DvhHenyq.png",t="/assets/Gw3Ctb.DK2MBqbd.png",l="/assets/vHI8Mh.Da50jbxt.png",o=JSON.parse('{"title":"结构型 - 外观模式","description":"","frontmatter":{"title":"结构型 - 外观模式","date":"2023-10-25T00:26:00.000Z","permalink":"/design_pattern/facade/","categories":["后端","设计模式"],"tags":["设计模式"],"author":"Manaphy"},"headers":[],"relativePath":"book/设计模式/10.结构型-外观模式.md","filePath":"book/设计模式/10.结构型-外观模式.md","lastUpdated":1743612544000}'),k={name:"book/设计模式/10.结构型-外观模式.md"},e=n('<p><img src="'+h+'" alt=""></p><blockquote><p>外观模式也叫门面模式，主要解决的是降低调用方的使用接口的复杂逻辑组合。这样调用方与实际的接口提供方提供方提供了一个中间层，用于包装逻辑提供API接口。有些时候外观模式也被用在中间件层，对服务中的通用性复杂逻辑进行中间件层包装，让使用方可以只关心业务开发。</p></blockquote><h2 id="简化复杂子系统的访问" tabindex="-1">简化复杂子系统的访问 <a class="header-anchor" href="#简化复杂子系统的访问" aria-label="Permalink to “简化复杂子系统的访问”">​</a></h2><p>还记得在2019年的时候，我给政府部门开发过一个「人才津贴申报」系统，目的是帮助地方城市吸引人才，招贤纳士。地方城市将人才分为了好几类，不同类别的人才享受的津贴是不一样的，例如「硕士生」和「博士生」到手的津贴就相差甚远，如果是获得过国家级奖项的人才，会直接分配房子。</p><p>无论如何，所有的津贴领取都有两个相同的前提条件：1.在当地缴纳社保，2.无犯罪记录。如果是分配住房，就会再增加一个条件，就是本人和配偶名下无房产。所以为了开发这套系统，我需要和社保局、公安部、住建部做对接，调用他们的接口来获取个人数据，以判断个人是否符合领取津贴的条件。</p><p>我们用代码来描述这个过程，类图设计的非常简单，如下：</p><img src="'+p+`"><p>客户端需要访问三个系统接口，以此来判断个人是否符合条件领取津贴。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SheBaoSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getSBInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;查询社保,获取个人社保信息...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> ZhuJianSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getZJInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;查询住建部,获取个人住房信息...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> GongAnSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getGAInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;查询公安部,获取个人犯罪记录信息...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>客户端调用</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Client</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		SheBaoSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sheBaoSystem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> SheBaoSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		ZhuJianSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> zhuJianSystem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ZhuJianSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		GongAnSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> gongAnSystem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> GongAnSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		sheBaoSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSBInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		zhuJianSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getZJInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		gongAnSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getGAInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>客户端可以获取到个人的社保信息、住房信息、犯罪记录等数据，基于这些数据来进行业务判断个人是否符合领取条件，大功告成了。</p><p>但是很快同事在开发另一块功能的时候，也需要查询这些数据，但是它并不想知道我是如何跟第三方子系统对接的，问我能不能提供一个统一的接口，他只需要简单的调用就可以获取这些数据呢？</p><p>我的回答是：当然可以，我给你写一个简单的外观类吧。</p><p>优化后的类图设计如下：</p><img src="`+t+`"><p>子系统类代码不变，封装一个<code>Facade</code>类，来简化客户端对复杂的第三方系统的调用。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Facade</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SheBaoSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sheBaoSystem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> SheBaoSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ZhuJianSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> zhuJianSystem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ZhuJianSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GongAnSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> gongAnSystem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> GongAnSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 获取社保信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getSBInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.sheBaoSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSBInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 获取住房信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getZJInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.zhuJianSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getZJInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 获取犯罪记录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getGAInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.gongAnSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getGAInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>客户端调用</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Client</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Facade</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> facade</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Facade</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		facade.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSBInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		facade.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getZJInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		facade.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getGAInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>运行结果不变，客户端调用变得非常简单。现在我只要把<code>Facade</code>类提供给同事就行了，它只需要调用外观类就可以获取这些数据了，而无需知道我是如何请求第三方系统来获取这些数据的，这才是一个真正的「高内聚」实现。</p><h2 id="外观模式的定义" tabindex="-1">外观模式的定义 <a class="header-anchor" href="#外观模式的定义" aria-label="Permalink to “外观模式的定义”">​</a></h2><blockquote><p>要求一个子系统的外部与其内部的通信必须通过一个统一的对象进行。门面模式提供一个高层次的接口，使得子系统更易于使用。</p></blockquote><p><img src="`+l+'" alt="image.png"></p><ul><li>Facade：外观类，也是客户端调用的类，外观类了解所有子系统的功能，它本身没有逻辑，只是将请求转发给对应的子系统执行。</li><li>System*：子系统类，真正干活的人，子系统不知道外观类的存在。</li></ul><p>外观模式非常的简单，它注重的是「统一的对象」，不管子系统多么的复杂，外观模式总是能够提供一个简单的接口供客户端调用。</p><h2 id="外观模式的优缺点" tabindex="-1">外观模式的优缺点 <a class="header-anchor" href="#外观模式的优缺点" aria-label="Permalink to “外观模式的优缺点”">​</a></h2><p><strong>优点</strong></p><ol><li>松散耦合，减少了客户端对子系统的依赖，只依赖外观类，简化了客户端的使用。</li><li>对高层模块屏蔽了底层实现，子系统的业务修改对于客户端来说是透明的。</li><li>提高了灵活性，不管子系统如何变化，只要不影响外观类就可以。</li><li>更加的安全了，外观类是子系统的唯一访问入口，对于不想暴露的接口，外观类不开通即可。</li></ol><p><strong>缺点</strong></p><p>外观类会变得非常复杂，外观类成了访问子系统的唯一入口，外观类一旦异常就完蛋了。而且子系统的变更一旦影响到外观类，外观类就不得不修改了，这一旦违反了「开闭原则」。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to “总结”">​</a></h2><p>如果你想为一个复杂的模块或子系统提供一个供外界访问的简单接口，你就可以考虑使用外观模式。</p><p>外观模式还可以预防低水平的开发者带来的风险扩展，禁止新人直接调用系统的核心模块，只提供一个外观类给其操作。</p><p>使用外观模式时，有一点是开发者经常忽略的，就是「<strong>严禁在外观类中写任何逻辑</strong>」，外观类应该只负责转发请求，一旦有了业务逻辑，就意味着子系统必须依赖外观类才能被访问，依赖被倒置了，这是设计上的缺陷，不仅违反了「单一职责」，还破坏了系统的封装性。</p>',35),d=[e];function r(g,A,y,D,c,C){return a(),i("div",null,d)}const F=s(k,[["render",r]]);export{o as __pageData,F as default};
