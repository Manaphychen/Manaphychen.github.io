import{_ as k}from"./chunks/ArticleMetadata.H12JcJLK.js";import{_ as t,E as e,c as d,o as n,j as l,I as A,aj as r,w as g,b as y,e as D,a as E}from"./chunks/framework._AF764y6.js";const C="/assets/IECohW.jxqmBgZD.png",c="/assets/Z24TWd.CJcshPyP.png",F="/assets/LfsQKl.C5SDrA3Q.png",N=JSON.parse('{"title":"变量、流程控制、游标与触发器","description":"","frontmatter":{"title":"变量、流程控制、游标与触发器","date":"2023-11-02T10:06:04.000Z","permalink":"/mysql/c3ee05/","categories":["数据库","MySQL"],"tags":["MySQL"],"author":"Manaphy"},"headers":[],"relativePath":"database/MySQL/111.变量、流程控制、游标与触发器.md","filePath":"database/MySQL/111.变量、流程控制、游标与触发器.md","lastUpdated":1743612544000}'),o={name:"database/MySQL/111.变量、流程控制、游标与触发器.md"},B=l("h1",{id:"变量、流程控制、游标与触发器",tabindex:"-1"},[E("变量、流程控制、游标与触发器 "),l("a",{class:"header-anchor",href:"#变量、流程控制、游标与触发器","aria-label":"Permalink to “变量、流程控制、游标与触发器”"},"​")],-1),m=r('<h2 id="_1-变量" tabindex="-1">1. 变量 <a class="header-anchor" href="#_1-变量" aria-label="Permalink to “1. 变量”">​</a></h2><p>在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。</p><p>在 MySQL 数据库中，变量分为<code>系统变量</code>以及<code>用户自定义变量</code>。</p><h3 id="_1-1-系统变量" tabindex="-1">1.1 系统变量 <a class="header-anchor" href="#_1-1-系统变量" aria-label="Permalink to “1.1 系统变量”">​</a></h3><h4 id="_1-1-1-系统变量分类" tabindex="-1">1.1.1 系统变量分类 <a class="header-anchor" href="#_1-1-1-系统变量分类" aria-label="Permalink to “1.1.1 系统变量分类”">​</a></h4><p>变量由系统定义，不是用户定义，属于<code>服务器</code>层面。启动MySQL服务，生成MySQL服务实例期间，MySQL将为MySQL服务器内存中的系统变量赋值，这些系统变量定义了当前MySQL服务实例的属性、特征。这些系统变量的值要么是<code>编译MySQL时参数</code>的默认值，要么是<code>配置文件</code>（例如my.ini等）中的参数值。大家可以通过网址 <a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html" target="_blank" rel="noreferrer">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html</a> 查看MySQL文档的系统变量。</p><p>系统变量分为全局系统变量（需要添加<code>global</code> 关键字）以及会话系统变量（需要添加 <code>session</code> 关键字），有时也把全局系统变量简称为全局变量，有时也把会话系统变量称为local变量。<strong>如果不写，默认会话级别。</strong> 静态变量（在 MySQL 服务实例运行期间它们的值不能使用 set 动态修改）属于特殊的全局系统变量。</p><p>每一个MySQL客户机成功连接MySQL服务器后，都会产生与之对应的会话。会话期间，MySQL服务实例会在MySQL服务器内存中生成与该会话对应的会话系统变量，这些会话系统变量的初始值是全局系统变量值的复制。如下图：</p><p><img src="'+C+`" alt="image.png"></p><ul><li>全局系统变量针对于所有会话（连接）有效，但<code>不能跨重启</code></li><li>会话系统变量仅针对于当前会话（连接）有效。会话期间，当前会话对某个会话系统变量值的修改，不会影响其他会话同一个会话系统变量的值。</li><li>会话1对某个全局系统变量值的修改会导致会话2中同一个全局系统变量值的修改。</li></ul><p>在MySQL中有些系统变量只能是全局的，例如 max_connections 用于限制服务器的最大连接数；有些系统变量作用域既可以是全局又可以是会话，例如 character_set_client 用于设置客户端的字符集；有些系统变量的作用域只能是当前会话，例如 pseudo_thread_id 用于标记当前会话的 MySQL 连接 ID。</p><h4 id="_1-1-2-查看系统变量" tabindex="-1">1.1.2 查看系统变量 <a class="header-anchor" href="#_1-1-2-查看系统变量" aria-label="Permalink to “1.1.2 查看系统变量”">​</a></h4><ul><li><strong>查看所有或部分系统变量</strong></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 查看所有全局变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> VARIABLES;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 查看所有会话变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SESSION</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> VARIABLES;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">或</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW VARIABLES;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 查看满足条件的部分系统变量。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> VARIABLES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;%标识符%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 查看满足条件的部分会话变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SESSION</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> VARIABLES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;%标识符%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> VARIABLES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;admin_%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li><strong>查看指定系统变量</strong></li></ul><p>作为 MySQL 编码规范，MySQL 中的系统变量以<code>两个“@”</code>开头，其中“@@global”仅用于标记全局系统变量，“@@session”仅用于标记会话系统变量。“@@”首先标记会话系统变量，如果会话系统变量不存在，则标记全局系统变量。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 查看指定的系统变量的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">变量名</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 查看指定的会话变量的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">变量名</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 或者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@变量名;</span></span></code></pre></div><ul><li><strong>修改系统变量的值</strong></li></ul><p>有些时候，数据库管理员需要修改系统变量的默认值，以便修改当前会话或者MySQL服务实例的属性、特征。具体方法：</p><p>方式1：修改MySQL<code>配置文件</code>，继而修改MySQL系统变量的值（该方法需要重启MySQL服务）</p><p>方式2：在MySQL服务运行期间，使用“set”命令重新设置系统变量的值</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 为某个系统变量赋值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式1：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">变量名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">变量值;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式2：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">变量值;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 为某个会话变量赋值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式1：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">变量名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">变量值;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式2：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SESSION</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">变量值;</span></span></code></pre></div><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">autocommit</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autocommit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">tx_isolation</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">tx_isolation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;read-uncommitted&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> max_connections </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @@</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">max_connections</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><h3 id="_1-2-用户变量" tabindex="-1">1.2 用户变量 <a class="header-anchor" href="#_1-2-用户变量" aria-label="Permalink to “1.2 用户变量”">​</a></h3><h4 id="_1-2-1-用户变量分类" tabindex="-1">1.2.1 用户变量分类 <a class="header-anchor" href="#_1-2-1-用户变量分类" aria-label="Permalink to “1.2.1 用户变量分类”">​</a></h4><p>用户变量是用户自己定义的，作为 MySQL 编码规范，MySQL 中的用户变量以<code>一个“@”</code>开头。根据作用范围不同，又分为<code>会话用户变量</code>和<code>局部变量</code>。</p><ul><li>会话用户变量：作用域和会话变量一样，只对<code>当前连接</code>会话有效。</li><li>局部变量：只在 BEGIN 和 END 语句块中有效。局部变量只能在<code>存储过程和函数</code>中使用。</li></ul><h4 id="_1-2-2-会话用户变量" tabindex="-1">1.2.2 会话用户变量 <a class="header-anchor" href="#_1-2-2-会话用户变量" aria-label="Permalink to “1.2.2 会话用户变量”">​</a></h4><ul><li>变量的定义</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式1：“=”或“:=”</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @用户变量 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 值;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @用户变量 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 值;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式2：“:=” 或 INTO关键字</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @用户变量 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 表达式 [FROM 等子句];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 表达式 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @用户变量  [FROM 等子句];</span></span></code></pre></div><ul><li>查看用户变量的值 （查看、比较、运算等）</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @用户变量</span></span></code></pre></div><ul><li>举例</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @a;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @num :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @num;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @avgsalary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @avgsalary;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @big;  #查看某个未声明的变量时，将得到NULL值</span></span></code></pre></div><h4 id="_1-2-3-局部变量" tabindex="-1">1.2.3 局部变量 <a class="header-anchor" href="#_1-2-3-局部变量" aria-label="Permalink to “1.2.3 局部变量”">​</a></h4><p>定义：可以使用<code>DECLARE</code>语句定义一个局部变量</p><p>作用域：仅仅在定义它的 BEGIN ... END 中有效</p><p>位置：只能放在 BEGIN ... END 中，而且只能放在第一句</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 声明局部变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名1 变量数据类型 [DEFAULT 变量默认值];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名2,变量名3,... 变量数据类型 [DEFAULT 变量默认值];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 为局部变量赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 值;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 值 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名2 [FROM 子句];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 查看局部变量的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量1,变量2,变量3;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span></span></code></pre></div><p><strong>1.定义变量</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名 类型 [default 值];  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 如果没有DEFAULT子句，初始值为NULL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 举例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">　myparam　</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">　DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p><strong>2.变量赋值</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式1：一般用于赋简单的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">值;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">值;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方式2：一般用于赋表中的字段值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 字段名或表达式 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 变量名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 表;</span></span></code></pre></div><p><strong>3.使用变量</strong>（查看、比较、运算等）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 局部变量名;</span></span></code></pre></div><p>举例1：声明局部变量，并分别赋值为employee表中employee_id为102的last_name和salary</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> set_value()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sal DOUBLE(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_name,salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_name,sal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 102</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_name,sal;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>举例2：声明两个变量，求和并打印 （分别使用会话用户变量、局部变量的方式实现）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#方式1：使用用户变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @sum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@n;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @sum;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#方式2：使用局部变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> add_value()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	#局部变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SUM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SUM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">n;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SUM;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>举例3：创建存储过程“different_salary”查询某员工和他领导的薪资差距，并用IN参数emp_id接收员工id，用OUT参数dif_salary输出薪资差距结果。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#声明</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> different_salary(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OUT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dif_salary DOUBLE)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	#声明局部变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal,mgr_sal DOUBLE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgr_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> manager_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgr_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgr_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgr_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dif_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgr_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#调用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 102</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> different_salary(@emp_id,@diff_sal);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#查看</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @diff_sal;</span></span></code></pre></div><h4 id="_1-2-4-对比会话用户变量与局部变量" tabindex="-1">1.2.4 对比会话用户变量与局部变量 <a class="header-anchor" href="#_1-2-4-对比会话用户变量与局部变量" aria-label="Permalink to “1.2.4 对比会话用户变量与局部变量”">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"><strong>作用域</strong></th><th style="text-align:left;"><strong>定义位置</strong></th><th style="text-align:left;"><strong>语法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">会话用户变量</td><td style="text-align:left;">当前会话</td><td style="text-align:left;">会话的任何地方</td><td style="text-align:left;">加@符号，不用指定类型</td></tr><tr><td style="text-align:left;">局部变量</td><td style="text-align:left;">定义它的BEGIN END中</td><td style="text-align:left;">BEGIN END的第一句话</td><td style="text-align:left;">一般不用加@,需要指定类型</td></tr></tbody></table><h3 id="_1-3-全局变量的持久化-8-0新特性" tabindex="-1">1.3 全局变量的持久化(8.0新特性) <a class="header-anchor" href="#_1-3-全局变量的持久化-8-0新特性" aria-label="Permalink to “1.3 全局变量的持久化(8.0新特性)”">​</a></h3><p>在MySQL数据库中，全局变量可以通过SET GLOBAL语句来设置。例如，设置服务器语句超时的限制，可以通过设置系统变量max_execution_time来实现：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GLOBAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> MAX_EXECUTION_TIME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>使用SET GLOBAL语句设置的变量值只会<code>临时生效</code>。<code>数据库重启</code>后，服务器又会从MySQL配置文件中读取变量的默认值。</p><p>MySQL 8.0版本新增了<code>SET PERSIST</code>命令。例如，设置服务器的最大连接数为1000：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> PERSIST max_connections </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>MySQL会将该命令的配置保存到数据目录下的<code>mysqld-auto.cnf</code>文件中，下次启动时会读取该文件，用其中的配置来覆盖默认的配置文件。</p><p>举例：</p><p>查看全局变量max_connections的值，结果如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> show variables </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">like</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;%max_connections%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------------------------+-------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| Variable_name          | </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------------------------+-------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| max_connections        | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">151</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| mysqlx_max_connections | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------------------------+-------+</span></span></code></pre></div><p>设置全局变量max_connections的值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> persist max_connections</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p><code>重启MySQL服务器</code>，再次查询max_connections的值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> show variables </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">like</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;%max_connections%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------------------------+-------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| Variable_name          | </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------------------------+-------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| max_connections        | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| mysqlx_max_connections | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------------------------+-------+</span></span></code></pre></div><h2 id="_2-定义条件与处理程序" tabindex="-1">2. 定义条件与处理程序 <a class="header-anchor" href="#_2-定义条件与处理程序" aria-label="Permalink to “2. 定义条件与处理程序”">​</a></h2><blockquote><p><code>定义条件</code>是事先定义程序执行过程中可能遇到的问题，<code>处理程序</code>定义了在遇到问题时应当采取的处理方式，并且保证存储过程或函数在遇到警告或错误时能继续执行。这样可以增强存储程序处理问题的能力，避免程序异常停止运行。</p><p>说明：定义条件和处理程序在存储过程、存储函数中都是支持的。</p></blockquote><h3 id="_2-1-案例分析" tabindex="-1">2.1 案例分析 <a class="header-anchor" href="#_2-1-案例分析" aria-label="Permalink to “2.1 案例分析”">​</a></h3><p><strong>案例分析：</strong> 创建一个名称为“UpdateDataNoCondition”的存储过程。代码如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UpdateDataNoCondition()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Abel&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;aabbel&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Abel&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>调用存储过程：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UpdateDataNoCondition();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ERROR </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1048</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">23000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">): Column </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cannot be </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| @x   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|   </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+</span></span></code></pre></div><p>可以看到，此时@x变量的值为1。结合创建存储过程的SQL语句代码可以得出：在存储过程中未定义条件和处理程序，且当存储过程中执行的SQL语句报错时，MySQL数据库会抛出错误，并退出当前SQL逻辑，不再向下继续执行。</p><h3 id="_2-2-定义条件" tabindex="-1">2.2 定义条件 <a class="header-anchor" href="#_2-2-定义条件" aria-label="Permalink to “2.2 定义条件”">​</a></h3><p>定义条件就是给MySQL中的错误码命名，这有助于存储的程序代码更清晰。它将一个<code>错误名字</code>和<code>指定的错误条件</code>关联起来。这个名字可以随后被用在定义处理程序的<code>DECLARE HANDLER</code>语句中。</p><p>定义条件使用DECLARE语句，语法格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 错误名称 CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 错误码（或错误条件）</span></span></code></pre></div><p>错误码的说明：</p><ul><li><code>MySQL_error_code</code>和<code>sqlstate_value</code>都可以表示MySQL的错误。 <ul><li>MySQL_error_code是数值类型错误代码。</li><li>sqlstate_value是长度为5的字符串类型错误代码。</li></ul></li><li>例如，在ERROR 1418 (HY000)中，1418是MySQL_error_code，&#39;HY000&#39;是sqlstate_value。</li><li>例如，在ERROR 1142（42000）中，1142是MySQL_error_code，&#39;42000&#39;是sqlstate_value。</li></ul><p><strong>举例1：</strong> 定义“Field_Not_Be_NULL”错误名与MySQL中违反非空约束的错误类型是“ERROR 1048 (23000)”对应。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 使用MySQL_error_code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Field_Not_Be_NULL CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1048</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 使用sqlstate_value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Field_Not_Be_NULL CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SQLSTATE </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;23000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p><strong>举例2：</strong> 定义&quot;ERROR 1148(42000)&quot;错误，名称为command_not_allowed。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#使用MySQL_error_code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> command_not_allowed CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1148</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#使用sqlstate_value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> command_not_allowed CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SQLSTATE </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;42000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><h3 id="_2-3-定义处理程序" tabindex="-1">2.3 定义处理程序 <a class="header-anchor" href="#_2-3-定义处理程序" aria-label="Permalink to “2.3 定义处理程序”">​</a></h3><p>可以为SQL执行过程中发生的某种类型的错误定义特殊的处理程序。定义处理程序时，使用DECLARE语句的语法如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 处理方式 HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 错误类型 处理语句</span></span></code></pre></div><ul><li><strong>处理方式</strong>：处理方式有3个取值：CONTINUE、EXIT、UNDO。 <ul><li><code>CONTINUE</code>：表示遇到错误不处理，继续执行。</li><li><code>EXIT</code>：表示遇到错误马上退出。</li><li><code>UNDO</code>：表示遇到错误后撤回之前的操作。MySQL中暂时不支持这样的操作。</li></ul></li><li><strong>错误类型</strong>（即条件）可以有如下取值： <ul><li><code>SQLSTATE &#39;字符串错误码&#39;</code>：表示长度为5的sqlstate_value类型的错误代码；</li><li><code>MySQL_error_code</code>：匹配数值类型错误代码；</li><li><code>错误名称</code>：表示DECLARE ... CONDITION定义的错误条件名称。</li><li><code>SQLWARNING</code>：匹配所有以01开头的SQLSTATE错误代码；</li><li><code>NOT FOUND</code>：匹配所有以02开头的SQLSTATE错误代码；</li><li><code>SQLEXCEPTION</code>：匹配所有没有被SQLWARNING或NOT FOUND捕获的SQLSTATE错误代码；</li></ul></li><li><strong>处理语句</strong>：如果出现上述条件之一，则采用对应的处理方式，并执行指定的处理语句。语句可以是像“<code>SET 变量 = 值</code>”这样的简单语句，也可以是使用<code>BEGIN ... END</code>编写的复合语句。</li></ul><p>定义处理程序的几种方式，代码如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方法1：捕获sqlstate_value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CONTINUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SQLSTATE </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;42S02&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;NO_SUCH_TABLE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方法2：捕获mysql_error_value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CONTINUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1146</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;NO_SUCH_TABLE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方法3：先定义条件，再调用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> no_such_table CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1146</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CONTINUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> NO_SUCH_TABLE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;NO_SUCH_TABLE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方法4：使用SQLWARNING</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EXIT HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SQLWARNING </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;ERROR&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方法5：使用NOT FOUND</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EXIT HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> FOUND </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;NO_SUCH_TABLE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 方法6：使用SQLEXCEPTION</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EXIT HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SQLEXCEPTION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;ERROR&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><h3 id="_2-4-案例解决" tabindex="-1">2.4 案例解决 <a class="header-anchor" href="#_2-4-案例解决" aria-label="Permalink to “2.4 案例解决”">​</a></h3><p>在存储过程中，定义处理程序，捕获sqlstate_value值，当遇到MySQL_error_code值为1048时，执行CONTINUE操作，并且将@proc_value的值设置为-1。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UpdateDataNoCondition()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	BEGIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		#定义处理程序</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		DECLARE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CONTINUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1048</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @proc_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Abel&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;aabbel&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Abel&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>调用过程：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UpdateDataWithCondition();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Query OK, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> rows</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> affected (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">01</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sec)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x,@proc_value;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| @x   | @proc_value |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |       	 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> row</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sec)</span></span></code></pre></div><p><strong>举例：</strong></p><p>创建一个名称为“InsertDataWithCondition”的存储过程，代码如下。</p><p>在存储过程中，定义处理程序，捕获sqlstate_value值，当遇到sqlstate_value值为23000时，执行EXIT操作，并且将@proc_value的值设置为-1。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#准备工作</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> departments</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> atguigudb.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">\`departments\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> departments</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ADD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uk_dept_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">UNIQUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(department_id);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> InsertDataWithCondition()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> duplicate_entry CONDITION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SQLSTATE </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;23000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EXIT HANDLER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> duplicate_entry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @proc_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> departments(department_name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;测试&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> departments(department_name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;测试&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>调用存储过程：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> InsertDataWithCondition();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Query OK, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> rows</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> affected (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">01</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sec)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> @x,@proc_value;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| @x   | @proc_value |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |       	 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">------+-------------+</span></span></code></pre></div><h2 id="_3-流程控制" tabindex="-1">3. 流程控制 <a class="header-anchor" href="#_3-流程控制" aria-label="Permalink to “3. 流程控制”">​</a></h2><p>解决复杂问题不可能通过一个 SQL 语句完成，我们需要执行多个 SQL 操作。流程控制语句的作用就是控制存储过程中 SQL 语句的执行顺序，是我们完成复杂操作必不可少的一部分。只要是执行的程序，流程就分为三大类：</p><ul><li><code>顺序结构</code>：程序从上往下依次执行</li><li><code>分支结构</code>：程序按条件进行选择执行，从两条或多条路径中选择一条执行</li><li><code>循环结构</code>：程序满足一定条件下，重复执行一组语句</li></ul><p>针对于MySQL 的流程控制语句主要有 3 类。注意：只能用于存储程序。</p><ul><li><code>条件判断语句</code>：IF 语句和 CASE 语句</li><li><code>循环语句</code>：LOOP、WHILE 和 REPEAT 语句</li><li><code>跳转语句</code>：ITERATE 和 LEAVE 语句</li></ul><h3 id="_3-1-分支结构之-if" tabindex="-1">3.1 分支结构之 IF <a class="header-anchor" href="#_3-1-分支结构之-if" aria-label="Permalink to “3.1 分支结构之 IF”">​</a></h3><ul><li>IF 语句的语法结构是：</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 表达式1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 操作1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[ELSEIF 表达式2 THEN 操作2]……</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[ELSE 操作N]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span></span></code></pre></div><p>根据表达式的结果为TRUE或FALSE执行相应的语句。这里“[]”中的内容是可选的。</p><ul><li>特点：① 不同的表达式对应不同的操作 ② 使用在begin end中</li><li><strong>举例1：</strong></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is null&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ELSE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is not null&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li><strong>举例2：</strong> 声明存储过程“update_salary_by_eid1”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于8000元并且入职时间超过5年，就涨薪500元；否则就不变。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_by_eid1(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year DOUBLE;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> DATEDIFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(CURDATE(),hire_date)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">365</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><ul><li><strong>举例3：</strong> 声明存储过程“update_salary_by_eid2”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于9000元并且入职时间超过5年，就涨薪500元；否则就涨薪100元。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_by_eid2(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year DOUBLE;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> DATEDIFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(CURDATE(),hire_date)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">365</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	ELSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><ul><li><strong>举例4：</strong> 声明存储过程“update_salary_by_eid3”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于9000元，就更新薪资为9000元；薪资如果大于等于9000元且低于10000的，但是奖金比例为NULL的，就更新奖金比例为0.01；其他的涨薪100元。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_by_eid3(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bonus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECIMAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> commission_pct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bonus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	ELSEIF emp_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bonus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> commission_pct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	ELSE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h3 id="_3-2-分支结构之-case" tabindex="-1">3.2 分支结构之 CASE <a class="header-anchor" href="#_3-2-分支结构之-case" aria-label="Permalink to “3.2 分支结构之 CASE”">​</a></h3><p>CASE 语句的语法结构1：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 情况一：类似于switch</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 表达式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 值1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 结果1或语句1(如果是语句，需要加分号) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 值2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 结果2或语句2(如果是语句，需要加分号)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ELSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 结果n或语句n(如果是语句，需要加分号)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [case]（如果是放在begin end中需要加上case，如果放在select后面不需要）</span></span></code></pre></div><p>CASE 语句的语法结构2：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#情况二：类似于多重if</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 条件1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 结果1或语句1(如果是语句，需要加分号) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 条件2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 结果2或语句2(如果是语句，需要加分号)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ELSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 结果n或语句n(如果是语句，需要加分号)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [case]（如果是放在begin end中需要加上case，如果放在select后面不需要）</span></span></code></pre></div><ul><li><strong>举例1：</strong></li></ul><p>使用CASE流程控制语句的第1种格式，判断val值等于1、等于2，或者两者都不等。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">　　　WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">　　　WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is 2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">　　　ELSE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is not 1 or 2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li><strong>举例2：</strong></li></ul><p>使用CASE流程控制语句的第2种格式，判断val是否为空、小于0、大于0或者等于0。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CASE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is null&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is less than 0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is greater than 0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	ELSE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;val is 0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li><strong>举例3：</strong> 声明存储过程“update_salary_by_eid4”，定义IN参数emp_id，输入员工编号。判断该员工薪资如果低于9000元，就更新薪资为9000元；薪资大于等于9000元且低于10000的，但是奖金比例为NULL的，就更新奖金比例为0.01；其他的涨薪100元。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_by_eid4(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bonus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECIMAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> commission_pct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bonus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	CASE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bonus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> commission_pct</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	ELSE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><ul><li><strong>举例4：</strong> 声明存储过程update_salary_by_eid5，定义IN参数emp_id，输入员工编号。判断该员工的入职年限，如果是0年，薪资涨50；如果是1年，薪资涨100；如果是2年，薪资涨200；如果是3年，薪资涨300；如果是4年，薪资涨400；其他的涨薪500。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_by_eid5(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year DOUBLE;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> ROUND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">DATEDIFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(CURDATE(),hire_date)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">365</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hire_year</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">400</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		ELSE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h3 id="_3-3-循环结构之loop" tabindex="-1">3.3 循环结构之LOOP <a class="header-anchor" href="#_3-3-循环结构之loop" aria-label="Permalink to “3.3 循环结构之LOOP”">​</a></h3><p>LOOP循环语句用来重复执行某些语句。LOOP内的语句一直重复执行直到循环被退出（使用LEAVE子句），跳出循环过程。</p><p>LOOP语句的基本格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[loop_label:] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LOOP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	循环执行的语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LOOP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [loop_label]</span></span></code></pre></div><p>其中，loop_label表示LOOP语句的标注名称，该参数可以省略。</p><p><strong>举例1：</strong></p><p>使用LOOP语句进行循环操作，id值小于10时将重复执行循环过程。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">add_loop:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LOOP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LEAVE add_loop;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LOOP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> add_loop;</span></span></code></pre></div><p><strong>举例2：</strong> 当市场环境变好时，公司为了奖励大家，决定给大家涨工资。声明存储过程“update_salary_loop()”，声明OUT参数num，输出循环次数。存储过程中实现循环给大家涨薪，薪资涨为原来的1.1倍。直到全公司的平均薪资达到12000结束。并统计循环次数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_loop(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OUT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_salary DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> loop_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	label_loop:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LOOP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 12000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LEAVE label_loop;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> loop_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> loop_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LOOP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> label_loop;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> loop_count;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h3 id="_3-4-循环结构之while" tabindex="-1">3.4 循环结构之WHILE <a class="header-anchor" href="#_3-4-循环结构之while" aria-label="Permalink to “3.4 循环结构之WHILE”">​</a></h3><p>WHILE语句创建一个带条件判断的循环过程。WHILE在执行语句执行时，先对指定的表达式进行判断，如果为真，就执行循环内的语句，否则退出循环。WHILE语句的基本格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[while_label:] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 循环条件  DO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	循环体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [while_label];</span></span></code></pre></div><p>while_label为WHILE语句的标注名称；如果循环条件结果为真，WHILE语句内的语句或语句群被执行，直至循环条件为假，退出循环。</p><p><strong>举例1：</strong></p><p>WHILE语句示例，i值小于10时，将重复执行循环过程，代码如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_while()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#调用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_while();</span></span></code></pre></div><p><strong>举例2：</strong> 市场环境不好时，公司为了渡过难关，决定暂时降低大家的薪资。声明存储过程“update_salary_while()”，声明OUT参数num，输出循环次数。存储过程中实现循环给大家降薪，薪资降为原来的90%。直到全公司的平均薪资达到5000结束。并统计循环次数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_while(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OUT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal DOUBLE ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h3 id="_3-5-循环结构之repeat" tabindex="-1">3.5 循环结构之REPEAT <a class="header-anchor" href="#_3-5-循环结构之repeat" aria-label="Permalink to “3.5 循环结构之REPEAT”">​</a></h3><p>REPEAT语句创建一个带条件判断的循环过程。与WHILE循环不同的是，REPEAT 循环首先会执行一次循环，然后在 UNTIL 中进行表达式的判断，如果满足条件就退出，即 END REPEAT；如果条件不满足，则会就继续执行循环，直到满足退出条件为止。</p><p>REPEAT语句的基本格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[repeat_label:] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">REPEAT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">　　　　循环体的语句</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">UNTIL 结束循环的条件表达式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> REPEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [repeat_label]</span></span></code></pre></div><p>repeat_label为REPEAT语句的标注名称，该参数可以省略；REPEAT语句内的语句或语句群被重复，直至expr_condition为真。</p><p><strong>举例1：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_repeat()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	REPEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	UNTIL i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> REPEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p><strong>举例2：</strong> 当市场环境变好时，公司为了奖励大家，决定给大家涨工资。声明存储过程“update_salary_repeat()”，声明OUT参数num，输出循环次数。存储过程中实现循环给大家涨薪，薪资涨为原来的1.15倍。直到全公司的平均薪资达到13000结束。并统计循环次数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_salary_repeat(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OUT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal DOUBLE ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> repeat_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	REPEAT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> repeat_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> repeat_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	UNTIL avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 13000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> REPEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> repeat_count;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p><strong>对比三种循环结构：</strong></p><p>1、这三种循环都可以省略名称，但如果循环中添加了循环控制语句（LEAVE或ITERATE）则必须添加名称。</p><p>2、</p><p>LOOP：一般用于实现简单的&quot;死&quot;循环</p><p>WHILE：先判断后执行</p><p>REPEAT：先执行后判断，无条件至少执行一次</p><h3 id="_3-6-跳转语句之leave语句" tabindex="-1">3.6 跳转语句之LEAVE语句 <a class="header-anchor" href="#_3-6-跳转语句之leave语句" aria-label="Permalink to “3.6 跳转语句之LEAVE语句”">​</a></h3><p>LEAVE语句：可以用在循环语句内，或者以 BEGIN 和 END 包裹起来的程序体内，表示跳出循环或者跳出程序体的操作。如果你有面向过程的编程语言的使用经验，你可以把 LEAVE 理解为 break。</p><p>基本格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">LEAVE 标记名</span></span></code></pre></div><p>其中，label参数表示循环的标志。LEAVE和BEGIN ... END或循环一起被使用。</p><p><strong>举例1：</strong> 创建存储过程 “leave_begin()”，声明INT类型的IN参数num。给BEGIN...END加标记名，并在BEGIN...END中使用IF语句判断num参数的值。</p><ul><li>如果num&lt;=0，则使用LEAVE语句退出BEGIN...END；</li><li>如果num=1，则查询“employee”表的平均薪资；</li><li>如果num=2，则查询“employee”表的最低薪资；</li><li>如果num&gt;2，则查询“employee”表的最高薪资。</li></ul><p>IF语句结束后查询“employee”表的总人数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> leave_begin(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	begin_label: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LEAVE begin_label;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		ELSEIF num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		ELSEIF num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			THEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> MIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		ELSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p><strong>举例2：</strong></p><p>当市场环境不好时，公司为了渡过难关，决定暂时降低大家的薪资。声明存储过程“leave_while()”，声明OUT参数num，输出循环次数，存储过程中使用WHILE循环给大家降低薪资为原来薪资的90%，直到全公司的平均薪资小于等于10000，并统计循环次数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> leave_while(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OUT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal DOUBLE;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 记录平均工资</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 记录循环次数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- ① 初始化条件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	while_label:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TRUE DO  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- ② 循环条件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">		-- ③ 循环体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			LEAVE while_label;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">		-- ④ 迭代条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> avg_sal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> while_count;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h3 id="_3-7-跳转语句之iterate语句" tabindex="-1">3.7 跳转语句之ITERATE语句 <a class="header-anchor" href="#_3-7-跳转语句之iterate语句" aria-label="Permalink to “3.7 跳转语句之ITERATE语句”">​</a></h3><p>ITERATE语句：只能用在循环语句（LOOP、REPEAT和WHILE语句）内，表示重新开始循环，将执行顺序转到语句段开头处。如果你有面向过程的编程语言的使用经验，你可以把 ITERATE 理解为 continue，意思为“再次循环”。</p><p>语句基本格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ITERATE label</span></span></code></pre></div><p>label参数表示循环的标志。ITERATE语句必须跟在循环标志前面。</p><p><strong>举例：</strong> 定义局部变量num，初始值为0。循环结构中执行num + 1操作。</p><ul><li>如果num &lt; 10，则继续执行循环；</li><li>如果num &gt; 15，则退出循环结构；</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_iterate()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	my_loop:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LOOP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ITERATE my_loop;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		ELSEIF num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 15</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LEAVE my_loop;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;hello world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LOOP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> my_loop;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h2 id="_4-游标" tabindex="-1">4. 游标 <a class="header-anchor" href="#_4-游标" aria-label="Permalink to “4. 游标”">​</a></h2><h3 id="_4-1-什么是游标-或光标" tabindex="-1">4.1 什么是游标（或光标） <a class="header-anchor" href="#_4-1-什么是游标-或光标" aria-label="Permalink to “4.1 什么是游标（或光标）”">​</a></h3><p>虽然我们也可以通过筛选条件 WHERE 和 HAVING，或者是限定返回记录的关键字 LIMIT 返回一条记录，但是，却无法在结果集中像指针一样，向前定位一条记录、向后定位一条记录，或者是<code>随意定位到某一条记录</code>，并对记录的数据进行处理。</p><p>这个时候，就可以用到游标。游标，提供了一种灵活的操作方式，让我们能够对结果集中的每一条记录进行定位，并对指向的记录中的数据进行操作的数据结构。<strong>游标让 SQL 这种面向集合的语言有了面向过程开发的能力。</strong></p><p>在 SQL 中，游标是一种临时的数据库对象，可以指向存储在数据库表中的数据行指针。这里游标<code>充当了指针的作用</code>，我们可以通过操作游标来对数据行进行操作。</p><p>MySQL中游标可以在存储过程和函数中使用。</p><p>比如，我们查询了 employee 数据表中工资高于15000的员工都有哪些：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id,last_name,salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 15000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>这里我们就可以通过游标来操作数据行，如图所示此时游标所在的行是“108”的记录，我们也可以在结果集上滚动游标，指向结果集中的任意一行。</p><h3 id="_4-2-使用游标步骤" tabindex="-1">4.2 使用游标步骤 <a class="header-anchor" href="#_4-2-使用游标步骤" aria-label="Permalink to “4.2 使用游标步骤”">​</a></h3><p>游标必须在声明处理程序之前被声明，并且变量和条件还必须在声明游标或处理程序之前被声明。</p><p>如果我们想要使用游标，一般需要经历四个步骤。不同的 DBMS 中，使用游标的语法可能略有不同。</p><p><strong>第一步，声明游标</strong></p><p>在MySQL中，使用DECLARE关键字来声明游标，其语法的基本形式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CURSOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> select_statement;</span></span></code></pre></div><p>这个语法适用于 MySQL，SQL Server，DB2 和 MariaDB。如果是用 Oracle 或者 PostgreSQL，需要写成：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CURSOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> select_statement;</span></span></code></pre></div><p>要使用 SELECT 语句来获取数据结果集，而此时还没有开始遍历数据，这里 select_statement 代表的是 SELECT 语句，返回一个用于创建游标的结果集。</p><p>比如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cur_emp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CURSOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id,salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_fruit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CURSOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> f_name, f_price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fruits;</span></span></code></pre></div><p><strong>第二步，打开游标</strong></p><p>打开游标的语法如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OPEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_name</span></span></code></pre></div><p>当我们定义好游标之后，如果想要使用游标，必须先打开游标。打开游标的时候 SELECT 语句的查询结果集就会送到游标工作区，为后面游标的<code>逐条读取</code>结果集中的记录做准备。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OPEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">　cur_emp;</span></span></code></pre></div><p><strong>第三步，使用游标（从游标中取得数据）</strong></p><p>语法如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FETCH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> var_name [, var_name] ...</span></span></code></pre></div><p>这句的作用是使用 cursor_name 这个游标来读取当前行，并且将数据保存到 var_name 这个变量中，游标指针指到下一行。如果游标读取的数据行有多个列名，则在 INTO 关键字后面赋值给多个变量名即可。</p><p>注意：var_name必须在声明游标之前就定义好。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FETCH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">　cur_emp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id, emp_sal;</span></span></code></pre></div><p>注意：<strong>游标的查询结果集中的字段数，必须跟 INTO 后面的变量数一致</strong>，否则，在存储过程执行的时候，MySQL 会提示错误。</p><p><strong>第四步，关闭游标</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CLOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_name</span></span></code></pre></div><p>有 OPEN 就会有 CLOSE，也就是打开和关闭游标。当我们使用完游标后需要关闭掉该游标。因为游标会<code>占用系统资源</code>，如果不及时关闭，<strong>游标会一直保持到存储过程结束</strong>，影响系统运行的效率。而关闭游标的操作，会释放游标占用的系统资源。</p><p>关闭游标之后，我们就不能再检索查询结果中的数据行，如果需要检索只能再次打开游标。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CLOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">　cur_emp;</span></span></code></pre></div><h3 id="_4-3-举例" tabindex="-1">4.3 举例 <a class="header-anchor" href="#_4-3-举例" aria-label="Permalink to “4.3 举例”">​</a></h3><p>创建存储过程“get_count_by_limit_total_salary()”，声明IN参数 limit_total_salary，DOUBLE类型；声明OUT参数total_count，INT类型。函数的功能可以实现累加薪资最高的几个员工的薪资值，直到薪资总和达到limit_total_salary参数的值，返回累加的人数给total_count。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> get_count_by_limit_total_salary(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> limit_total_salary DOUBLE,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OUT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> total_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sum_salary DOUBLE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 记录累加的总工资</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_salary DOUBLE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 记录某一个工资值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 记录循环个数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 定义游标</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_cursor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CURSOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 打开游标</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	OPEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_cursor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	REPEAT</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">		-- 使用游标（从游标中获取数据）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		FETCH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_cursor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_salary;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sum_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sum_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cursor_salary;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		UNTIL sum_salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> limit_total_salary</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> REPEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> total_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_count;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	-- 关闭游标</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	CLOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_cursor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><h3 id="_4-5-小结" tabindex="-1">4.5 小结 <a class="header-anchor" href="#_4-5-小结" aria-label="Permalink to “4.5 小结”">​</a></h3><p>游标是 MySQL 的一个重要的功能，为<code>逐条读取</code>结果集中的数据，提供了完美的解决方案。跟在应用层面实现相同的功能相比，游标可以在存储程序中使用，效率高，程序也更加简洁。</p><p>但同时也会带来一些性能问题，比如在使用游标的过程中，会对数据行进行<code>加锁</code>，这样在业务并发量大的时候，不仅会影响业务之间的效率，还会<code>消耗系统资源</code>，造成内存不足，这是因为游标是在内存中进行的处理。</p><p>建议：养成用完之后就关闭的习惯，这样才能提高系统的整体效率。</p><h2 id="_5-触发器" tabindex="-1">5. 触发器 <a class="header-anchor" href="#_5-触发器" aria-label="Permalink to “5. 触发器”">​</a></h2><h3 id="_5-1-触发器概述" tabindex="-1">5.1 触发器概述 <a class="header-anchor" href="#_5-1-触发器概述" aria-label="Permalink to “5.1 触发器概述”">​</a></h3><p>MySQL从<code>5.0.2</code>版本开始支持触发器。MySQL的触发器和存储过程一样，都是嵌入到MySQL服务器的一段程序。</p><p>触发器是由<code>事件来触发</code>某个操作，这些事件包括<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>事件。所谓事件就是指用户的动作或者触发某项行为。如果定义了触发程序，当数据库执行这些语句时候，就相当于事件发生了，就会<code>自动</code>激发触发器执行相应的操作。</p><p>当对数据表中的数据执行插入、更新和删除操作，需要自动执行一些数据库逻辑时，可以使用触发器来实现。</p><h3 id="_5-2-触发器的创建" tabindex="-1">5.2 触发器的创建 <a class="header-anchor" href="#_5-2-触发器的创建" aria-label="Permalink to “5.2 触发器的创建”">​</a></h3><h4 id="创建触发器语法" tabindex="-1">创建触发器语法 <a class="header-anchor" href="#创建触发器语法" aria-label="Permalink to “创建触发器语法”">​</a></h4><p>创建触发器的语法结构是：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> 触发器名称</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEFORE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AFTER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INSERT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DELETE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 表名 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ROW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">触发器执行的语句块;</span></span></code></pre></div><p>说明：</p><ul><li><code>表名</code>：表示触发器监控的对象。</li><li><code>BEFORE|AFTER</code>：表示触发的时间。BEFORE 表示在事件之前触发；AFTER 表示在事件之后触发。</li><li><code>INSERT|UPDATE|DELETE</code>：表示触发的事件。 <ul><li>INSERT 表示插入记录时触发；</li><li>UPDATE 表示更新记录时触发；</li><li>DELETE 表示删除记录时触发。</li></ul></li><li><code>触发器执行的语句块</code>：可以是单条SQL语句，也可以是由BEGIN…END结构组成的复合语句块。</li></ul><h4 id="代码举例" tabindex="-1">代码举例 <a class="header-anchor" href="#代码举例" aria-label="Permalink to “代码举例”">​</a></h4><p><strong>举例1：</strong></p><p>1、创建数据表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t_note </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_trigger_log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t_log </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>2、创建触发器：创建名称为before_insert的触发器，向test_trigger数据表插入数据之前，向test_trigger_log数据表中插入before_insert的日志信息。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> before_insert</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEFORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> INSERT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger_log (t_log)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;before_insert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>3、向test_trigger数据表中插入数据</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger (t_note) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;测试 BEFORE INSERT 触发器&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>4、查看test_trigger_log数据表中的数据</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger_log;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| id | t_log         |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | before_insert |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----+---------------+</span></span></code></pre></div><p><strong>举例2：</strong></p><p>1、创建名称为after_insert的触发器，向test_trigger数据表插入数据之后，向test_trigger_log数据表中插入after_insert的日志信息。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> after_insert</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AFTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> INSERT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger_log (t_log)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;after_insert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>2、向test_trigger数据表中插入数据。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger (t_note) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;测试 AFTER INSERT 触发器&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>3、查看test_trigger_log数据表中的数据</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> test_trigger_log;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| id | t_log         |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | before_insert |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | before_insert |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | after_insert  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----+---------------+</span></span></code></pre></div><p><strong>举例3：</strong> 定义触发器“salary_check_trigger”，基于员工表“employee”的INSERT事件，在INSERT之前检查将要添加的新员工薪资是否大于他领导的薪资，如果大于领导薪资，则报sqlstate_value为&#39;HY000&#39;的错误，从而使得添加失败。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> salary_check_trigger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEFORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> INSERT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	DECLARE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgrsalary DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgrsalary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NEW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">manager_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	IF</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NEW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mgrsalary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">THEN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		SIGNAL SQLSTATE </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;HY000&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> MESSAGE_TEXT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;薪资高于领导薪资错误&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DELIMITER ;</span></span></code></pre></div><p>上面触发器声明过程中的NEW关键字代表INSERT添加语句的新记录。</p><h3 id="_5-3-查看、删除触发器" tabindex="-1">5.3 查看、删除触发器 <a class="header-anchor" href="#_5-3-查看、删除触发器" aria-label="Permalink to “5.3 查看、删除触发器”">​</a></h3><h4 id="查看触发器" tabindex="-1">查看触发器 <a class="header-anchor" href="#查看触发器" aria-label="Permalink to “查看触发器”">​</a></h4><p>查看触发器是查看数据库中已经存在的触发器的定义、状态和语法信息等。</p><p>方式1：查看当前数据库的所有触发器的定义</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW TRIGGERS\\G</span></span></code></pre></div><p>方式2：查看当前数据库中某个触发器的定义</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TRIGGER 触发器名;</span></span></code></pre></div><p>方式3：从系统库information_schema的TRIGGERS表中查询“salary_check_trigger”触发器的信息。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> information_schema</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">TRIGGERS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><h4 id="删除触发器" tabindex="-1">删除触发器 <a class="header-anchor" href="#删除触发器" aria-label="Permalink to “删除触发器”">​</a></h4><p>触发器也是数据库对象，删除触发器也用DROP语句，语法格式如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TRIGGER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 触发器名称;</span></span></code></pre></div><h3 id="_5-4-触发器的优缺点" tabindex="-1">5.4 触发器的优缺点 <a class="header-anchor" href="#_5-4-触发器的优缺点" aria-label="Permalink to “5.4 触发器的优缺点”">​</a></h3><h4 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to “优点”">​</a></h4><p><strong>1、触发器可以确保数据的完整性</strong>。</p><p>假设我们用<code>进货单头表</code>（demo.importhead）来保存进货单的总体信息，包括进货单编号、供货商编号、仓库编号、总计进货数量、总计进货金额和验收日期。</p><p><img src="`+c+'" alt="image.png"></p><p>用<code>进货单明细表</code>（demo.importdetails）来保存进货商品的明细，包括进货单编号、商品编号、进货数量、进货价格和进货金额。</p><p><img src="'+F+`" alt="image.png"></p><p>每当我们录入、删除和修改一条进货单明细数据的时候，进货单明细表里的数据就会发生变动。这个时候，在进货单头表中的总计数量和总计金额就必须重新计算，否则，进货单头表中的总计数量和总计金额就不等于进货单明细表中数量合计和金额合计了，这就是数据不一致。</p><p>为了解决这个问题，我们就可以使用触发器，<strong>规定每当进货单明细表有数据插入、修改和删除的操作时，自动触发 2 步操作：</strong></p><p>1）重新计算进货单明细表中的数量合计和金额合计；</p><p>2）用第一步中计算出来的值更新进货单头表中的合计数量与合计金额。</p><p>这样一来，进货单头表中的合计数量与合计金额的值，就始终与进货单明细表中计算出来的合计数量与合计金额的值相同，数据就是一致的，不会互相矛盾。</p><p><strong>2、触发器可以帮助我们记录操作日志。</strong></p><p>利用触发器，可以具体记录什么时间发生了什么。比如，记录修改会员储值金额的触发器，就是一个很好的例子。这对我们还原操作执行时的具体场景，更好地定位问题原因很有帮助。</p><p><strong>3、触发器还可以用在操作数据前，对数据进行合法性检查。</strong></p><p>比如，超市进货的时候，需要库管录入进货价格。但是，人为操作很容易犯错误，比如说在录入数量的时候，把条形码扫进去了；录入金额的时候，看串了行，录入的价格远超售价，导致账面上的巨亏……这些都可以通过触发器，在实际插入或者更新操作之前，对相应的数据进行检查，及时提示错误，防止错误数据进入系统。</p><h4 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to “缺点”">​</a></h4><p><strong>1、触发器最大的一个问题就是可读性差。</strong></p><p>因为触发器存储在数据库中，并且由事件驱动，这就意味着触发器有可能<code>不受应用层的控制</code>。这对系统维护是非常有挑战的。</p><p>比如，创建触发器用于修改会员储值操作。如果触发器中的操作出了问题，会导致会员储值金额更新失败。我用下面的代码演示一下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> demo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">membermaster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> memberdeposit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> where</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> memberid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ERROR </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1054</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (42S22): Unknown column </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;aa&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;field list&#39;</span></span></code></pre></div><p>结果显示，系统提示错误，字段“aa”不存在。</p><p>这是因为，触发器中的数据插入操作多了一个字段，系统提示错误。可是，如果你不了解这个触发器，很可能会认为是更新语句本身的问题，或者是会员信息表的结构出了问题。说不定你还会给会员信息表添加一个叫“aa”的字段，试图解决这个问题，结果只能是白费力。</p><p><strong>2、相关数据的变更，可能会导致触发器出错。</strong></p><p>特别是数据表结构的变更，都可能会导致触发器出错，进而影响数据操作的正常运行。这些都会由于触发器本身的隐蔽性，影响到应用中错误原因排查的效率。</p><h4 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to “注意点”">​</a></h4><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果在子表中定义了外键约束，并且外键指定了ON UPDATE/DELETE CASCADE/SET NULL子句，此时修改父表被引用的键值或删除父表被引用的记录行时，也会引起子表的修改和删除操作，此时基于子表的UPDATE和DELETE语句定义的触发器并不会被激活。</p><p>例如：基于子表员工表（t_employee）的DELETE语句定义了触发器t1，而子表的部门编号（did）字段定义了外键约束引用了父表部门表（t_department）的主键列部门编号（did），并且该外键加了“ON DELETE SET NULL”子句，那么如果此时删除父表部门表（t_department）在子表员工表（t_employee）有匹配记录的部门记录时，会引起子表员工表（t_employee）匹配记录的部门编号（did）修改为NULL，但是此时不会激活触发器t1。只有直接对子表员工表（t_employee）执行DELETE语句时才会激活触发器t1。</p></div>`,307);function u(s,b,_,T,L,v){const h=k,p=e("ClientOnly");return n(),d("div",null,[B,A(p,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),y(h,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),m])}const S=t(o,[["render",u]]);export{N as __pageData,S as default};
