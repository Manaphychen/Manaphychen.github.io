import{_ as p}from"./chunks/ArticleMetadata.H12JcJLK.js";import{_ as k,E as e,c as r,o as n,j as l,I as d,aj as F,w as g,b as y,e as D,a as o}from"./chunks/framework._AF764y6.js";const C="/assets/image-20240603231923093.tX-WyVLg.png",P=JSON.parse('{"title":"JVM运行时参数","description":"","frontmatter":{"title":"JVM运行时参数","date":"2024-05-31T18:10:57.000Z","permalink":"/jvm/runtime_param/","categories":["后端","JVM虚拟机","性能监控与调优"],"tags":[null],"author":"Manaphy"},"headers":[],"relativePath":"jvm/04.性能监控与调优/04.JVM运行时参数.md","filePath":"jvm/04.性能监控与调优/04.JVM运行时参数.md","lastUpdated":1744301414000}'),c={name:"jvm/04.性能监控与调优/04.JVM运行时参数.md"},A=l("h1",{id:"jvm运行时参数",tabindex:"-1"},[o("JVM运行时参数 "),l("a",{class:"header-anchor",href:"#jvm运行时参数","aria-label":"Permalink to “JVM运行时参数”"},"​")],-1),u=F(`<h2 id="_1-jvm参数选项" tabindex="-1">1. JVM参数选项 <a class="header-anchor" href="#_1-jvm参数选项" aria-label="Permalink to “1. JVM参数选项”">​</a></h2><p>官网地址：<a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html" target="_blank" rel="noreferrer">https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html</a></p><h3 id="_1-类型一-标准参数选项" tabindex="-1">1. 类型一：标准参数选项 <a class="header-anchor" href="#_1-类型一-标准参数选项" aria-label="Permalink to “1. 类型一：标准参数选项”">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> java -help</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">用法:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [-options] class [args...]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">           (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">执行类</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   或</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  java</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [-options] -jar jarfile [args...]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">           (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">执行</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">其中选项包括:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -d32</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          使用</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 32</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 位数据模型</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (如果可用)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -d64</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          使用</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 64</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 位数据模型</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (如果可用)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       选择</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;server&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> VM</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  默认</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> VM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 是</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -cp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">目录和</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> zip/jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件的类搜索路</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -classpath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">目录和</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> zip/jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件的类搜索路</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  用</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">分隔的目录,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 档案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  和</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ZIP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 档案列表,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 用于搜索类文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -D</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;名称&gt;=&lt;值&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  设置系统属性</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -verbose:[class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">jni]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  启用详细输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -version</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      输出产品版本并退出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -version:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;值&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  警告:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 此功能已过时,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 将在</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  未来发行版中删除。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  需要指定的版本才能运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -showversion</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  输出产品版本并继续</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -jre-restrict-search</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> -no-jre-restrict-search</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  警告:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 此功能已过时,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 将在</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  未来发行版中删除。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  在版本搜索中包括/排除用户专用</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> JRE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -?</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -help</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      输出此帮助消息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            输出非标准选项的帮助</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -ea[:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;packagename&gt;...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;classname&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -enableassertions[:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;packagename&gt;...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;classname&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  按指定的粒度启用断言</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -da[:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;packagename&gt;...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;classname&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -disableassertions[:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;packagename&gt;...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;classname&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  禁用具有指定粒度的断言</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -esa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> -enablesystemassertions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  启用系统断言</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -dsa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> -disablesystemassertions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  禁用系统断言</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -agentlib:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;libname&gt;[=&lt;选项&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  加载本机代理库</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">libnam</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 例如</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -agentlib:hprof</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  另请参阅</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -agentlib:jdwp=help</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 和</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -agentlib:hprof=help</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -agentpath:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;pathname&gt;[=&lt;选项&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  按完整路径名加载本机代理库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -javaagent:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;jarpath&gt;[=&lt;选项&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  加载</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Java</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 编程语言代理,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 请参阅</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.lang.instrument</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -splash:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;imagepath&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                  使用指定的图像显示启动屏幕</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">有关详细信息,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 请参阅</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://www.oracle.com/technetwork/java/javase/documentation/index.html。</span></span></code></pre></div><p><strong>Server模式和Client模式</strong></p><p>Hotspot JVM有两种模式，分别是server和client，分别通过-server和-client模式设置</p><ul><li>32位系统上，默认使用Client类型的JVM。要想使用Server模式，机器配置至少有2个以上的CPU和2G以上的物理内存。client模式适用于对内存要求较小的桌面应用程序，默认使用Serial串行垃圾收集器</li><li>64位系统上，只支持server模式的JVM，适用于需要大内存的应用程序，默认使用并行垃圾收集器</li></ul><p>官网地址：<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/vm/server-class.html" target="_blank" rel="noreferrer">https://docs.oracle.com/javase/8/docs/technotes/guides/vm/server-class.html</a></p><p>如何知道系统默认使用的是那种模式呢？</p><p>通过java -version命令：可以看到Server VM字样，代表当前系统使用是Server模式</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> java -version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">java</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;1.8.0_201&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Java(TM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) SE Runtime Environment (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">build</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 1.8.0_201-b09</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Java</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> HotSpot</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">64-Bit</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> VM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (build </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">25.201-b09,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mixed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h3 id="_2-类型二-x参数选项" tabindex="-1">2. 类型二：-X参数选项 <a class="header-anchor" href="#_2-类型二-x参数选项" aria-label="Permalink to “2. 类型二：-X参数选项”">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> java -X</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xmixed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           混合模式执行</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (默认)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">             仅解释模式执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xbootclasspath:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;用 ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">分隔的目录和</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> zip/jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                      设置搜索路径以引导类和资源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xbootclasspath/a:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;用 ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">分隔的目录和</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> zip/jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                      附加在引导类路径末尾</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xbootclasspath/p:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;用 ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">分隔的目录和</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> zip/jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                      置于引导类路径之前</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xdiag</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            显示附加诊断消息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xnoclassgc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       禁用类垃圾收集</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xincgc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           启用增量垃圾收集</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xloggc:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;file&gt;    </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">将</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> GC</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 状态记录在文件中</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (带时间戳)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xbatch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           禁用后台编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xms</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;size&gt;        </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">设置初始</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Java</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 堆大小</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">等价于:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:InitialHeapSize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xmx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;size&gt;        </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">设置最大</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Java</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 堆大小</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">等价于:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:MaxHeapSize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xss</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;size&gt;        </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">设置</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Java</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 线程堆栈大小</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">等价于:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:ThreadStackSize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xprof</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            输出</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cpu</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 配置文件数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xfuture</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          启用最严格的检查,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 预期将来的默认值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xrs</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              减少</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Java/VM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 对操作系统信号的使用</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (请参阅文档)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xcheck:jni</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       对</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> JNI</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 函数执行其他检查</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xshare:off</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       不尝试使用共享类数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xshare:auto</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      在可能的情况下使用共享类数据</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (默认)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -Xshare:on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        要求使用共享类数据,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 否则将失败。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -XshowSettings</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    显示所有设置并继续</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -XshowSettings:all</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                      显示所有设置并继续</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -XshowSettings:vm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 显示所有与</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> vm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 相关的设置并继续</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -XshowSettings:properties</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                      显示所有属性设置并继续</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    -XshowSettings:locale</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                      显示所有与区域设置相关的设置并继续</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 选项是非标准选项,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 如有更改,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 恕不另行通知。</span></span></code></pre></div><p>如何知道JVM默认使用的是混合模式呢？</p><p>同样地，通过java -version命令：可以看到 mixed mode 字样，代表当前系统使用的是混合模式</p><h3 id="_3-类型三-xx参数选项" tabindex="-1">3. 类型三：-XX参数选项 <a class="header-anchor" href="#_3-类型三-xx参数选项" aria-label="Permalink to “3. 类型三：-XX参数选项”">​</a></h3><p><strong>特点</strong>: 非标准化参数; 使用的最多的参数类型,不稳定</p><p><strong>作用</strong>: 用于开发和调试JVM</p><p><strong>Boolean类型格式</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;option&gt;  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">启用option属性</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;option&gt;  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">禁用option属性</span></span></code></pre></div><p><strong>非Boolean类型格式</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;option&gt;=&lt;number&gt;  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">设置option数值，可以带单位如k/K/m/M/g/G</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;option&gt;=&lt;string&gt;  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">设置option字符值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:NewSize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=1024m</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #表示设置新生代初始大小为1024兆 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:MaxGCPauseMillis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=500</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #表示设置GC停顿时间：500毫秒 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:GCTimeRat1o</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=19</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #表示设置吞吐量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:NewRatio</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #表示新生代与老年代的比例</span></span></code></pre></div><h2 id="_2-添加jvm参数选项" tabindex="-1">2. 添加JVM参数选项 <a class="header-anchor" href="#_2-添加jvm参数选项" aria-label="Permalink to “2. 添加JVM参数选项”">​</a></h2><p>eclipse和idea中配置不必多说，在Run Configurations中VM Options中配置即可，大同小异</p><p>运行jar包</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -Xms100m</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -Xmx100m</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:+PrintGCDetails</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:+PrintGCDateStamps</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:+PrintGCTimeStamps</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> demo.jar</span></span></code></pre></div><p>Tomcat运行war包</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># linux下catalina.sh添加</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">JAVA_OPTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;-Xms512M -Xmx1024M&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># windows下catalina.bat添加</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;JAVA_OPTS=-Xms512M -Xmx1024M&quot;</span></span></code></pre></div><p><strong>程序运行中</strong></p><p>仅能修改被标记为manageable的参数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置Boolean类型参数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">jinfo</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -flag</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [+</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-]</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;name&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置非Boolean类型参数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">jinfo</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -flag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">valu</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><h2 id="_3-常用的jvm参数选项" tabindex="-1">3. 常用的JVM参数选项 <a class="header-anchor" href="#_3-常用的jvm参数选项" aria-label="Permalink to “3. 常用的JVM参数选项”">​</a></h2><h3 id="_1-打印设置的xx选项及值" tabindex="-1">1. 打印设置的XX选项及值 <a class="header-anchor" href="#_1-打印设置的xx选项及值" aria-label="Permalink to “1. 打印设置的XX选项及值”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintCommandLineFlags</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #程序运行时JVM默认设置或用户手动设置的XX选项</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintFlagsInitial</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #打印所有XX选项的默认值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintFlagsFinal</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #打印所有XX选项的实际值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintVMOptions</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #打印JVM的参数</span></span></code></pre></div><h3 id="_2-堆、栈、方法区等内存大小设置" tabindex="-1">2. 堆、栈、方法区等内存大小设置 <a class="header-anchor" href="#_2-堆、栈、方法区等内存大小设置" aria-label="Permalink to “2. 堆、栈、方法区等内存大小设置”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 栈</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-Xss128k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:ThreadStackSize=128k</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置线程栈的大小为128K</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 堆</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-Xms2048m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:InitialHeapSize=2048m</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置JVM初始堆内存为2048M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-Xmx2048m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:MaxHeapSize=2048m</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置JVM最大堆内存为2048M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-Xmn2g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:NewSize=2g</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:MaxNewSize=2g</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置年轻代大小为2G;官方推荐配置为整个堆大小的3/8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:SurvivorRatio</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=8</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置Eden区与Survivor区的比值，默认为8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:NewRatio</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置老年代与年轻代的比例，默认为2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseAdaptiveSizePolicy</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置大小比例自适应，默认开启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:PretenureSizeThreadshold</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=1024</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置让大于此阈值的对象直接分配在老年代，只对Serial、ParNew收集器有效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:MaxTenuringThreshold</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=15</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置新生代晋升老年代的年龄限制，默认为15</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintTenuringDistribution</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #让JVM在每次MinorGC后打印出当前使用的Survivor中对象的年龄分布</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:TargetSurvivorRatio</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置MinorGC结束后Survivor区占用空间的期望比例</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 方法区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:MetaspaceSize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:PermSize=256m</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置元空间/永久代初始值为256M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:MaxMetaspaceSize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -XX:MaxPermSize=256m</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置元空间/永久代最大值为256M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseCompressedOops</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #使用压缩对象指针</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseCompressedClassPointers</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #使用压缩类指针</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:CompressedClassSpaceSize</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #设置Klass Metaspace的大小，默认1G</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 直接内存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:MaxDirectMemorySize</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #指定DirectMemory容量，默认等于Java堆最大值</span></span></code></pre></div><h3 id="_3-outofmemory相关的选项" tabindex="-1">3. OutOfMemory相关的选项 <a class="header-anchor" href="#_3-outofmemory相关的选项" aria-label="Permalink to “3. OutOfMemory相关的选项”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+HeapDumpOnOutMemoryError</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #内存出现OOM时生成Heap转储文件，两者互斥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+HeapDumpBeforeFullGC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #出现FullGC时生成Heap转储文件，两者互斥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:HeapDumpPath</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;path&gt; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#指定heap转储文件的存储路径，默认当前目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:OnOutOfMemoryError</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;path&gt; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#指定可行性程序或脚本的路径，当发生OOM时执行脚本</span></span></code></pre></div><h3 id="_4-垃圾收集器相关选项" tabindex="-1">4. 垃圾收集器相关选项 <a class="header-anchor" href="#_4-垃圾收集器相关选项" aria-label="Permalink to “4. 垃圾收集器相关选项”">​</a></h3><p>首先需了解垃圾收集器之间的搭配使用关系</p><p><img src="`+C+`" alt="image-20240603231923093"></p><ul><li>红色虚线表示在jdk8时被Deprecate，jdk9时被删除</li><li>绿色虚线表示在jdk14时被Deprecate</li><li>绿色虚框表示在jdk9时被Deprecate，jdk14时被删除</li></ul><p><strong>Serial回收器</strong></p><ul><li><span style="color:blue;font-weight:bold;">-XX:+UseSerialGC</span> 年轻代使用Serial GC， 老年代使用Serial Old GC</li></ul><p><strong>ParNew回收器</strong></p><ul><li><span style="color:blue;font-weight:bold;">-XX:+UseParNewGC</span> 年轻代使用ParNew GC</li><li><span style="color:blue;font-weight:bold;">-XX:ParallelGCThreads</span> 设置年轻代并行收集器的线程数。 <ul><li>一般地，最好与CPU数量相等，以避免过多的线程数影响垃圾收集性能。</li></ul></li></ul><p><strong>Parallel回收器</strong></p><ul><li><span style="color:blue;font-weight:bold;">-XX:+UseParallelGC</span> 手动指定年轻代使用 Parallel Scavenge GC，互相激活</li><li><span style="color:blue;font-weight:bold;">-XX:+UseParallelOldGC</span> 手动指定老年代使用 Parallel Old GC，互相激活</li><li><span style="color:blue;font-weight:bold;">-XX:ParallelGCThreads</span> 设置年轻代并行收集器的线程数。一般地，最好于CPU数量相等，以避免过多的线程数影响垃圾收集性能。 <ul><li>在默认情况下，当CPU 数量小于8个，ParallelGCThreads 的值等于CPU 数量。</li><li>当CPU数量大于8个，ParallelGCThreads 的值等于3+[5*CPU_Count/8]。</li></ul></li><li><span style="color:blue;font-weight:bold;">-XX:MaxGCPauseMillis</span> 设置垃圾收集器最大停顿时间（即STW的时间），单位是毫秒。 <ul><li>为了尽可能地把停顿时间控制在MaxGCPauseMills以内，收集器在工作时会调整Java堆大小或者其他一些参数。</li><li>对于用户来讲，停顿时间越短体验越好；但是服务器端注重高并发，整体的吞吐量。所以服务器端适合Parallel，进行控制。</li><li><span style="color:red;">该参数使用需谨慎。</span></li></ul></li><li><span style="color:blue;font-weight:bold;">-XX:GCTimeRatio</span> 垃圾收集时间占总时间的比例(=1/(N＋1))，用于衡量吞吐量的大小。 <ul><li>取值范围（0,100），默认值99，也就是垃圾回收时间不超过1％。</li><li>与前一个-XX:MaxGCPauseMillis参数有一定矛盾性。暂停时间越长，Radio参数就容易超过设定的比例。</li></ul></li><li><span style="color:blue;font-weight:bold;">-XX:+UseAdaptiveSizePolicy</span> 设置Parallel Scavenge收集器具有<strong>自适应调节策略</strong>。 <ul><li>在这种模式下，年轻代的大小、Eden和Survivor的比例、晋升老年代的对象年龄等参数会被自动调整，以达到在堆大小、吞吐量和停顿时间之间的平衡点。</li><li>在手动调优比较困难的场合，可以直接使用这种自适应的方式，仅指定虚拟机的最大堆、目标的吞吐量（GCTimeRatio）和停顿时间（MaxGCPauseMills），让虚拟机自己完成调优工作。</li></ul></li></ul><p><strong>CMS回收器</strong></p><ul><li><span style="color:blue;font-weight:bold;">-XX:+UseConcMarkSweepGC</span> 手动指定使用CMS 收集器执行内存回收任务。 <ul><li>开启该参数后会自动将-XX：＋UseParNewGC打开。即：ParNew(Young区)+ CMS(Old区)+ Serial Old的组合。</li></ul></li><li><span style="color:blue;font-weight:bold;">-XX:CMSInitiatingOccupanyFraction</span> 设置堆内存使用率的阈值，一旦达到该阈值，便开始进行回收。 <ul><li>JDK5及以前版本的默认值为68，<span style="color:blue;">JDK6及以上版本默认值为92％。</span></li><li>如果内存增长缓慢，则可以设置一个稍大的值，大的阈值可以有效降低CMS的触发频率，减少老年代回收的次数可以较为明显地改善应用程序性能。反之，如果应用程序内存使用率增长很快，则应该降低这个阈值，以避免频繁触发老年代串行收集器。因此<span style="color:blue;">通过该选项便可以有效降低Fu11 GC 的执行次数。</span></li></ul></li><li><span style="color:blue;font-weight:bold;">-XX:+UseCMSCompactAtFullCollection</span> #用于指定在执行完Full GC后对内存空间进行压缩整理，以此避免内存碎片的产生。不过由于内存压缩整理过程无法并发执行，所带来的问题就是停顿时间变得更长了。</li><li><span style="color:blue;font-weight:bold;">-XX:CMSFullGCsBeforeCompaction</span> 设置在执行多少次Full GC后对内存空间进行压缩整理。</li><li><span style="color:blue;font-weight:bold;">-XX:ParallelCMSThreads</span> 设置CMS的线程数量。 <ul><li>CMS 默认启动的线程数是(ParallelGCThreads＋3)/4，ParallelGCThreads 是年轻代并行收集器的线程数。当CPU 资源比较紧张时，受到CMS收集器线程的影响，应用程序的性能在垃圾回收阶段可能会非常糟糕。</li></ul></li><li><span style="color:blue;font-weight:bold;">-XX:ConcGCThreads</span> 设置并发垃圾收集的线程数，默认该值是基于ParallelGCThreads计算出来的。</li><li><span style="color:blue;font-weight:bold;">-XX:+UseCMSInitiatingOccupancyOnly</span> 是否动态可调，使CMS一直按CMSInitiatingOccupancyFraction设定的值启动</li><li><span style="color:blue;font-weight:bold;">-XX:+CMSScavengeBeforeRemark</span> 强制hotspot在cms remark阶段之前做一次minor gc，用于提高remark阶段的速度。</li><li><span style="color:blue;font-weight:bold;">-XX:+CMSClassUnloadingEnable</span> 如果有的话，启用回收Perm 区（JDK8之前）</li><li><span style="color:blue;font-weight:bold;">-XX:+CMSParallelInitialEnabled</span> 用于开启CMS initial-mark阶段采用多线程的方式进行标记，用于提高标记速度，在Java8开始已经默认开启。</li><li><span style="color:blue;font-weight:bold;">-XX:+CMSParallelRemarkEnabled</span> 用户开启CMS remark阶段采用多线程的方式进行重新标记，默认开启</li><li><span style="color:blue;font-weight:bold;">-XX:+ExplicitGCInvokesConcurrent -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses</span> 这两个参数用户指定hotspot虚拟在执行System.gc()时使用CMS周期。</li><li><span style="color:blue;font-weight:bold;">-XX:+CMSPrecleaningEnabled</span> 指定CMS是否需要进行Pre cleaning阶段。</li></ul><p><strong>G1回收器</strong></p><ul><li><span style="color:blue;font-weight:bold;">-XX:+UseG1GC</span> 手动指定使用G1收集器执行内存回收任务。</li><li><span style="color:blue;font-weight:bold;">-XX:G1HeapRegionSize</span> 设置每个Region的大小。值是2的幂，范围是1MB到32MB之间，目标是根据最小的Java堆大小划分出约2048个区域。默认是堆内存的1/2000。</li><li><span style="color:blue;font-weight:bold;">-XX:MaxGCPauseMillis</span> 设置期望达到的最大GC停顿时间指标（JVM会尽力实现，但不保证达到）。默认值是200ms</li><li><span style="color:blue;font-weight:bold;">-XX:ParallelGCThread</span> 设置STW时GC线程数的值。最多设置为8</li><li><span style="color:blue;font-weight:bold;">-XX:ConcGCThreads</span> 设置并发标记的线程数。将n设置为并行垃圾回收线程数(ParallelGCThreads)的1/4左右。</li><li><span style="color:blue;font-weight:bold;">-XX:G1NewSizePercent</span> 新生代占用整个堆内存的最小百分比（默认5％）</li><li><span style="color:blue;font-weight:bold;">-XX:G1MaxNewSizePercent</span> 新生代占用整个堆内存的最大百分比（默认60％）</li><li><span style="color:blue;font-weight:bold;">-XX:G1ReservePercent=10</span> 保留内存区域，防止 to space（Survivor中的to区）溢出。</li></ul><p>G1关于Mixed GC调优常用参数：</p><ul><li><span style="color:blue;font-weight:bold;">-XX:InitiatingHeapOccupancyPercent</span> 设置触发并发GC周期的Java堆占用率阈值。超过此值，就触发GC。默认值是45。</li><li><span style="color:blue;font-weight:bold;">-XX:G1MixedGCLiveThresholdPercent</span> 设置01d区的region被回收时候的对象占比，默认占用率为85%。只有0ld区的region中存活的对象占用达到了这个百分比 ，才会在Mixed GC中被回收。</li><li><span style="color:blue;font-weight:bold;">-XX:G1HeapWastePercent</span> 在global concurrent marking（全局并发标记）结束之后，可以知道所有的区有多尘空间要被回收，在每次youngGC之后和再次发生Mixed GC之前，会检查垃圾占比是否达到此参数，只有达到了，下次才会发生 Mixed GC。</li><li><span style="color:blue;font-weight:bold;">-XX:G1MixedGCCountTarget</span> 一次global concurrent marking（全局并发标记）之后，最多执行Mixed GC的次数，默认是8。</li><li><span style="color:blue;font-weight:bold;">-XX:G1OldCSetRegionThresholdPercent</span> 设置Mixed GC收集周期中要收集的 0ld region数的上限。默认值是Java堆的10%</li></ul><p>怎么选择垃圾回收器？</p><ul><li>优先让JVM自适应，调整堆的大小</li><li>串行收集器：内存小于100M；单核、单机程序，并且没有停顿时间的要求</li><li>并行收集器：多CPU、高吞吐量、允许停顿时间超过1秒</li><li>并发收集器：多CPU、追求低停顿时间、快速响应（比如延迟不能超过1秒，如互联网应用）</li><li>官方推荐G1，性能高。现在互联网的项目，基本都是使用G1</li></ul><p>特别说明：</p><ul><li>没有最好的收集器，更没有万能的收集器</li><li>调优永远是针对特定场景、特定需求，不存在一劳永逸的收集器</li></ul><h3 id="_5-gc日志相关选项" tabindex="-1">5. GC日志相关选项 <a class="header-anchor" href="#_5-gc日志相关选项" aria-label="Permalink to “5. GC日志相关选项”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintGC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -verbose:gc</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印简要日志信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintGCDetails</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            #打印详细日志信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintGCTimeStamps</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印程序启动到GC发生的时间，搭配-XX:+PrintGCDetails使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintGCDateStamps</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印GC发生时的时间戳，搭配-XX:+PrintGCDetails使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintHeapAtGC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印GC前后的堆信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-Xloggc:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;file&gt; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#输出GC导指定路径下的文件中</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+TraceClassLoading</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #监控类的加载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintGCApplicationStoppedTime</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印GC时线程的停顿时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintGCApplicationConcurrentTime</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印垃圾收集之前应用未中断的执行时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintReferenceGC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #打印回收了多少种不同引用类型的引用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintTenuringDistribution</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印JVM在每次MinorGC后当前使用的Survivor中对象的年龄分布</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseGCLogFileRotation</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #启用GC日志文件的自动转储</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:NumberOfGCLogFiles</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=1</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #设置GC日志文件的循环数目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:GCLogFileSize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=1M</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #设置GC日志文件的大小</span></span></code></pre></div><h3 id="_6-其他参数" tabindex="-1">6. 其他参数 <a class="header-anchor" href="#_6-其他参数" aria-label="Permalink to “6. 其他参数”">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+DisableExplicitGC</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #禁用hotspot执行System.gc()，默认禁用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:ReservedCodeCacheSize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;n&gt;[g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">k]、-XX:InitialCodeCacheSize</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;n&gt;[g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">k]</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #指定代码缓存的大小</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseCodeCacheFlushing</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #放弃一些被编译的代码，避免代码缓存被占满时JVM切换到interpreted-only的情况</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+DoEscapeAnalysis</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #开启逃逸分析</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseBiasedLocking</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #开启偏向锁</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+UseLargePages</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #开启使用大页面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:+PrintTLAB</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #打印TLAB的使用情况</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:TLABSize</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #设置TLAB大小</span></span></code></pre></div><h2 id="_4-通过java代码获取jvm参数" tabindex="-1">4. 通过Java代码获取JVM参数 <a class="header-anchor" href="#_4-通过java代码获取jvm参数" aria-label="Permalink to “4. 通过Java代码获取JVM参数”">​</a></h2><p>Java提供了java.lang.management包用于监视和管理Java虚拟机和Java运行时中的其他组件，它允许本地或远程监控和管理运行的Java虚拟机。其中ManagementFactory类较为常用，另外Runtime类可获取内存、CPU核数等相关的数据。通过使用这些api，可以监控应用服务器的堆内存使用情况，设置一些阈值进行报警等处理。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MemoryMonitor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        MemoryMXBean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> memorymbean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ManagementFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getMemoryMXBean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        MemoryUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> usage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> memorymbean.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getHeapMemoryUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;INIT HEAP: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> usage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getInit</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;MAX HEAP: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> usage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getMax</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;USE HEAP: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> usage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUsed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Full Information:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Heap Memory Usage: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> memorymbean.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getHeapMemoryUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Non-Heap Memory Usage: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> memorymbean.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getNonHeapMemoryUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;=======================通过java来获取相关系统状态============================ &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;当前堆内存大小totalMemory &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) Runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">totalMemory</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 当前堆内存大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;空闲堆内存大小freeMemory &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) Runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">freeMemory</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 空闲堆内存大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;最大可用总堆内存maxMemory &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">maxMemory</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 最大可用总堆内存大小</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,66);function m(s,X,B,b,v,E){const h=p,t=e("ClientOnly");return n(),r("div",null,[A,d(t,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),y(h,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),u])}const G=k(c,[["render",m]]);export{P as __pageData,G as default};
