import{_ as k}from"./chunks/ArticleMetadata.BPSr9oED.js";import{_ as p,E as e,c as d,o as t,j as l,I as r,aj as g,w as y,b as A,e as C,a as F}from"./chunks/framework._AF764y6.js";const D="/assets/u93LOm.dQhYh0DU.png",E="/assets/L9YLxK.3JJqqgOj.png",B="/assets/9YO1i4.Dh0Wss_o.png",o="/assets/CKm8pU.kmDOzi8H.png",c="/assets/J5H9k2.CIAXXpn3.png",x="/assets/6Ik7bV.YmYPtmDa.png",f="/assets/4rTmT8.CiWljJFt.png",m="/assets/7gJS8s.BTIoXOrl.png",b="/assets/WXcnVW.CkliinQb.png",T="/assets/vrEeac.BtT3WSIS.png",S="/assets/JewNMf.DqgQW243.png",_="/assets/rpO96O.Bwc5tQ4Z.png",N="/assets/V2eUSL.CXU8WqpV.png",u="/assets/7gT837.DpjeAJLJ.png",L="/assets/FlROvh.CPjuZent.png",R="/assets/TQDbwS.DV9FRcoQ.png",O="/assets/oLStdz.CwYCpyDV.png",M="/assets/Amzhln.ChO1ybKY.png",Q=JSON.parse('{"title":"函数","description":"","frontmatter":{"title":"函数","date":"2023-11-02T10:10:30.000Z","permalink":"/mysql/function/","categories":["数据库","MySQL"],"tags":["MySQL"],"author":"Manaphy"},"headers":[],"relativePath":"database/MySQL/104.函数.md","filePath":"database/MySQL/104.函数.md","lastUpdated":1743259133000}'),I={name:"database/MySQL/104.函数.md"},v=l("h1",{id:"函数",tabindex:"-1"},[F("函数 "),l("a",{class:"header-anchor",href:"#函数","aria-label":"Permalink to “函数”"},"​")],-1),U=g('<h2 id="_1-函数的理解" tabindex="-1">1. 函数的理解 <a class="header-anchor" href="#_1-函数的理解" aria-label="Permalink to “1. 函数的理解”">​</a></h2><h3 id="_1-1-什么是函数" tabindex="-1">1.1 什么是函数 <a class="header-anchor" href="#_1-1-什么是函数" aria-label="Permalink to “1.1 什么是函数”">​</a></h3><p>函数在计算机语言的使用中贯穿始终，函数的作用是什么呢？它可以把我们经常使用的代码封装起来，需要的时候直接调用即可。这样既<code>提高了代码效率</code>，又<code>提高了可维护性</code>。在 SQL 中我们也可以使用函数对检索出来的数据进行函数操作。使用这些函数，可以极大地<code>提高用户对数据库的管理效率</code>。</p><p>从函数定义的角度出发，我们可以将函数分成<code>内置函数</code>和<code>自定义函数</code>。在 SQL 语言中，同样也包括了内置函数和自定义函数。内置函数是系统内置的通用函数，而自定义函数是我们根据自己的需要编写的，本章及下一章讲解的是 SQL 的内置函数。</p><h3 id="_1-2-不同dbms函数的差异" tabindex="-1">1.2 不同DBMS函数的差异 <a class="header-anchor" href="#_1-2-不同dbms函数的差异" aria-label="Permalink to “1.2 不同DBMS函数的差异”">​</a></h3><p>我们在使用 SQL 语言的时候，不是直接和这门语言打交道，而是通过它使用不同的数据库软件，即 DBMS。<strong>DBMS 之间的差异性很大，远大于同一个语言不同版本之间的差异。<strong>实际上，只有很少的函数是被 DBMS 同时支持的。比如，大多数 DBMS 使用（||）或者（+）来做拼接符，而在 MySQL 中的字符串拼接函数为concat()。大部分 DBMS 会有自己特定的函数，这就意味着</strong>采用 SQL 函数的代码可移植性是很差的</strong>，因此在使用函数的时候需要特别注意。</p><h3 id="_1-3-mysql的内置函数及分类" tabindex="-1">1.3 MySQL的内置函数及分类 <a class="header-anchor" href="#_1-3-mysql的内置函数及分类" aria-label="Permalink to “1.3 MySQL的内置函数及分类”">​</a></h3><p>MySQL提供了丰富的内置函数，这些函数使得数据的维护与管理更加方便，能够更好地提供数据的分析与统计功能，在一定程度上提高了开发人员进行数据分析与统计的效率。</p><p>MySQL提供的内置函数从<code>实现的功能角度</code>可以分为数值函数、字符串函数、日期和时间函数、流程控制函数、加密与解密函数、获取MySQL信息函数、聚合函数等。这里，我将这些丰富的内置函数再分为两类：<code>单行函数</code>、<code>聚合函数（或分组函数）</code>。</p><p><strong>两种SQL函数</strong></p><img src="'+D+'" alt="image.png"><p><strong>单行函数</strong></p><ul><li>操作数据对象</li><li>接受参数返回一个结果</li><li><strong>只对一行进行变换</strong></li><li><strong>每行返回一个结果</strong></li><li>可以嵌套</li><li>参数可以是一列或一个值</li></ul><h2 id="_2-数值函数" tabindex="-1">2. 数值函数 <a class="header-anchor" href="#_2-数值函数" aria-label="Permalink to “2. 数值函数”">​</a></h2><h3 id="_2-1-基本函数" tabindex="-1">2.1 基本函数 <a class="header-anchor" href="#_2-1-基本函数" aria-label="Permalink to “2.1 基本函数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">ABS(x)</td><td style="text-align:left;">返回x的绝对值</td></tr><tr><td style="text-align:left;">SIGN(X)</td><td style="text-align:left;">返回X的符号。正数返回1，负数返回-1，0返回0</td></tr><tr><td style="text-align:left;">PI()</td><td style="text-align:left;">返回圆周率的值</td></tr><tr><td style="text-align:left;">CEIL(x)，CEILING(x)</td><td style="text-align:left;">返回大于或等于某个值的最小整数</td></tr><tr><td style="text-align:left;">FLOOR(x)</td><td style="text-align:left;">返回小于或等于某个值的最大整数</td></tr><tr><td style="text-align:left;">LEAST(e1,e2,e3…)</td><td style="text-align:left;">返回列表中的最小值</td></tr><tr><td style="text-align:left;">GREATEST(e1,e2,e3…)</td><td style="text-align:left;">返回列表中的最大值</td></tr><tr><td style="text-align:left;">MOD(x,y)</td><td style="text-align:left;">返回X除以Y后的余数</td></tr><tr><td style="text-align:left;">RAND()</td><td style="text-align:left;">返回0~1的随机值</td></tr><tr><td style="text-align:left;">RAND(x)</td><td style="text-align:left;">返回0~1的随机值，其中x的值用作种子值，相同的X值会产生相同的随机数</td></tr><tr><td style="text-align:left;">ROUND(x)</td><td style="text-align:left;">返回一个对x的值进行四舍五入后，最接近于X的整数</td></tr><tr><td style="text-align:left;">ROUND(x,y)</td><td style="text-align:left;">返回一个对x的值进行四舍五入后最接近X的值，并保留到小数点后面Y位</td></tr><tr><td style="text-align:left;">TRUNCATE(x,y)</td><td style="text-align:left;">返回数字x截断为y位小数的结果</td></tr><tr><td style="text-align:left;">SQRT(x)</td><td style="text-align:left;">返回x的平方根。当X的值为负数时，返回NULL</td></tr></tbody></table><img src="'+E+'" alt="image.png"><img src="'+B+'" alt="image.png"><img src="'+o+`" alt="image.png"><h3 id="_2-2-角度与弧度互换函数" tabindex="-1">2.2 角度与弧度互换函数 <a class="header-anchor" href="#_2-2-角度与弧度互换函数" aria-label="Permalink to “2.2 角度与弧度互换函数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">RADIANS(x)</td><td style="text-align:left;">将角度转化为弧度，其中，参数x为角度值</td></tr><tr><td style="text-align:left;">DEGREES(x)</td><td style="text-align:left;">将弧度转化为角度，其中，参数x为弧度值</td></tr></tbody></table><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">DEGREES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">DEGREES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DUAL;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------------+--------------------+--------------------+-----------------+----------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)        | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)        | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)        | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">DEGREES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">DEGREES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">RADIANS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------------+--------------------+--------------------+-----------------+----------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5235987755982988</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0471975511965976</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5707963267948966</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |             </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">360</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |                   </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------------+--------------------+--------------------+-----------------+----------------------+</span></span></code></pre></div><h3 id="_2-3-三角函数" tabindex="-1">2.3 三角函数 <a class="header-anchor" href="#_2-3-三角函数" aria-label="Permalink to “2.3 三角函数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">SIN(x)</td><td style="text-align:left;">返回x的正弦值，其中，参数x为弧度值</td></tr><tr><td style="text-align:left;">ASIN(x)</td><td style="text-align:left;">返回x的反正弦值，即获取正弦为x的值。如果x的值不在-1到1之间，则返回NULL</td></tr><tr><td style="text-align:left;">COS(x)</td><td style="text-align:left;">返回x的余弦值，其中，参数x为弧度值</td></tr><tr><td style="text-align:left;">ACOS(x)</td><td style="text-align:left;">返回x的反余弦值，即获取余弦为x的值。如果x的值不在-1到1之间，则返回NULL</td></tr><tr><td style="text-align:left;">TAN(x)</td><td style="text-align:left;">返回x的正切值，其中，参数x为弧度值</td></tr><tr><td style="text-align:left;">ATAN(x)</td><td style="text-align:left;">返回x的反正切值，即返回正切值为x的值</td></tr><tr><td style="text-align:left;">ATAN2(m,n)</td><td style="text-align:left;">返回两个参数的反正切值</td></tr><tr><td style="text-align:left;">COT(x)</td><td style="text-align:left;">返回x的余切值，其中，X为弧度值</td></tr></tbody></table><p>举例：</p><p>ATAN2(M,N)函数返回两个参数的反正切值。</p><p>与ATAN(X)函数相比，ATAN2(M,N)需要两个参数，例如有两个点point(x1,y1)和point(x2,y2)，使用ATAN(X)函数计算反正切值为ATAN((y2-y1)/(x2-x1))，使用ATAN2(M,N)计算反正切值则为ATAN2(y2-y1,x2-x1)。由使用方式可以看出，当x2-x1等于0时，ATAN(X)函数会报错，而ATAN2(M,N)函数则仍然可以计算。</p><p>ATAN2(M,N)函数的使用示例如下：</p><img src="`+c+'" alt="image.png"><h3 id="_2-4-指数与对数" tabindex="-1">2.4 指数与对数 <a class="header-anchor" href="#_2-4-指数与对数" aria-label="Permalink to “2.4 指数与对数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">POW(x,y)，POWER(X,Y)</td><td style="text-align:left;">返回x的y次方</td></tr><tr><td style="text-align:left;">EXP(X)</td><td style="text-align:left;">返回e的X次方，其中e是一个常数，2.718281828459045</td></tr><tr><td style="text-align:left;">LN(X)，LOG(X)</td><td style="text-align:left;">返回以e为底的X的对数，当X &lt;= 0 时，返回的结果为NULL</td></tr><tr><td style="text-align:left;">LOG10(X)</td><td style="text-align:left;">返回以10为底的X的对数，当X &lt;= 0 时，返回的结果为NULL</td></tr><tr><td style="text-align:left;">LOG2(X)</td><td style="text-align:left;">返回以2为底的X的对数，当X &lt;= 0 时，返回NULL</td></tr></tbody></table><img src="'+x+`" alt="image.png"><h3 id="_2-5-进制间的转换" tabindex="-1">2.5 进制间的转换 <a class="header-anchor" href="#_2-5-进制间的转换" aria-label="Permalink to “2.5 进制间的转换”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">BIN(x)</td><td style="text-align:left;">返回x的二进制编码</td></tr><tr><td style="text-align:left;">HEX(x)</td><td style="text-align:left;">返回x的十六进制编码</td></tr><tr><td style="text-align:left;">OCT(x)</td><td style="text-align:left;">返回x的八进制编码</td></tr><tr><td style="text-align:left;">CONV(x,f1,f2)</td><td style="text-align:left;">返回f1进制数变成f2进制数</td></tr></tbody></table><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> BIN(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),HEX(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),OCT(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),CONV(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DUAL;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+---------+---------+--------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| BIN(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) | HEX(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) | OCT(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) | CONV(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+---------+---------+--------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1010</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    | A       | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+---------+---------+--------------+</span></span></code></pre></div><h2 id="_3-字符串函数" tabindex="-1">3. 字符串函数 <a class="header-anchor" href="#_3-字符串函数" aria-label="Permalink to “3. 字符串函数”">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>ASCII(S)</strong></td><td style="text-align:left;">返回字符串S中的第一个字符的ASCII码值</td></tr><tr><td style="text-align:left;"><strong>CHAR_LENGTH(s)</strong></td><td style="text-align:left;">返回字符串s的字符数。作用与CHARACTER_LENGTH(s)相同</td></tr><tr><td style="text-align:left;"><strong>LENGTH(s)</strong></td><td style="text-align:left;">返回字符串s的字节数，和字符集有关</td></tr><tr><td style="text-align:left;"><strong>CONCAT(s1,s2,......,sn)</strong></td><td style="text-align:left;">连接s1,s2,......,sn为一个字符串</td></tr><tr><td style="text-align:left;"><strong>CONCAT_WS(x, s1,s2,......,sn)</strong></td><td style="text-align:left;">同CONCAT(s1,s2,...)函数，但是每个字符串之间要加上x</td></tr><tr><td style="text-align:left;"><strong>INSERT(str, idx, len, replacestr)</strong></td><td style="text-align:left;">将字符串str从第idx位置开始，len个字符长的子串替换为字符串replacestr</td></tr><tr><td style="text-align:left;"><strong>REPLACE(str, a, b)</strong></td><td style="text-align:left;">用字符串b替换字符串str中所有出现的字符串a</td></tr><tr><td style="text-align:left;"><strong>UPPER(s) 或 UCASE(s)</strong></td><td style="text-align:left;">将字符串s的所有字母转成大写字母</td></tr><tr><td style="text-align:left;"><strong>LOWER(s)  或LCASE(s)</strong></td><td style="text-align:left;">将字符串s的所有字母转成小写字母</td></tr><tr><td style="text-align:left;"><strong>LEFT(str,n)</strong></td><td style="text-align:left;">返回字符串str最左边的n个字符</td></tr><tr><td style="text-align:left;"><strong>RIGHT(str,n)</strong></td><td style="text-align:left;">返回字符串str最右边的n个字符</td></tr><tr><td style="text-align:left;"><strong>LPAD(str, len, pad)</strong></td><td style="text-align:left;">用字符串pad对str最左边进行填充，直到str的长度为len个字符</td></tr><tr><td style="text-align:left;"><strong>RPAD(str ,len, pad)</strong></td><td style="text-align:left;">用字符串pad对str最右边进行填充，直到str的长度为len个字符</td></tr><tr><td style="text-align:left;"><strong>LTRIM(s)</strong></td><td style="text-align:left;">去掉字符串s左侧的空格</td></tr><tr><td style="text-align:left;"><strong>RTRIM(s)</strong></td><td style="text-align:left;">去掉字符串s右侧的空格</td></tr><tr><td style="text-align:left;"><strong>TRIM(s)</strong></td><td style="text-align:left;">去掉字符串s开始与结尾的空格</td></tr><tr><td style="text-align:left;"><strong>TRIM(s1 FROM s)</strong></td><td style="text-align:left;">去掉字符串s开始与结尾的s1</td></tr><tr><td style="text-align:left;"><strong>TRIM(LEADING s1 FROM s)</strong></td><td style="text-align:left;">去掉字符串s开始处的s1</td></tr><tr><td style="text-align:left;"><strong>TRIM(TRAILING s1 FROM s)</strong></td><td style="text-align:left;">去掉字符串s结尾处的s1</td></tr><tr><td style="text-align:left;"><strong>REPEAT(str, n)</strong></td><td style="text-align:left;">返回str重复n次的结果</td></tr><tr><td style="text-align:left;"><strong>SPACE(n)</strong></td><td style="text-align:left;">返回n个空格</td></tr><tr><td style="text-align:left;"><strong>STRCMP(s1,s2)</strong></td><td style="text-align:left;">比较字符串s1,s2的ASCII码值的大小</td></tr><tr><td style="text-align:left;"><strong>SUBSTR(s,index,len)</strong></td><td style="text-align:left;">返回从字符串s的index位置其len个字符，作用与SUBSTRING(s,n,len)、MID(s,n,len)相同</td></tr><tr><td style="text-align:left;"><strong>LOCATE(substr,str)</strong></td><td style="text-align:left;">返回字符串substr在字符串str中首次出现的位置，作用于POSITION(substr IN str)、INSTR(str,substr)相同。未找到，返回0</td></tr><tr><td style="text-align:left;"><strong>ELT(m,s1,s2,…,sn)</strong></td><td style="text-align:left;">返回指定位置的字符串，如果m=1，则返回s1，如果m=2，则返回s2，如果m=n，则返回sn</td></tr><tr><td style="text-align:left;"><strong>FIELD(s,s1,s2,…,sn)</strong></td><td style="text-align:left;">返回字符串s在字符串列表中第一次出现的位置</td></tr><tr><td style="text-align:left;"><strong>FIND_IN_SET(s1,s2)</strong></td><td style="text-align:left;">返回字符串s1在字符串s2中出现的位置。其中，字符串s2是一个以逗号分隔的字符串</td></tr><tr><td style="text-align:left;"><strong>REVERSE(s)</strong></td><td style="text-align:left;">返回s反转后的字符串</td></tr><tr><td style="text-align:left;"><strong>NULLIF(value1,value2)</strong></td><td style="text-align:left;">比较两个字符串，如果value1与value2相等，则返回NULL，否则返回value1</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>MySQL中，字符串的位置是从1开始的。</p></div><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> FIELD(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;msm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;amma&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> FIND_IN_SET(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;hello,mm,amma&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NULLIF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NULLIF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- mysql</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- NULLIF可结合IFNULL判断如果column_name 为空或为null,则使用 replacement_value 代替</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IFNULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">NULLIF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(column_name,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),replacement_value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> table_name;</span></span></code></pre></div><h2 id="_4-日期和时间函数" tabindex="-1">4. 日期和时间函数 <a class="header-anchor" href="#_4-日期和时间函数" aria-label="Permalink to “4. 日期和时间函数”">​</a></h2><h3 id="_4-1-获取日期、时间" tabindex="-1">4.1 获取日期、时间 <a class="header-anchor" href="#_4-1-获取日期、时间" aria-label="Permalink to “4.1 获取日期、时间”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">CURDATE() CURRENT_DATE()</td><td style="text-align:left;">返回当前日期，只包含年、月、日</td></tr><tr><td style="text-align:left;">CURTIME() CURRENT_TIME()</td><td style="text-align:left;">返回当前时间，只包含时、分、秒</td></tr><tr><td style="text-align:left;">NOW() / SYSDATE() / CURRENT_TIMESTAMP() <br>LOCALTIME() / LOCALTIMESTAMP()</td><td style="text-align:left;">返回当前系统日期和时间</td></tr><tr><td style="text-align:left;">UTC_DATE()</td><td style="text-align:left;">返回UTC（世界标准时间）日期</td></tr><tr><td style="text-align:left;">UTC_TIME()</td><td style="text-align:left;">返回UTC（世界标准时间）时间</td></tr></tbody></table><p>举例：</p><img src="`+f+`" alt="image.png"><h3 id="_4-2-日期与时间戳的转换" tabindex="-1">4.2 日期与时间戳的转换 <a class="header-anchor" href="#_4-2-日期与时间戳的转换" aria-label="Permalink to “4.2 日期与时间戳的转换”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">UNIX_TIMESTAMP()</td><td style="text-align:left;">以UNIX时间戳的形式返回当前时间。</td></tr><tr><td style="text-align:left;">UNIX_TIMESTAMP(date)</td><td style="text-align:left;">将时间date以UNIX时间戳的形式返回。</td></tr><tr><td style="text-align:left;">FROM_UNIXTIME(timestamp)</td><td style="text-align:left;">将UNIX时间戳的时间转换为普通格式的时间</td></tr></tbody></table><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UNIX_TIMESTAMP(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 1637507021</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UNIX_TIMESTAMP(CURDATE()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 1637452800</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UNIX_TIMESTAMP(CURTIME()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 1637507045</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UNIX_TIMESTAMP(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 1320981071</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> FROM_UNIXTIME(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1320981071</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 2011-11-11 03:11:11</span></span></code></pre></div><h3 id="_4-3-获取月份、星期、星期数、天数等函数" tabindex="-1">4.3 获取月份、星期、星期数、天数等函数 <a class="header-anchor" href="#_4-3-获取月份、星期、星期数、天数等函数" aria-label="Permalink to “4.3 获取月份、星期、星期数、天数等函数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">YEAR(date) / MONTH(date) / DAY(date)</td><td style="text-align:left;">返回具体的日期值</td></tr><tr><td style="text-align:left;">HOUR(time) / MINUTE(time) / SECOND(time)</td><td style="text-align:left;">返回具体的时间值</td></tr><tr><td style="text-align:left;">MONTHNAME(date)</td><td style="text-align:left;">返回月份：January，...</td></tr><tr><td style="text-align:left;">DAYNAME(date)</td><td style="text-align:left;">返回星期几：MONDAY，TUESDAY.....SUNDAY</td></tr><tr><td style="text-align:left;">WEEKDAY(date)</td><td style="text-align:left;">返回周几，注意，周1是0，周2是1，。。。周日是6</td></tr><tr><td style="text-align:left;">QUARTER(date)</td><td style="text-align:left;">返回日期对应的季度，范围为1～4</td></tr><tr><td style="text-align:left;">WEEK(date) ， WEEKOFYEAR(date)</td><td style="text-align:left;">返回一年中的第几周</td></tr><tr><td style="text-align:left;">DAYOFYEAR(date)</td><td style="text-align:left;">返回日期是一年中的第几天</td></tr><tr><td style="text-align:left;">DAYOFMONTH(date)</td><td style="text-align:left;">返回日期位于所在月份的第几天</td></tr><tr><td style="text-align:left;">DAYOFWEEK(date)</td><td style="text-align:left;">返回周几，注意：周日是1，周一是2，。。。周六是7</td></tr></tbody></table><p>举例：</p><img src="`+m+'" alt="image.png"><img src="'+b+'" alt="image.png"><h3 id="_4-4-日期的操作函数" tabindex="-1">4.4 日期的操作函数 <a class="header-anchor" href="#_4-4-日期的操作函数" aria-label="Permalink to “4.4 日期的操作函数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">EXTRACT(type FROM date)</td><td style="text-align:left;">返回指定日期中特定的部分，type指定返回的值</td></tr></tbody></table><p>EXTRACT(type FROM date)函数中type的取值与含义：</p><img src="'+T+'" alt="image.png"><img src="'+S+`" alt="image.png"><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EXTRACT(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">MINUTE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()), </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">EXTRACT( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WEEK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()), </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--47</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">EXTRACT( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">QUARTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()), </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">EXTRACT( MINUTE_SECOND </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--717</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DUAL;</span></span></code></pre></div><h3 id="_4-5-时间和秒钟转换的函数" tabindex="-1">4.5 时间和秒钟转换的函数 <a class="header-anchor" href="#_4-5-时间和秒钟转换的函数" aria-label="Permalink to “4.5 时间和秒钟转换的函数”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">TIME_TO_SEC(time)</td><td style="text-align:left;">将 time 转化为秒并返回结果值。转化的公式为：<code>小时*3600+分钟*60+秒</code></td></tr><tr><td style="text-align:left;">SEC_TO_TIME(seconds)</td><td style="text-align:left;">将 seconds 描述转化为包含小时、分钟和秒的时间</td></tr></tbody></table><h3 id="_4-6-计算日期和时间的函数" tabindex="-1">4.6 计算日期和时间的函数 <a class="header-anchor" href="#_4-6-计算日期和时间的函数" aria-label="Permalink to “4.6 计算日期和时间的函数”">​</a></h3><p><strong>第1组：</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">DATE_ADD(datetime, INTERVAL  expr type)，<br>ADDDATE(date,INTERVAL expr type)</td><td style="text-align:left;">返回与给定日期时间相差INTERVAL时间段的日期时间</td></tr><tr><td style="text-align:left;">DATE_SUB(date,INTERVAL expr type)，<br>SUBDATE(date,INTERVAL expr type)</td><td style="text-align:left;">返回与date相差INTERVAL时间间隔的日期</td></tr></tbody></table><p>上述函数中type的取值：</p><img src="`+_+`" alt="image.png"><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_ADD( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), INTERVAL </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DAY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_ADD( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SECOND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	ADDDATE( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SECOND</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col3,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_ADD( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1_1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> MINUTE_SECOND ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col4,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_ADD( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> YEAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col5,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_ADD( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1_1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> YEAR_MONTH ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col6</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DUAL;</span></span></code></pre></div><img src="`+N+`" alt="image.png"><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_SUB( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">31</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DAY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	SUBDATE( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">31</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DAY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DATE_SUB( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DAY_HOUR ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col3 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DUAL;</span></span></code></pre></div><img src="`+u+`" alt="image.png"><p><strong>第2组：</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">ADDTIME(time1,time2)</td><td style="text-align:left;">返回time1加上time2的时间。当time2为一个数字时，代表的是<code>秒</code>，可以为负数</td></tr><tr><td style="text-align:left;">SUBTIME(time1,time2)</td><td style="text-align:left;">返回time1减去time2后的时间。当time2为一个数字时，代表的是<code>秒</code>，可以为负数</td></tr><tr><td style="text-align:left;">DATEDIFF(date1,date2)</td><td style="text-align:left;">返回date1 - date2的日期间隔天数</td></tr><tr><td style="text-align:left;">TIMEDIFF(time1, time2)</td><td style="text-align:left;">返回time1 - time2的时间间隔</td></tr><tr><td style="text-align:left;">FROM_DAYS(N)</td><td style="text-align:left;">返回从0000年1月1日起，N天以后的日期</td></tr><tr><td style="text-align:left;">TO_DAYS(date)</td><td style="text-align:left;">返回日期date距离0000年1月1日的天数</td></tr><tr><td style="text-align:left;">LAST_DAY(date)</td><td style="text-align:left;">返回date所在月份的最后一天的日期</td></tr><tr><td style="text-align:left;">MAKEDATE(year,n)</td><td style="text-align:left;">针对给定年份与所在年份中的天数返回一个日期</td></tr><tr><td style="text-align:left;">MAKETIME(hour,minute,second)</td><td style="text-align:left;">将给定的小时、分钟和秒组合成时间并返回</td></tr><tr><td style="text-align:left;">PERIOD_ADD(time,n)</td><td style="text-align:left;">返回time加上n后的时间</td></tr></tbody></table><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	ADDTIME( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	SUBTIME( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	SUBTIME( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1:1:3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col3,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	DATEDIFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-10-01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col4,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	TIMEDIFF( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-11 11:11:11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2011-11-10 10:10:10&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col5,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	FROM_DAYS( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1536</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col6, #返回从0000年1月1日起，N天以后的日期</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	TO_DAYS( </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;0000-10-01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col7, #返回日期date距离0000年1月1日的天数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	LAST_DAY(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col8,#返回date所在月份的最后一天的日期</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	MAKEDATE( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2011</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">315</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col9,#针对给定年份与所在年份中的天数返回一个日期</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	MAKETIME( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">23</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col10,#将给定的小时、分钟和秒组合成时间并返回</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	PERIOD_ADD( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20200101010101</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> col11 #返回time加上n后的时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	DUAL;</span></span></code></pre></div><img src="`+L+'" alt="image.png"><p><strong>举例</strong>：查询 7 天内的新增用户数有多少？</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> new_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_DAYS(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TO_DAYS(regist_time)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7</span></span></code></pre></div><h3 id="_4-7-日期的格式化与解析" tabindex="-1">4.7 日期的格式化与解析 <a class="header-anchor" href="#_4-7-日期的格式化与解析" aria-label="Permalink to “4.7 日期的格式化与解析”">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">DATE_FORMAT(date,fmt)</td><td style="text-align:left;">按照字符串fmt格式化日期date值</td></tr><tr><td style="text-align:left;">TIME_FORMAT(time,fmt)</td><td style="text-align:left;">按照字符串fmt格式化时间time值</td></tr><tr><td style="text-align:left;">GET_FORMAT(date_type,format_type)</td><td style="text-align:left;">返回日期字符串的显示格式</td></tr><tr><td style="text-align:left;">STR_TO_DATE(str, fmt)</td><td style="text-align:left;">按照字符串fmt对str进行解析，解析为一个日期</td></tr></tbody></table><p>上述<code>非GET_FORMAT</code>函数中fmt参数常用的格式符：</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>格式符</strong></th><th style="text-align:left;"><strong>说明</strong></th><th style="text-align:left;"><strong>格式符</strong></th><th style="text-align:left;"><strong>说明</strong></th></tr></thead><tbody><tr><td style="text-align:left;">%Y</td><td style="text-align:left;">4位数字表示年份</td><td style="text-align:left;">%y</td><td style="text-align:left;">表示两位数字表示年份</td></tr><tr><td style="text-align:left;">%M</td><td style="text-align:left;">月名表示月份（January,....）</td><td style="text-align:left;">%m</td><td style="text-align:left;">两位数字表示月份（01,02,03。。。）</td></tr><tr><td style="text-align:left;">%b</td><td style="text-align:left;">缩写的月名（Jan.，Feb.，....）</td><td style="text-align:left;">%c</td><td style="text-align:left;">数字表示月份（1,2,3,...）</td></tr><tr><td style="text-align:left;">%D</td><td style="text-align:left;">英文后缀表示月中的天数（1st,2nd,3rd,...）</td><td style="text-align:left;">%d</td><td style="text-align:left;">两位数字表示月中的天数(01,02...)</td></tr><tr><td style="text-align:left;">%e</td><td style="text-align:left;">数字形式表示月中的天数（1,2,3,4,5.....）</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">%H</td><td style="text-align:left;">两位数字表示小数，24小时制（01,02..）</td><td style="text-align:left;">%h和%I</td><td style="text-align:left;">两位数字表示小时，12小时制（01,02..）</td></tr><tr><td style="text-align:left;">%k</td><td style="text-align:left;">数字形式的小时，24小时制(1,2,3)</td><td style="text-align:left;">%l</td><td style="text-align:left;">数字形式表示小时，12小时制（1,2,3,4....）</td></tr><tr><td style="text-align:left;">%i</td><td style="text-align:left;">两位数字表示分钟（00,01,02）</td><td style="text-align:left;">%S和%s</td><td style="text-align:left;">两位数字表示秒(00,01,02...)</td></tr><tr><td style="text-align:left;">%W</td><td style="text-align:left;">一周中的星期名称（Sunday...）</td><td style="text-align:left;">%a</td><td style="text-align:left;">一周中的星期缩写（Sun.，Mon.,Tues.，..）</td></tr><tr><td style="text-align:left;">%w</td><td style="text-align:left;">以数字表示周中的天数(0=Sunday,1=Monday....)</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">%j</td><td style="text-align:left;">以3位数字表示年中的天数(001,002...)</td><td style="text-align:left;">%U</td><td style="text-align:left;">以数字表示年中的第几周，（1,2,3。。）其中Sunday为周中第一天</td></tr><tr><td style="text-align:left;">%u</td><td style="text-align:left;">以数字表示年中的第几周, (1,2,3...)其中Monday为周中第一天</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">%T</td><td style="text-align:left;">24小时制</td><td style="text-align:left;">%r</td><td style="text-align:left;">12小时制</td></tr><tr><td style="text-align:left;">%p</td><td style="text-align:left;">AM或PM</td><td style="text-align:left;">%%</td><td style="text-align:left;">表示%</td></tr></tbody></table><p>GET_FORMAT函数中date_type和format_type参数取值如下：</p><img src="'+R+`" alt="image.png"><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DATE_FORMAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;%H:%i:%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 15:15:53</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GET_FORMAT(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;USA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- %m.%d.%Y  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> STR_TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2020-01-01 00:00:00&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;%Y-%m-%d&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 2020-01-01</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> STR_TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;09/01/2009&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;%m/%d/%Y&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 2009-09-01</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> STR_TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;20140422154706&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;%Y%m%d%H%i%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 2014-04-22 15:47:06</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> STR_TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2014-04-22 15:47:06&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;%Y-%m-%d %H:%i:%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 2014-04-22 15:47:06</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DATE_FORMAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2014-04-22 15:47:06&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,GET_FORMAT(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;USA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 04.22.2014</span></span></code></pre></div><h2 id="_5-流程控制函数" tabindex="-1">5. 流程控制函数 <a class="header-anchor" href="#_5-流程控制函数" aria-label="Permalink to “5. 流程控制函数”">​</a></h2><p>流程处理函数可以根据不同的条件，执行不同的处理流程，可以在SQL语句中实现不同的条件选择。MySQL中的流程处理函数主要包括IF()、IFNULL()和CASE()函数。</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">IF(value,value1,value2)</td><td style="text-align:left;">如果value的值为TRUE，返回value1，否则返回value2</td></tr><tr><td style="text-align:left;">IFNULL(value1, value2)</td><td style="text-align:left;">如果value1不为NULL，返回value1，否则返回value2</td></tr><tr><td style="text-align:left;">CASE WHEN 条件1 THEN 结果1 WHEN 条件2 THEN 结果2 .... [ELSE resultn] END</td><td style="text-align:left;">相当于Java的if...else if...else...</td></tr><tr><td style="text-align:left;">CASE  expr WHEN 常量值1 THEN 值1 WHEN 常量值1 THEN 值1 .... [ELSE 值n] END</td><td style="text-align:left;">相当于Java的switch...case...</td></tr></tbody></table><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;正确&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;错误&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 正确</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IFNULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Hello Word&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Hello Word</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;我是1&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;我是2&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ELSE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;你是谁&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 我是1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;yes&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;no&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ELSE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;unknown&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- yes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;yes&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;no&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ELSE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;unknown&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- unknown</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> CASE</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ELSE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id,salary, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">15000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;高薪&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">				  WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;潜力股&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">				  WHEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;屌丝&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">				  ELSE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;草根&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> END</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;描述&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> oid</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">\`status\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CASE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`status\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;未付款&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">								   WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;已付款&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">								   WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;已发货&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">								   WHEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;确认收货&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">								   ELSE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;无效订单&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t_order;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> emp_id,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IFNULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(commission_pct,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_name, job_id, salary,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">       CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> job_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;IT_PROG&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  THEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                   WHEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;ST_CLERK&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> THEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                   WHEN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;SA_REP&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   THEN</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">salary</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">       			       ELSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> salary     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   &quot;REVISED_SALARY&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   employee;</span></span></code></pre></div><h2 id="_6-加密与解密函数" tabindex="-1">6. 加密与解密函数 <a class="header-anchor" href="#_6-加密与解密函数" aria-label="Permalink to “6. 加密与解密函数”">​</a></h2><p>加密与解密函数主要用于对数据库中的数据进行加密和解密处理，以防止数据被他人窃取。这些函数在保证数据库安全时非常有用。</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">PASSWORD(str)</td><td style="text-align:left;">返回字符串str的加密版本，41位长的字符串。加密结果<code>不可逆</code>，常用于用户的密码加密</td></tr><tr><td style="text-align:left;">MD5(str)</td><td style="text-align:left;">返回字符串str的md5加密后的值，也是一种加密方式。若参数为NULL，则会返回NULL</td></tr><tr><td style="text-align:left;">SHA(str)</td><td style="text-align:left;">从原明文密码str计算并返回加密后的密码字符串，当参数为NULL时，返回NULL。<code>SHA加密算法比MD5更加安全</code>。</td></tr><tr><td style="text-align:left;">ENCODE(value,password_seed)</td><td style="text-align:left;">返回使用password_seed作为加密密码加密value</td></tr><tr><td style="text-align:left;">DECODE(value,password_seed)</td><td style="text-align:left;">返回使用password_seed作为加密密码解密value</td></tr></tbody></table><p>可以看到，ENCODE(value,password_seed)函数与DECODE(value,password_seed)函数互为反函数。</p><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> md5(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 202cb962ac59075b964b07152d234b70</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SHA(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Tom123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- c7c506980abc31cc390a2438c90861d0f1216d50</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- MySQL8已舍弃该方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------------------------------------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)                         | </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------------------------------------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">E74858DB86EBA20BC33D0AECAE8A8108C56B17FA |                |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------------------------------------+----------------+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ENCODE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- MySQL8已舍弃该方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| ENCODE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| íg　¼　ìÉ                 |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------------------+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DECODE(ENCODE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- MySQL8已舍弃该方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-----------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| DECODE(ENCODE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-----------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| mysql                                   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-----------------------------------------+</span></span></code></pre></div><h2 id="_7-mysql信息函数" tabindex="-1">7. MySQL信息函数 <a class="header-anchor" href="#_7-mysql信息函数" aria-label="Permalink to “7. MySQL信息函数”">​</a></h2><p>MySQL中内置了一些可以查询MySQL信息的函数，这些函数主要用于帮助数据库开发或运维人员更好地对数据库进行维护工作。</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">VERSION()</td><td style="text-align:left;">返回当前MySQL的版本号</td></tr><tr><td style="text-align:left;">CONNECTION_ID()</td><td style="text-align:left;">返回当前MySQL服务器的连接数</td></tr><tr><td style="text-align:left;">DATABASE()，SCHEMA()</td><td style="text-align:left;">返回MySQL命令行当前所在的数据库</td></tr><tr><td style="text-align:left;">USER()、CURRENT_USER()、SYSTEM_USER()、SESSION_USER()</td><td style="text-align:left;">返回当前连接MySQL的用户名，返回结果格式为“主机名@用户名”</td></tr><tr><td style="text-align:left;">CHARSET(value)</td><td style="text-align:left;">返回字符串value自变量的字符集</td></tr><tr><td style="text-align:left;">COLLATION(value)</td><td style="text-align:left;">返回字符串value的比较规则</td></tr></tbody></table><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CHARSET(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;ABC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- utf8mb4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> COLLATION(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;ABC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- utf8mb4_general_ci</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> USER(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">CURRENT_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SYSTEM_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SESSION_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- root@localhost</span></span></code></pre></div><h2 id="_8-其他函数" tabindex="-1">8. 其他函数 <a class="header-anchor" href="#_8-其他函数" aria-label="Permalink to “8. 其他函数”">​</a></h2><p>MySQL中有些函数无法对其进行具体的分类，但是这些函数在MySQL的开发和运维过程中也是不容忽视的。</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>用法</strong></th></tr></thead><tbody><tr><td style="text-align:left;">FORMAT(value,n)</td><td style="text-align:left;">返回对数字value进行格式化后的结果数据。n表示<code>四舍五入</code>后保留到小数点后n位</td></tr><tr><td style="text-align:left;">CONV(value,from,to)</td><td style="text-align:left;">将value的值进行不同进制之间的转换</td></tr><tr><td style="text-align:left;">INET_ATON(ipvalue)</td><td style="text-align:left;">将以点分隔的IP地址转化为一个数字</td></tr><tr><td style="text-align:left;">INET_NTOA(value)</td><td style="text-align:left;">将数字形式的IP地址转化为以点分隔的IP地址</td></tr><tr><td style="text-align:left;">BENCHMARK(n,expr)</td><td style="text-align:left;">将表达式expr重复执行n次。用于测试MySQL处理expr表达式所耗费的时间</td></tr><tr><td style="text-align:left;">CONVERT(value USING char_code)</td><td style="text-align:left;">将value所使用的字符编码修改为char_code</td></tr></tbody></table><p>举例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> FORMAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 123.12</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> FORMAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">523</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 124</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> FORMAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 123 [如果n的值小于或者等于0，则只保留整数部分]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CONV(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 10000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CONV(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8888</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 22B8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CONV(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- NULL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> INET_ATON(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;192.168.1.100&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 3232235876 [计算方式 192*256^3+168*256^2+1*256+100]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> INET_NTOA(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3232235876</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- 192.168.1.100</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> BENCHMARK(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, MD5(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;mysql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span></code></pre></div><h2 id="_9-聚合函数" tabindex="-1">9. 聚合函数 <a class="header-anchor" href="#_9-聚合函数" aria-label="Permalink to “9. 聚合函数”">​</a></h2><p>聚合（或聚集、分组）函数，它是对一组数据进行汇总的函数，输入的是一组数据的集合，输出的是单个值。</p><p>聚合函数有6种类型，分别是<span style="color:blue;font-weight:bold;">AVG()、SUM()、MAX()、MIN()、COUNT()、GROUP_COUNT()</span>。</p><p><strong>聚合函数语法</strong></p><img src="`+O+`" alt="image.png"><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>聚合函数不能嵌套调用。比如不能出现类似“AVG(SUM(字段名称))”形式的调用。</p></div><h3 id="avg和sum函数" tabindex="-1">AVG和SUM函数 <a class="header-anchor" href="#avg和sum函数" aria-label="Permalink to “AVG和SUM函数”">​</a></h3><p>可以对<strong>数值型数据</strong>使用AVG 和 SUM 函数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary), </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary), </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  job_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;%REP%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8272</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">727273</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">11500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |   </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">273000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-------------+-------------+-------------+-------------+</span></span></code></pre></div><h3 id="min和max函数" tabindex="-1">MIN和MAX函数 <a class="header-anchor" href="#min和max函数" aria-label="Permalink to “MIN和MAX函数”">​</a></h3><p>可以对<strong>任意数据类型</strong>的数据使用 MIN 和 MAX 函数。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> MIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(hire_date), </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(hire_date)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  employee;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----------------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MIN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(hire_date) | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(hire_date) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----------------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1987</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">06</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">04</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----------------+----------------+</span></span></code></pre></div><h3 id="count函数" tabindex="-1">COUNT函数 <a class="header-anchor" href="#count函数" aria-label="Permalink to “COUNT函数”">​</a></h3><ul><li>COUNT(*)返回表中记录总数，适用于<strong>任意数据类型</strong>。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li>COUNT(expr) 返回<strong>expr不为空</strong>的记录总数。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(commission_pct) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li><strong>问题：用count()，count(1)，count(列名)谁好呢?</strong><br>其实，对于MyISAM引擎的表是没有区别的。这种引擎内部有一计数器在维护着行数。<br>Innodb引擎的表用count(*),count(1)直接读行数，复杂度是O(n)，因为innodb真的要去数一遍。但好于具体的count(列名)。</li><li><strong>问题：能不能使用count(列名)替换count(*)?</strong><br>不要使用 count(列名)来替代 <code>count(*)</code>，<code>count(*)</code>是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。<br>说明：count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行。</li></ul><h2 id="_10-group-by" tabindex="-1">10. GROUP BY <a class="header-anchor" href="#_10-group-by" aria-label="Permalink to “10. GROUP BY”">​</a></h2><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to “基本使用”">​</a></h3><p><strong>可以使用GROUP BY子句将表中的数据分成若干组</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> column, group_function(column)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> table</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[WHERE	condition]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[GROUP BY	group_by_expression]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[ORDER BY	column];</span></span></code></pre></div><p><strong>在SELECT列表中所有未包含在组函数中的列都应该包含在 GROUP BY子句中</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   dept_id, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+--------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| dept_id       | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+--------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|          </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4150</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3475</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">555556</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5760</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">70</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8955</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">882353</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">19333</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">333333</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|           </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8600</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|           </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10150</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+--------------+</span></span></code></pre></div><p>包含在 GROUP BY 子句中的列不必包含在SELECT 列表中</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)  |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4150</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3475</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">555556</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5760</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8955</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">882353</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">19333</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">333333</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|  </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8600</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10150</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--------------+</span></span></code></pre></div><h3 id="使用多个列分组" tabindex="-1">使用多个列分组 <a class="header-anchor" href="#使用多个列分组" aria-label="Permalink to “使用多个列分组”">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   dept_id, job_id, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id, job_id ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| dept_id | job_id     | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | AD_PRES    |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">24000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | AD_VP      |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">34000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | IT_PROG    |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">28800</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | FI_MGR     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | FI_ACCOUNT |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">39600</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | PU_MAN     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">11000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | PU_CLERK   |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">13900</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | ST_MAN     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">36400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | ST_CLERK   |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">55700</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | SA_MAN     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">61000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | SA_REP     |   </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">243500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | SA_REP     |     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | SH_CLERK   |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">64300</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | AD_ASST    |     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | MK_MAN     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">13000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | MK_REP     |     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | HR_REP     |     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">70</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | PR_REP     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | AC_MGR     |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> | AC_ACCOUNT |     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8300</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+------------+-------------+</span></span></code></pre></div><h3 id="group-by中使用with-rollup" tabindex="-1">GROUP BY中使用WITH ROLLUP <a class="header-anchor" href="#group-by中使用with-rollup" aria-label="Permalink to “GROUP BY中使用WITH ROLLUP”">​</a></h3><p>使用<code>WITH ROLLUP</code>关键字之后，在所有查询出的分组记录之后增加一条记录，该记录计算查询出的所有记录的总和，即统计记录数量。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WITH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ROLLUP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| dept_id | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|      </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">58000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">51600</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|     </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20300</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |   </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">129900</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------+-------------+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> coalesce</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dept_id, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;total&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WITH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ROLLUP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----------------------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">coalesce</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dept_id, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;total&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----------------------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                         |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">58000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">51600</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20300</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| total                      |   </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">129900</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">----------------------------+-------------+</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>当使用ROLLUP时，不能同时使用ORDER BY子句进行结果排序，即ROLLUP和ORDER BY是互相排斥的。</p></div><h2 id="_11-having" tabindex="-1">11. HAVING <a class="header-anchor" href="#_11-having" aria-label="Permalink to “11. HAVING”">​</a></h2><h3 id="基本使用-1" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用-1" aria-label="Permalink to “基本使用”">​</a></h3><p><strong>过滤分组：HAVING子句</strong></p><ol><li>行已经被分组。</li><li>使用了聚合函数。</li><li>满足HAVING 子句中条件的分组将被显示。</li><li>HAVING 不能单独使用，必须要跟 GROUP BY 一起使用。</li></ol><img src="`+M+`" alt="image.png"><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   dept_id, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">HAVING</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">| dept_id       | </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">13000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">11000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">14000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|            </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">24000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|           </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">|           </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |    </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">---------------+-------------+</span></span></code></pre></div><ul><li><strong>非法使用聚合函数：不能在 WHERE 子句中使用聚合函数。</strong></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   department_id, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> department_id;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ERROR </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1111</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (HY000): Invalid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> of group </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span></span></code></pre></div><h3 id="where和having的对比" tabindex="-1">WHERE和HAVING的对比 <a class="header-anchor" href="#where和having的对比" aria-label="Permalink to “WHERE和HAVING的对比”">​</a></h3><p><strong>区别1：WHERE 可以直接使用表中的字段作为筛选条件，但不能使用分组中的计算函数作为筛选条件；HAVING 必须要与 GROUP BY 配合使用，可以把分组计算的函数和分组字段作为筛选条件。</strong></p><p>这决定了，在需要对数据进行分组统计的时候，HAVING 可以完成 WHERE 不能完成的任务。这是因为，在查询语法结构中，WHERE 在 GROUP BY 之前，所以无法对分组结果进行筛选。HAVING 在 GROUP BY 之后，可以使用分组字段和分组中的计算函数，对分组的结果集进行筛选，这个功能是 WHERE 无法完成的。另外，WHERE排除的记录不再包括在分组中。</p><p>区别2：如果需要通过连接从关联表中获取需要的数据，WHERE 是先筛选后连接，而 HAVING 是先连接后筛选。 这一点，就决定了在关联查询中，WHERE 比 HAVING 更高效。因为 WHERE 可以先筛选，用一个筛选后的较小数据集和关联表进行连接，这样占用的资源比较少，执行效率也比较高。HAVING 则需要先把结果集准备好，也就是用未被筛选的数据集进行关联，然后对这个大的数据集进行筛选，这样占用的资源就比较多，执行效率也较低。</p><p>小结如下：</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"><strong>优点</strong></th><th style="text-align:left;"><strong>缺点</strong></th></tr></thead><tbody><tr><td style="text-align:left;">WHERE</td><td style="text-align:left;">先筛选数据再关联，执行效率高</td><td style="text-align:left;">不能使用分组中的计算函数进行筛选</td></tr><tr><td style="text-align:left;">HAVING</td><td style="text-align:left;">可以使用分组中的计算函数</td><td style="text-align:left;">在最后的结果集中进行筛选，执行效率较低</td></tr></tbody></table><p><strong>开发中的选择：</strong></p><p>WHERE 和 HAVING 也不是互相排斥的，我们可以在一个查询里面同时使用 WHERE 和 HAVING。包含分组统计函数的条件用 HAVING，普通条件用 WHERE。这样，我们就既利用了 WHERE 条件的高效快速，又发挥了 HAVING 可以使用包含分组统计函数的查询条件的优点。当数据量特别大的时候，运行效率会有很大的差别。</p>`,156);function H(s,P,q,W,G,V){const n=k,h=e("ClientOnly");return t(),d("div",null,[v,r(h,null,{default:y(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(t(),A(n,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),U])}const w=p(I,[["render",H]]);export{Q as __pageData,w as default};
